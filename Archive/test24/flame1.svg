<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="598" onload="init(evt)" viewBox="0 0 1200 598" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="598.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="581" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="matched" x="1090.00" y="581" > </text>
<g id="frames">
<g >
<title>rb::stat::Histogram&lt;0ul, 100000000ul, 200ul, 1000000000ul, rb::stat::Time&gt;::commit (19 samples, 0.02%)</title><rect x="1189.8" y="469" width="0.2" height="15.0" fill="rgb(233,210,21)" rx="2" ry="2" />
<text  x="1192.76" y="479.5" ></text>
</g>
<g >
<title>system_call_fastpath (21 samples, 0.02%)</title><rect x="917.1" y="501" width="0.2" height="15.0" fill="rgb(247,72,0)" rx="2" ry="2" />
<text  x="920.11" y="511.5" ></text>
</g>
<g >
<title>__audit_syscall_entry (11 samples, 0.01%)</title><rect x="192.1" y="485" width="0.1" height="15.0" fill="rgb(208,177,22)" rx="2" ry="2" />
<text  x="195.10" y="495.5" ></text>
</g>
<g >
<title>system_call_fastpath (1,046 samples, 0.97%)</title><rect x="295.7" y="501" width="11.5" height="15.0" fill="rgb(242,83,1)" rx="2" ry="2" />
<text  x="298.72" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArrayInline (74 samples, 0.07%)</title><rect x="707.4" y="501" width="0.9" height="15.0" fill="rgb(237,159,25)" rx="2" ry="2" />
<text  x="710.45" y="511.5" ></text>
</g>
<g >
<title>PushLocal (14 samples, 0.01%)</title><rect x="690.1" y="501" width="0.1" height="15.0" fill="rgb(217,185,47)" rx="2" ry="2" />
<text  x="693.06" y="511.5" ></text>
</g>
<g >
<title>igb_poll (16 samples, 0.01%)</title><rect x="613.5" y="389" width="0.2" height="15.0" fill="rgb(215,146,8)" rx="2" ry="2" />
<text  x="616.51" y="399.5" ></text>
</g>
<g >
<title>__strrchr_sse42 (81 samples, 0.08%)</title><rect x="674.0" y="485" width="0.9" height="15.0" fill="rgb(217,163,31)" rx="2" ry="2" />
<text  x="676.98" y="495.5" ></text>
</g>
<g >
<title>std::map&lt;std::string, std::string, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::operator[] (164 samples, 0.15%)</title><rect x="945.3" y="517" width="1.7" height="15.0" fill="rgb(206,3,26)" rx="2" ry="2" />
<text  x="948.25" y="527.5" ></text>
</g>
<g >
<title>std::string::operator std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; (10 samples, 0.01%)</title><rect x="688.8" y="421" width="0.1" height="15.0" fill="rgb(249,61,42)" rx="2" ry="2" />
<text  x="691.79" y="431.5" ></text>
</g>
<g >
<title>__memcpy_ssse3_back (240 samples, 0.22%)</title><rect x="817.7" y="485" width="2.7" height="15.0" fill="rgb(211,121,15)" rx="2" ry="2" />
<text  x="820.73" y="495.5" ></text>
</g>
<g >
<title>update_curr (19 samples, 0.02%)</title><rect x="187.4" y="341" width="0.2" height="15.0" fill="rgb(236,218,47)" rx="2" ry="2" />
<text  x="190.38" y="351.5" ></text>
</g>
<g >
<title>local_apic_timer_interrupt (16 samples, 0.01%)</title><rect x="489.1" y="469" width="0.2" height="15.0" fill="rgb(254,156,52)" rx="2" ry="2" />
<text  x="492.13" y="479.5" ></text>
</g>
<g >
<title>std::string::_M_copy (87 samples, 0.08%)</title><rect x="973.4" y="485" width="1.0" height="15.0" fill="rgb(219,193,24)" rx="2" ry="2" />
<text  x="976.42" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, std::string&gt;, std::_Select1st&lt;std::pair&lt;std::string const, std::string&gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::lower_bound (213 samples, 0.20%)</title><rect x="682.0" y="453" width="2.4" height="15.0" fill="rgb(218,3,22)" rx="2" ry="2" />
<text  x="685.02" y="463.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::unique_lock (13 samples, 0.01%)</title><rect x="322.0" y="485" width="0.1" height="15.0" fill="rgb(237,112,24)" rx="2" ry="2" />
<text  x="324.96" y="495.5" ></text>
</g>
<g >
<title>system_call_fastpath (37 samples, 0.03%)</title><rect x="143.3" y="485" width="0.4" height="15.0" fill="rgb(233,127,14)" rx="2" ry="2" />
<text  x="146.26" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;bannerd::UrlObjectLimitEx const*, bannerd::UrlObjectLimitEx const*, std::allocator&lt;bannerd::UrlObjectLimitEx const*&gt;, std::__detail::_Identity, std::equal_to&lt;bannerd::UrlObjectLimitEx const*&gt;, std::hash&lt;bannerd::UrlObjectLimitEx const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (23 samples, 0.02%)</title><rect x="920.1" y="517" width="0.3" height="15.0" fill="rgb(230,113,50)" rx="2" ry="2" />
<text  x="923.12" y="527.5" ></text>
</g>
<g >
<title>BN_uadd (378 samples, 0.35%)</title><rect x="81.1" y="517" width="4.1" height="15.0" fill="rgb(228,17,11)" rx="2" ry="2" />
<text  x="84.07" y="527.5" ></text>
</g>
<g >
<title>rb::SafeQueueBase&lt;rb::queue_wrapper&lt;bannerd::engine::CacheTask&gt; &gt;::timedPopSeveral&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;, std::vector&lt;bannerd::engine::CacheTask, std::allocator&lt;bannerd::engine::CacheTask&gt; &gt; &gt; (351 samples, 0.33%)</title><rect x="318.1" y="501" width="3.9" height="15.0" fill="rgb(235,47,10)" rx="2" ry="2" />
<text  x="321.11" y="511.5" ></text>
</g>
<g >
<title>trg::tarantool_client::epoll_loop::switch_to_send (144 samples, 0.13%)</title><rect x="1168.2" y="517" width="1.6" height="15.0" fill="rgb(206,110,41)" rx="2" ry="2" />
<text  x="1171.23" y="527.5" ></text>
</g>
<g >
<title>bn_sqr8x_mont (510 samples, 0.47%)</title><rect x="894.8" y="501" width="5.6" height="15.0" fill="rgb(219,162,47)" rx="2" ry="2" />
<text  x="897.79" y="511.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (25 samples, 0.02%)</title><rect x="899.0" y="357" width="0.3" height="15.0" fill="rgb(229,119,12)" rx="2" ry="2" />
<text  x="901.99" y="367.5" ></text>
</g>
<g >
<title>update_curr (29 samples, 0.03%)</title><rect x="299.1" y="341" width="0.3" height="15.0" fill="rgb(227,142,31)" rx="2" ry="2" />
<text  x="302.13" y="351.5" ></text>
</g>
<g >
<title>std::ostream::_M_insert&lt;unsigned long&gt; (29 samples, 0.03%)</title><rect x="947.1" y="517" width="0.3" height="15.0" fill="rgb(211,18,14)" rx="2" ry="2" />
<text  x="950.07" y="527.5" ></text>
</g>
<g >
<title>init_string (11 samples, 0.01%)</title><rect x="676.5" y="501" width="0.2" height="15.0" fill="rgb(223,43,20)" rx="2" ry="2" />
<text  x="679.53" y="511.5" ></text>
</g>
<g >
<title>extractAnchor (85 samples, 0.08%)</title><rect x="673.9" y="517" width="1.0" height="15.0" fill="rgb(234,93,50)" rx="2" ry="2" />
<text  x="676.94" y="527.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (12 samples, 0.01%)</title><rect x="355.9" y="421" width="0.2" height="15.0" fill="rgb(234,138,51)" rx="2" ry="2" />
<text  x="358.94" y="431.5" ></text>
</g>
<g >
<title>std::string::_S_construct_aux&lt;char const*&gt; (139 samples, 0.13%)</title><rect x="942.9" y="485" width="1.5" height="15.0" fill="rgb(244,221,53)" rx="2" ry="2" />
<text  x="945.85" y="495.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (80 samples, 0.07%)</title><rect x="840.7" y="453" width="0.9" height="15.0" fill="rgb(254,183,52)" rx="2" ry="2" />
<text  x="843.68" y="463.5" ></text>
</g>
<g >
<title>__close_nocancel (18 samples, 0.02%)</title><rect x="630.3" y="501" width="0.1" height="15.0" fill="rgb(227,65,3)" rx="2" ry="2" />
<text  x="633.25" y="511.5" ></text>
</g>
<g >
<title>nmi (31 samples, 0.03%)</title><rect x="89.9" y="501" width="0.3" height="15.0" fill="rgb(206,141,12)" rx="2" ry="2" />
<text  x="92.86" y="511.5" ></text>
</g>
<g >
<title>SYSC_sendto (285 samples, 0.26%)</title><rect x="282.1" y="469" width="3.1" height="15.0" fill="rgb(220,11,7)" rx="2" ry="2" />
<text  x="285.10" y="479.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (31 samples, 0.03%)</title><rect x="801.9" y="501" width="0.4" height="15.0" fill="rgb(243,27,24)" rx="2" ry="2" />
<text  x="804.92" y="511.5" ></text>
</g>
<g >
<title>sys_sendto (37 samples, 0.03%)</title><rect x="1164.3" y="469" width="0.4" height="15.0" fill="rgb(229,193,2)" rx="2" ry="2" />
<text  x="1167.26" y="479.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (83 samples, 0.08%)</title><rect x="840.6" y="485" width="1.0" height="15.0" fill="rgb(248,198,13)" rx="2" ry="2" />
<text  x="843.65" y="495.5" ></text>
</g>
<g >
<title>std::string::size (34 samples, 0.03%)</title><rect x="104.5" y="469" width="0.3" height="15.0" fill="rgb(245,134,50)" rx="2" ry="2" />
<text  x="107.45" y="479.5" ></text>
</g>
<g >
<title>__schedule (25 samples, 0.02%)</title><rect x="128.2" y="405" width="0.3" height="15.0" fill="rgb(221,68,16)" rx="2" ry="2" />
<text  x="131.23" y="415.5" ></text>
</g>
<g >
<title>perf_event_task (29 samples, 0.03%)</title><rect x="138.8" y="405" width="0.3" height="15.0" fill="rgb(243,139,10)" rx="2" ry="2" />
<text  x="141.76" y="415.5" ></text>
</g>
<g >
<title>trg::protobuf::bannerd::EventMsg::SharedDtor (16 samples, 0.01%)</title><rect x="1152.8" y="517" width="0.2" height="15.0" fill="rgb(219,166,5)" rx="2" ry="2" />
<text  x="1155.81" y="527.5" ></text>
</g>
<g >
<title>memcpy@plt (64 samples, 0.06%)</title><rect x="809.2" y="517" width="0.7" height="15.0" fill="rgb(246,56,12)" rx="2" ry="2" />
<text  x="812.24" y="527.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (58 samples, 0.05%)</title><rect x="700.4" y="389" width="0.7" height="15.0" fill="rgb(213,147,16)" rx="2" ry="2" />
<text  x="703.42" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (21 samples, 0.02%)</title><rect x="919.8" y="469" width="0.2" height="15.0" fill="rgb(244,124,13)" rx="2" ry="2" />
<text  x="922.76" y="479.5" ></text>
</g>
<g >
<title>do_nanosleep (78 samples, 0.07%)</title><rect x="128.6" y="453" width="0.9" height="15.0" fill="rgb(205,120,27)" rx="2" ry="2" />
<text  x="131.62" y="463.5" ></text>
</g>
<g >
<title>queued_spin_lock_slowpath (93 samples, 0.09%)</title><rect x="180.1" y="389" width="1.0" height="15.0" fill="rgb(252,127,2)" rx="2" ry="2" />
<text  x="183.08" y="399.5" ></text>
</g>
<g >
<title>count (22 samples, 0.02%)</title><rect x="103.8" y="501" width="0.2" height="15.0" fill="rgb(243,226,17)" rx="2" ry="2" />
<text  x="106.76" y="511.5" ></text>
</g>
<g >
<title>__memset (39 samples, 0.04%)</title><rect x="140.1" y="357" width="0.4" height="15.0" fill="rgb(236,45,1)" rx="2" ry="2" />
<text  x="143.06" y="367.5" ></text>
</g>
<g >
<title>do_realloc_with_callback (203 samples, 0.19%)</title><rect x="1139.9" y="485" width="2.2" height="15.0" fill="rgb(212,214,11)" rx="2" ry="2" />
<text  x="1142.89" y="495.5" ></text>
</g>
<g >
<title>finish_task_switch (111 samples, 0.10%)</title><rect x="145.8" y="373" width="1.2" height="15.0" fill="rgb(240,37,36)" rx="2" ry="2" />
<text  x="148.76" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, std::string&gt;, std::_Select1st&lt;std::pair&lt;std::string const, std::string&gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::lower_bound (146 samples, 0.14%)</title><rect x="945.4" y="485" width="1.6" height="15.0" fill="rgb(221,129,27)" rx="2" ry="2" />
<text  x="948.45" y="495.5" ></text>
</g>
<g >
<title>rapidjson::GenericReader&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::UTF8&lt;char&gt;, rapidjson::CrtAllocator&gt;::ParseString&lt;0u, rapidjson::GenericStringStream&lt;rapidjson::UTF8&lt;char&gt; &gt;, rapidjson::GenericDocument&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::CrtAllocator, rapidjson::CrtAllocator&gt; &gt; (26 samples, 0.02%)</title><rect x="832.6" y="517" width="0.3" height="15.0" fill="rgb(237,4,45)" rx="2" ry="2" />
<text  x="835.57" y="527.5" ></text>
</g>
<g >
<title>set (226 samples, 0.21%)</title><rect x="436.7" y="485" width="2.5" height="15.0" fill="rgb(239,195,47)" rx="2" ry="2" />
<text  x="439.72" y="495.5" ></text>
</g>
<g >
<title>__nanosleep_nocancel (54 samples, 0.05%)</title><rect x="293.4" y="517" width="0.6" height="15.0" fill="rgb(215,118,3)" rx="2" ry="2" />
<text  x="296.43" y="527.5" ></text>
</g>
<g >
<title>tcmalloc::PageHeap::TryGetSizeClass (263 samples, 0.24%)</title><rect x="1113.9" y="453" width="2.8" height="15.0" fill="rgb(250,215,12)" rx="2" ry="2" />
<text  x="1116.85" y="463.5" ></text>
</g>
<g >
<title>timerqueue_add (29 samples, 0.03%)</title><rect x="297.0" y="389" width="0.3" height="15.0" fill="rgb(252,84,16)" rx="2" ry="2" />
<text  x="300.02" y="399.5" ></text>
</g>
<g >
<title>OPENSSL_cleanse (601 samples, 0.56%)</title><rect x="105.0" y="517" width="6.5" height="15.0" fill="rgb(254,24,23)" rx="2" ry="2" />
<text  x="107.95" y="527.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (10 samples, 0.01%)</title><rect x="892.7" y="485" width="0.1" height="15.0" fill="rgb(207,213,51)" rx="2" ry="2" />
<text  x="895.71" y="495.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (35 samples, 0.03%)</title><rect x="668.0" y="405" width="0.4" height="15.0" fill="rgb(206,110,4)" rx="2" ry="2" />
<text  x="671.03" y="415.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;bannerd::Tabular const&gt;::~shared_ptr (18 samples, 0.02%)</title><rect x="356.1" y="485" width="0.2" height="15.0" fill="rgb(219,200,53)" rx="2" ry="2" />
<text  x="359.08" y="495.5" ></text>
</g>
<g >
<title>__schedule (10 samples, 0.01%)</title><rect x="134.0" y="389" width="0.1" height="15.0" fill="rgb(215,120,18)" rx="2" ry="2" />
<text  x="136.96" y="399.5" ></text>
</g>
<g >
<title>system_call_fastpath (535 samples, 0.50%)</title><rect x="185.0" y="501" width="5.8" height="15.0" fill="rgb(247,78,34)" rx="2" ry="2" />
<text  x="187.98" y="511.5" ></text>
</g>
<g >
<title>__schedule (11 samples, 0.01%)</title><rect x="893.7" y="373" width="0.2" height="15.0" fill="rgb(230,135,51)" rx="2" ry="2" />
<text  x="896.74" y="383.5" ></text>
</g>
<g >
<title>std::pair&lt;std::string const, std::string&gt;::pair&lt;std::string const&amp;, 0ul&gt; (19 samples, 0.02%)</title><rect x="157.5" y="405" width="0.2" height="15.0" fill="rgb(225,173,10)" rx="2" ry="2" />
<text  x="160.52" y="415.5" ></text>
</g>
<g >
<title>finish_task_switch (10 samples, 0.01%)</title><rect x="128.3" y="389" width="0.1" height="15.0" fill="rgb(209,48,53)" rx="2" ry="2" />
<text  x="131.33" y="399.5" ></text>
</g>
<g >
<title>perf_pmu_sched_task (12 samples, 0.01%)</title><rect x="146.8" y="341" width="0.2" height="15.0" fill="rgb(235,58,15)" rx="2" ry="2" />
<text  x="149.82" y="351.5" ></text>
</g>
<g >
<title>std::string::compare (208 samples, 0.19%)</title><rect x="969.3" y="517" width="2.3" height="15.0" fill="rgb(250,102,4)" rx="2" ry="2" />
<text  x="972.33" y="527.5" ></text>
</g>
<g >
<title>__GI__IO_default_xsputn (53 samples, 0.05%)</title><rect x="168.1" y="517" width="0.6" height="15.0" fill="rgb(217,84,38)" rx="2" ry="2" />
<text  x="171.09" y="527.5" ></text>
</g>
<g >
<title>sysret_check (14 samples, 0.01%)</title><rect x="136.4" y="485" width="0.1" height="15.0" fill="rgb(223,172,45)" rx="2" ry="2" />
<text  x="139.38" y="495.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (20 samples, 0.02%)</title><rect x="145.1" y="405" width="0.2" height="15.0" fill="rgb(231,201,37)" rx="2" ry="2" />
<text  x="148.11" y="415.5" ></text>
</g>
<g >
<title>bannerd::store::ActiveCampaignIndex::byPad (139 samples, 0.13%)</title><rect x="422.2" y="485" width="1.5" height="15.0" fill="rgb(215,175,1)" rx="2" ry="2" />
<text  x="425.17" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::UnknownFieldSet::~UnknownFieldSet (14 samples, 0.01%)</title><rect x="705.8" y="501" width="0.2" height="15.0" fill="rgb(215,68,48)" rx="2" ry="2" />
<text  x="708.83" y="511.5" ></text>
</g>
<g >
<title>finish_task_switch (33 samples, 0.03%)</title><rect x="853.1" y="341" width="0.3" height="15.0" fill="rgb(254,40,26)" rx="2" ry="2" />
<text  x="856.06" y="351.5" ></text>
</g>
<g >
<title>tc_new (168 samples, 0.16%)</title><rect x="164.5" y="501" width="1.8" height="15.0" fill="rgb(227,189,53)" rx="2" ry="2" />
<text  x="167.49" y="511.5" ></text>
</g>
<g >
<title>perf_event_sched_in (25 samples, 0.02%)</title><rect x="320.4" y="245" width="0.3" height="15.0" fill="rgb(231,111,42)" rx="2" ry="2" />
<text  x="323.40" y="255.5" ></text>
</g>
<g >
<title>sock_poll (10 samples, 0.01%)</title><rect x="317.1" y="453" width="0.1" height="15.0" fill="rgb(229,79,11)" rx="2" ry="2" />
<text  x="320.12" y="463.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (11 samples, 0.01%)</title><rect x="931.1" y="293" width="0.1" height="15.0" fill="rgb(253,110,0)" rx="2" ry="2" />
<text  x="934.12" y="303.5" ></text>
</g>
<g >
<title>tc_newarray (27 samples, 0.03%)</title><rect x="1139.6" y="501" width="0.3" height="15.0" fill="rgb(237,115,21)" rx="2" ry="2" />
<text  x="1142.60" y="511.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::operator (69 samples, 0.06%)</title><rect x="675.1" y="437" width="0.7" height="15.0" fill="rgb(244,179,35)" rx="2" ry="2" />
<text  x="678.07" y="447.5" ></text>
</g>
<g >
<title>tcmalloc::ThreadCache::Allocate (110 samples, 0.10%)</title><rect x="164.5" y="469" width="1.3" height="15.0" fill="rgb(205,31,52)" rx="2" ry="2" />
<text  x="167.55" y="479.5" ></text>
</g>
<g >
<title>std::string::operator= (12 samples, 0.01%)</title><rect x="702.7" y="501" width="0.2" height="15.0" fill="rgb(252,149,42)" rx="2" ry="2" />
<text  x="705.73" y="511.5" ></text>
</g>
<g >
<title>nmi (70 samples, 0.06%)</title><rect x="793.9" y="485" width="0.8" height="15.0" fill="rgb(221,199,34)" rx="2" ry="2" />
<text  x="796.90" y="495.5" ></text>
</g>
<g >
<title>system_call_fastpath (96 samples, 0.09%)</title><rect x="135.2" y="485" width="1.0" height="15.0" fill="rgb(218,202,13)" rx="2" ry="2" />
<text  x="138.17" y="495.5" ></text>
</g>
<g >
<title>std::map&lt;std::string, std::string, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::find&lt;char const*&gt; (13 samples, 0.01%)</title><rect x="699.0" y="501" width="0.2" height="15.0" fill="rgb(241,50,29)" rx="2" ry="2" />
<text  x="702.01" y="511.5" ></text>
</g>
<g >
<title>do_futex (135 samples, 0.13%)</title><rect x="320.0" y="357" width="1.5" height="15.0" fill="rgb(224,53,4)" rx="2" ry="2" />
<text  x="322.99" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; &gt;::swap (49 samples, 0.05%)</title><rect x="925.2" y="517" width="0.5" height="15.0" fill="rgb(247,32,20)" rx="2" ry="2" />
<text  x="928.19" y="527.5" ></text>
</g>
<g >
<title>ctx_resched (18 samples, 0.02%)</title><rect x="802.3" y="389" width="0.2" height="15.0" fill="rgb(232,23,2)" rx="2" ry="2" />
<text  x="805.26" y="399.5" ></text>
</g>
<g >
<title>system_call_after_swapgs (13 samples, 0.01%)</title><rect x="143.1" y="485" width="0.2" height="15.0" fill="rgb(238,217,50)" rx="2" ry="2" />
<text  x="146.12" y="495.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::operator&amp;= (222 samples, 0.21%)</title><rect x="812.1" y="501" width="2.4" height="15.0" fill="rgb(233,27,45)" rx="2" ry="2" />
<text  x="815.08" y="511.5" ></text>
</g>
<g >
<title>trg::json_encode (34 samples, 0.03%)</title><rect x="1150.7" y="517" width="0.4" height="15.0" fill="rgb(220,11,27)" rx="2" ry="2" />
<text  x="1153.75" y="527.5" ></text>
</g>
<g >
<title>__pthread_cond_timedwait (14 samples, 0.01%)</title><rect x="977.4" y="453" width="0.2" height="15.0" fill="rgb(236,193,48)" rx="2" ry="2" />
<text  x="980.44" y="463.5" ></text>
</g>
<g >
<title>operator (37 samples, 0.03%)</title><rect x="815.4" y="485" width="0.4" height="15.0" fill="rgb(236,164,14)" rx="2" ry="2" />
<text  x="818.42" y="495.5" ></text>
</g>
<g >
<title>getLocationVariable (28 samples, 0.03%)</title><rect x="689.4" y="517" width="0.3" height="15.0" fill="rgb(235,180,25)" rx="2" ry="2" />
<text  x="692.41" y="527.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::getWide (37 samples, 0.03%)</title><rect x="423.7" y="485" width="0.4" height="15.0" fill="rgb(222,153,18)" rx="2" ry="2" />
<text  x="426.69" y="495.5" ></text>
</g>
<g >
<title>exec_code (2,721 samples, 2.53%)</title><rect x="644.1" y="517" width="29.8" height="15.0" fill="rgb(251,167,3)" rx="2" ry="2" />
<text  x="647.13" y="527.5" >ex..</text>
</g>
<g >
<title>addKey (51 samples, 0.05%)</title><rect x="103.2" y="501" width="0.6" height="15.0" fill="rgb(254,47,42)" rx="2" ry="2" />
<text  x="106.20" y="511.5" ></text>
</g>
<g >
<title>x86_pmu_enable (49 samples, 0.05%)</title><rect x="146.3" y="325" width="0.5" height="15.0" fill="rgb(252,78,44)" rx="2" ry="2" />
<text  x="149.28" y="335.5" ></text>
</g>
<g >
<title>tcp_transmit_skb (11 samples, 0.01%)</title><rect x="142.6" y="341" width="0.1" height="15.0" fill="rgb(210,112,18)" rx="2" ry="2" />
<text  x="145.57" y="351.5" ></text>
</g>
<g >
<title>tcmalloc::SLL_Push (123 samples, 0.11%)</title><rect x="1120.8" y="421" width="1.3" height="15.0" fill="rgb(226,213,26)" rx="2" ry="2" />
<text  x="1123.80" y="431.5" ></text>
</g>
<g >
<title>__GI___strdup (10 samples, 0.01%)</title><rect x="190.9" y="517" width="0.1" height="15.0" fill="rgb(209,38,19)" rx="2" ry="2" />
<text  x="193.87" y="527.5" ></text>
</g>
<g >
<title>do_futex (86 samples, 0.08%)</title><rect x="286.0" y="469" width="1.0" height="15.0" fill="rgb(217,99,15)" rx="2" ry="2" />
<text  x="289.05" y="479.5" ></text>
</g>
<g >
<title>system_call_fastpath (16 samples, 0.01%)</title><rect x="133.8" y="485" width="0.2" height="15.0" fill="rgb(228,220,20)" rx="2" ry="2" />
<text  x="136.79" y="495.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::count (17 samples, 0.02%)</title><rect x="323.8" y="485" width="0.2" height="15.0" fill="rgb(241,227,0)" rx="2" ry="2" />
<text  x="326.81" y="495.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;bannerd::TargetingCollection::Record&lt;bool const&amp;, bannerd::targeting::StringSet const&amp;&gt; const*, std::vector&lt;bannerd::TargetingCollection::Record&lt;bool const&amp;, bannerd::targeting::StringSet const&amp;&gt;, std::allocator&lt;bannerd::TargetingCollection::Record&lt;bool const&amp;, bannerd::targeting::StringSet const&amp;&gt; &gt; &gt; &gt;, bannerd::TargetingCollection::Record&lt;bool const&amp;, bannerd::targeting::StringSet const&amp;&gt;, __gnu_cxx::__ops::_Iter_less_val&gt; (31 samples, 0.03%)</title><rect x="161.5" y="501" width="0.4" height="15.0" fill="rgb(224,188,24)" rx="2" ry="2" />
<text  x="164.55" y="511.5" ></text>
</g>
<g >
<title>inline_mysql_rwlock_wrlock (831 samples, 0.77%)</title><rect x="907.7" y="469" width="9.1" height="15.0" fill="rgb(237,209,11)" rx="2" ry="2" />
<text  x="910.73" y="479.5" ></text>
</g>
<g >
<title>std::string::operator std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; (20 samples, 0.02%)</title><rect x="414.0" y="421" width="0.2" height="15.0" fill="rgb(213,157,27)" rx="2" ry="2" />
<text  x="417.03" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;target::dynamic_bitset, std::allocator&lt;target::dynamic_bitset&gt; &gt;::operator[] (170 samples, 0.16%)</title><rect x="993.1" y="485" width="1.8" height="15.0" fill="rgb(253,103,17)" rx="2" ry="2" />
<text  x="996.08" y="495.5" ></text>
</g>
<g >
<title>equal_range&lt;__gnu_cxx::__normal_iterator&lt;const bannerd::details::InternalStorage::Record*, std::vector&lt;bannerd::details::InternalStorage::Record&gt; &gt;, bannerd::details::InternalStorage::Record, (anonymous namespace)::CompareByClassAndRole&gt; (999 samples, 0.93%)</title><rect x="381.9" y="501" width="10.9" height="15.0" fill="rgb(237,222,1)" rx="2" ry="2" />
<text  x="384.85" y="511.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt; &gt; (56 samples, 0.05%)</title><rect x="667.8" y="437" width="0.6" height="15.0" fill="rgb(241,22,10)" rx="2" ry="2" />
<text  x="670.81" y="447.5" ></text>
</g>
<g >
<title>CRYPTO_free (193 samples, 0.18%)</title><rect x="92.2" y="517" width="2.1" height="15.0" fill="rgb(215,153,21)" rx="2" ry="2" />
<text  x="95.16" y="527.5" ></text>
</g>
<g >
<title>std::string::size (33 samples, 0.03%)</title><rect x="657.4" y="373" width="0.3" height="15.0" fill="rgb(226,87,32)" rx="2" ry="2" />
<text  x="660.39" y="383.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (13 samples, 0.01%)</title><rect x="643.9" y="485" width="0.1" height="15.0" fill="rgb(205,36,30)" rx="2" ry="2" />
<text  x="646.87" y="495.5" ></text>
</g>
<g >
<title>nmi (90 samples, 0.08%)</title><rect x="1188.7" y="501" width="0.9" height="15.0" fill="rgb(223,213,40)" rx="2" ry="2" />
<text  x="1191.66" y="511.5" ></text>
</g>
<g >
<title>base::subtle::Acquire_CompareAndSwap (11 samples, 0.01%)</title><rect x="1143.8" y="485" width="0.2" height="15.0" fill="rgb(236,31,43)" rx="2" ry="2" />
<text  x="1146.84" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;::_M_realloc_insert&lt;std::string const&amp;&gt; (20 samples, 0.02%)</title><rect x="978.5" y="517" width="0.2" height="15.0" fill="rgb(243,212,4)" rx="2" ry="2" />
<text  x="981.49" y="527.5" ></text>
</g>
<g >
<title>__libc_free (14 samples, 0.01%)</title><rect x="164.3" y="485" width="0.2" height="15.0" fill="rgb(209,219,27)" rx="2" ry="2" />
<text  x="167.32" y="495.5" ></text>
</g>
<g >
<title>bannerd::store::ActiveCampaignIndex::setPadFilters (21 samples, 0.02%)</title><rect x="436.0" y="469" width="0.3" height="15.0" fill="rgb(235,128,8)" rx="2" ry="2" />
<text  x="439.05" y="479.5" ></text>
</g>
<g >
<title>process_backlog (17 samples, 0.02%)</title><rect x="284.5" y="181" width="0.2" height="15.0" fill="rgb(244,79,32)" rx="2" ry="2" />
<text  x="287.49" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; &gt;::find (13 samples, 0.01%)</title><rect x="672.9" y="501" width="0.2" height="15.0" fill="rgb(224,158,35)" rx="2" ry="2" />
<text  x="675.91" y="511.5" ></text>
</g>
<g >
<title>BN_CTX_end (103 samples, 0.10%)</title><rect x="20.5" y="517" width="1.2" height="15.0" fill="rgb(206,145,21)" rx="2" ry="2" />
<text  x="23.55" y="527.5" ></text>
</g>
<g >
<title>std::string::operator std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; (43 samples, 0.04%)</title><rect x="685.4" y="389" width="0.5" height="15.0" fill="rgb(212,71,27)" rx="2" ry="2" />
<text  x="688.39" y="399.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::find_next (11 samples, 0.01%)</title><rect x="417.3" y="501" width="0.1" height="15.0" fill="rgb(225,209,20)" rx="2" ry="2" />
<text  x="420.27" y="511.5" ></text>
</g>
<g >
<title>std::string::operator+= (18 samples, 0.02%)</title><rect x="710.3" y="501" width="0.2" height="15.0" fill="rgb(226,188,37)" rx="2" ry="2" />
<text  x="713.34" y="511.5" ></text>
</g>
<g >
<title>rb::urlenc (151 samples, 0.14%)</title><rect x="331.7" y="501" width="1.7" height="15.0" fill="rgb(242,53,16)" rx="2" ry="2" />
<text  x="334.72" y="511.5" ></text>
</g>
<g >
<title>lower_bound&lt;const (anonymous namespace)::ProcFunction*, (anonymous namespace)::ProcFunction, (anonymous namespace)::findFunction (17 samples, 0.02%)</title><rect x="322.7" y="453" width="0.2" height="15.0" fill="rgb(208,86,35)" rx="2" ry="2" />
<text  x="325.69" y="463.5" ></text>
</g>
<g >
<title>sha1_block_data_order_avx (58 samples, 0.05%)</title><rect x="156.1" y="501" width="0.7" height="15.0" fill="rgb(245,216,51)" rx="2" ry="2" />
<text  x="159.12" y="511.5" ></text>
</g>
<g >
<title>target::bitmap::Index&lt;unsigned int, unsigned int, std::unordered_map&lt;unsigned int, unsigned int, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, unsigned int&gt; &gt; &gt; &gt;::reset&lt;profile::build_geo, std::vector&lt;bannerd::store::ActiveCampaign const*, std::allocator&lt;bannerd::store::ActiveCampaign const*&gt; &gt;, bool  (9,348 samples, 8.68%)</title><rect x="991.7" y="517" width="102.4" height="15.0" fill="rgb(209,210,35)" rx="2" ry="2" />
<text  x="994.71" y="527.5" >target::bitm..</text>
</g>
<g >
<title>sk_stream_alloc_skb (19 samples, 0.02%)</title><rect x="283.7" y="405" width="0.2" height="15.0" fill="rgb(228,121,27)" rx="2" ry="2" />
<text  x="286.72" y="415.5" ></text>
</g>
<g >
<title>std::string::compare (166 samples, 0.15%)</title><rect x="682.5" y="373" width="1.9" height="15.0" fill="rgb(208,27,32)" rx="2" ry="2" />
<text  x="685.54" y="383.5" ></text>
</g>
<g >
<title>trg::tarantool_client::epoll_loop::prepare_to_new_request (55 samples, 0.05%)</title><rect x="1166.1" y="485" width="0.6" height="15.0" fill="rgb(226,176,46)" rx="2" ry="2" />
<text  x="1169.06" y="495.5" ></text>
</g>
<g >
<title>operator (39 samples, 0.04%)</title><rect x="672.3" y="469" width="0.5" height="15.0" fill="rgb(212,168,27)" rx="2" ry="2" />
<text  x="675.35" y="479.5" ></text>
</g>
<g >
<title>__audit_syscall_entry (37 samples, 0.03%)</title><rect x="287.2" y="485" width="0.4" height="15.0" fill="rgb(243,217,37)" rx="2" ry="2" />
<text  x="290.16" y="495.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::count (10 samples, 0.01%)</title><rect x="1094.3" y="517" width="0.1" height="15.0" fill="rgb(237,203,43)" rx="2" ry="2" />
<text  x="1097.32" y="527.5" ></text>
</g>
<g >
<title>hash_futex (14 samples, 0.01%)</title><rect x="291.0" y="453" width="0.2" height="15.0" fill="rgb(219,152,51)" rx="2" ry="2" />
<text  x="294.04" y="463.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::operator (78 samples, 0.07%)</title><rect x="685.0" y="421" width="0.9" height="15.0" fill="rgb(248,32,15)" rx="2" ry="2" />
<text  x="688.00" y="431.5" ></text>
</g>
<g >
<title>__schedule (11 samples, 0.01%)</title><rect x="856.8" y="389" width="0.1" height="15.0" fill="rgb(249,146,14)" rx="2" ry="2" />
<text  x="859.77" y="399.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (12 samples, 0.01%)</title><rect x="322.0" y="421" width="0.1" height="15.0" fill="rgb(214,132,8)" rx="2" ry="2" />
<text  x="324.97" y="431.5" ></text>
</g>
<g >
<title>trg::protobuf::rb2::TargetMsg::SharedDtor (31 samples, 0.03%)</title><rect x="1163.0" y="517" width="0.3" height="15.0" fill="rgb(237,105,46)" rx="2" ry="2" />
<text  x="1165.96" y="527.5" ></text>
</g>
<g >
<title>trg::protobuf::rb2::TargetMsg::~TargetMsg (27 samples, 0.03%)</title><rect x="1163.7" y="517" width="0.3" height="15.0" fill="rgb(213,158,18)" rx="2" ry="2" />
<text  x="1166.70" y="527.5" ></text>
</g>
<g >
<title>scheduler_tick (13 samples, 0.01%)</title><rect x="265.6" y="373" width="0.1" height="15.0" fill="rgb(228,67,1)" rx="2" ry="2" />
<text  x="268.57" y="383.5" ></text>
</g>
<g >
<title>nmi (22 samples, 0.02%)</title><rect x="438.9" y="421" width="0.3" height="15.0" fill="rgb(242,95,1)" rx="2" ry="2" />
<text  x="441.93" y="431.5" ></text>
</g>
<g >
<title>tcmalloc::SLL_TryPop (350 samples, 0.32%)</title><rect x="1134.3" y="453" width="3.8" height="15.0" fill="rgb(216,5,22)" rx="2" ry="2" />
<text  x="1137.25" y="463.5" ></text>
</g>
<g >
<title>std::string::_M_assign (13 samples, 0.01%)</title><rect x="154.9" y="421" width="0.2" height="15.0" fill="rgb(232,16,47)" rx="2" ry="2" />
<text  x="157.92" y="431.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (51 samples, 0.05%)</title><rect x="293.5" y="469" width="0.5" height="15.0" fill="rgb(214,212,3)" rx="2" ry="2" />
<text  x="296.46" y="479.5" ></text>
</g>
<g >
<title>__strlen_sse2_pminub (30 samples, 0.03%)</title><rect x="309.9" y="501" width="0.4" height="15.0" fill="rgb(248,194,12)" rx="2" ry="2" />
<text  x="312.93" y="511.5" ></text>
</g>
<g >
<title>do_futex (996 samples, 0.92%)</title><rect x="296.2" y="469" width="10.9" height="15.0" fill="rgb(231,142,9)" rx="2" ry="2" />
<text  x="299.21" y="479.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::operator (12 samples, 0.01%)</title><rect x="701.6" y="453" width="0.1" height="15.0" fill="rgb(252,19,32)" rx="2" ry="2" />
<text  x="704.59" y="463.5" ></text>
</g>
<g >
<title>__pthread_cond_wait (34 samples, 0.03%)</title><rect x="307.2" y="517" width="0.3" height="15.0" fill="rgb(229,227,14)" rx="2" ry="2" />
<text  x="310.18" y="527.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (16 samples, 0.01%)</title><rect x="623.9" y="501" width="0.2" height="15.0" fill="rgb(234,120,2)" rx="2" ry="2" />
<text  x="626.90" y="511.5" ></text>
</g>
<g >
<title>native_rw_wrlock (119 samples, 0.11%)</title><rect x="632.0" y="453" width="1.3" height="15.0" fill="rgb(206,62,47)" rx="2" ry="2" />
<text  x="634.98" y="463.5" ></text>
</g>
<g >
<title>bannersWithoutTopics (61 samples, 0.06%)</title><rect x="431.3" y="453" width="0.7" height="15.0" fill="rgb(223,171,16)" rx="2" ry="2" />
<text  x="434.33" y="463.5" ></text>
</g>
<g >
<title>strncmp@plt (80 samples, 0.07%)</title><rect x="990.3" y="517" width="0.8" height="15.0" fill="rgb(220,40,6)" rx="2" ry="2" />
<text  x="993.26" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::io::CodedOutputStream::WriteRawToArray (35 samples, 0.03%)</title><rect x="707.0" y="485" width="0.4" height="15.0" fill="rgb(247,189,50)" rx="2" ry="2" />
<text  x="710.04" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;bannerd::engine::OneCNStat, std::allocator&lt;bannerd::engine::OneCNStat&gt; &gt;::operator[] (18 samples, 0.02%)</title><rect x="828.2" y="469" width="0.2" height="15.0" fill="rgb(230,225,10)" rx="2" ry="2" />
<text  x="831.19" y="479.5" ></text>
</g>
<g >
<title>std::string::_S_copy_chars (11 samples, 0.01%)</title><rect x="163.4" y="485" width="0.1" height="15.0" fill="rgb(224,172,3)" rx="2" ry="2" />
<text  x="166.42" y="495.5" ></text>
</g>
<g >
<title>bannerd::Engine::TarantoolClasses::asyncSendRecv (217 samples, 0.20%)</title><rect x="315.0" y="517" width="2.4" height="15.0" fill="rgb(237,4,19)" rx="2" ry="2" />
<text  x="317.99" y="527.5" ></text>
</g>
<g >
<title>FilterUrlObjectIndex (42 samples, 0.04%)</title><rect x="104.4" y="517" width="0.5" height="15.0" fill="rgb(242,110,27)" rx="2" ry="2" />
<text  x="107.43" y="527.5" ></text>
</g>
<g >
<title>bannerd::engine::Request::parseCommonParams (17 samples, 0.02%)</title><rect x="407.5" y="517" width="0.2" height="15.0" fill="rgb(213,159,12)" rx="2" ry="2" />
<text  x="410.53" y="527.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (18 samples, 0.02%)</title><rect x="356.1" y="453" width="0.2" height="15.0" fill="rgb(212,167,14)" rx="2" ry="2" />
<text  x="359.08" y="463.5" ></text>
</g>
<g >
<title>bn_sqr8x_mont (11 samples, 0.01%)</title><rect x="90.8" y="485" width="0.1" height="15.0" fill="rgb(241,39,28)" rx="2" ry="2" />
<text  x="93.77" y="495.5" ></text>
</g>
<g >
<title>strcmp@plt (28 samples, 0.03%)</title><rect x="988.0" y="517" width="0.3" height="15.0" fill="rgb(236,24,17)" rx="2" ry="2" />
<text  x="991.04" y="527.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::_S_cmp&lt;std::string const&amp;, std::string const&amp;&gt; (152 samples, 0.14%)</title><rect x="841.9" y="469" width="1.7" height="15.0" fill="rgb(253,226,41)" rx="2" ry="2" />
<text  x="844.94" y="479.5" ></text>
</g>
<g >
<title>sys_sendto (24 samples, 0.02%)</title><rect x="142.4" y="469" width="0.3" height="15.0" fill="rgb(241,128,15)" rx="2" ry="2" />
<text  x="145.44" y="479.5" ></text>
</g>
<g >
<title>__check_object_size (23 samples, 0.02%)</title><rect x="295.9" y="469" width="0.3" height="15.0" fill="rgb(252,127,43)" rx="2" ry="2" />
<text  x="298.94" y="479.5" ></text>
</g>
<g >
<title>__do_softirq (13 samples, 0.01%)</title><rect x="1164.4" y="197" width="0.2" height="15.0" fill="rgb(211,126,17)" rx="2" ry="2" />
<text  x="1167.43" y="207.5" ></text>
</g>
<g >
<title>fget_light (42 samples, 0.04%)</title><rect x="193.7" y="469" width="0.4" height="15.0" fill="rgb(231,29,38)" rx="2" ry="2" />
<text  x="196.67" y="479.5" ></text>
</g>
<g >
<title>system_call_after_swapgs (39 samples, 0.04%)</title><rect x="898.3" y="469" width="0.4" height="15.0" fill="rgb(228,216,31)" rx="2" ry="2" />
<text  x="901.28" y="479.5" ></text>
</g>
<g >
<title>__pthread_cond_signal (26 samples, 0.02%)</title><rect x="294.0" y="517" width="0.3" height="15.0" fill="rgb(209,145,31)" rx="2" ry="2" />
<text  x="297.03" y="527.5" ></text>
</g>
<g >
<title>vfs_write (65 samples, 0.06%)</title><rect x="277.4" y="453" width="0.7" height="15.0" fill="rgb(225,51,7)" rx="2" ry="2" />
<text  x="280.41" y="463.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (24 samples, 0.02%)</title><rect x="136.9" y="373" width="0.3" height="15.0" fill="rgb(222,141,15)" rx="2" ry="2" />
<text  x="139.94" y="383.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (12 samples, 0.01%)</title><rect x="702.6" y="501" width="0.1" height="15.0" fill="rgb(233,11,8)" rx="2" ry="2" />
<text  x="705.60" y="511.5" ></text>
</g>
<g >
<title>bannerd::details::InternalStorage::find (5,419 samples, 5.03%)</title><rect x="333.6" y="517" width="59.4" height="15.0" fill="rgb(223,63,49)" rx="2" ry="2" />
<text  x="336.61" y="527.5" >banner..</text>
</g>
<g >
<title>std::map&lt;std::string, std::string, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (172 samples, 0.16%)</title><rect x="686.6" y="469" width="1.9" height="15.0" fill="rgb(232,161,42)" rx="2" ry="2" />
<text  x="689.58" y="479.5" ></text>
</g>
<g >
<title>do_free (108 samples, 0.10%)</title><rect x="279.0" y="485" width="1.2" height="15.0" fill="rgb(233,153,8)" rx="2" ry="2" />
<text  x="281.99" y="495.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::_S_cmp&lt;std::string const&amp;, std::string const&amp;&gt; (199 samples, 0.18%)</title><rect x="159.0" y="469" width="2.2" height="15.0" fill="rgb(207,101,52)" rx="2" ry="2" />
<text  x="162.02" y="479.5" ></text>
</g>
<g >
<title>native_write_msr_safe (32 samples, 0.03%)</title><rect x="146.4" y="277" width="0.4" height="15.0" fill="rgb(215,162,0)" rx="2" ry="2" />
<text  x="149.42" y="287.5" ></text>
</g>
<g >
<title>inet_sendmsg (278 samples, 0.26%)</title><rect x="282.2" y="437" width="3.0" height="15.0" fill="rgb(212,203,10)" rx="2" ry="2" />
<text  x="285.16" y="447.5" ></text>
</g>
<g >
<title>futex_wait (12 samples, 0.01%)</title><rect x="977.5" y="389" width="0.1" height="15.0" fill="rgb(237,11,46)" rx="2" ry="2" />
<text  x="980.46" y="399.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;unsigned char const&amp;, std::string const&amp;&gt;, std::tuple&lt;unsigned char const&amp;, std::string const&amp;&gt;, 0ul, 2ul&gt;::__less (907 samples, 0.84%)</title><rect x="382.4" y="421" width="9.9" height="15.0" fill="rgb(213,201,17)" rx="2" ry="2" />
<text  x="385.39" y="431.5" ></text>
</g>
<g >
<title>schedule_timeout (11 samples, 0.01%)</title><rect x="284.0" y="389" width="0.1" height="15.0" fill="rgb(220,97,4)" rx="2" ry="2" />
<text  x="286.98" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt; &gt;::deallocate (11 samples, 0.01%)</title><rect x="928.9" y="469" width="0.1" height="15.0" fill="rgb(249,107,21)" rx="2" ry="2" />
<text  x="931.90" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;bannerd::UrlLimitsIndex::Key, std::pair&lt;bannerd::UrlLimitsIndex::Key const, std::vector&lt;bannerd::UrlObjectLimitEx const*, std::allocator&lt;bannerd::UrlObjectLimitEx const*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;bannerd::UrlLimitsIndex::Key const, std::vector&lt;bannerd::UrlObjectLimitEx const*, std::allocator&lt;bannerd::UrlObjectLimitEx const*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;bannerd::UrlLimitsIndex::Key&gt;, bannerd::UrlLimitsIndex::KeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (21 samples, 0.02%)</title><rect x="919.8" y="501" width="0.2" height="15.0" fill="rgb(213,202,4)" rx="2" ry="2" />
<text  x="922.76" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long long, target::dynamic_bitset::AlignedAllocator&lt;unsigned long long&gt; &gt;::operator[] (35 samples, 0.03%)</title><rect x="1019.5" y="437" width="0.4" height="15.0" fill="rgb(213,92,29)" rx="2" ry="2" />
<text  x="1022.47" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, unsigned int, std::allocator&lt;unsigned int&gt;, std::__detail::_Identity, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::clear (34 samples, 0.03%)</title><rect x="921.1" y="517" width="0.4" height="15.0" fill="rgb(254,77,38)" rx="2" ry="2" />
<text  x="924.14" y="527.5" ></text>
</g>
<g >
<title>futex_wait_setup (41 samples, 0.04%)</title><rect x="899.9" y="405" width="0.4" height="15.0" fill="rgb(213,115,2)" rx="2" ry="2" />
<text  x="902.87" y="415.5" ></text>
</g>
<g >
<title>tcmalloc::ThreadCache::GetFastPathCache (19 samples, 0.02%)</title><rect x="165.8" y="469" width="0.2" height="15.0" fill="rgb(205,197,2)" rx="2" ry="2" />
<text  x="168.75" y="479.5" ></text>
</g>
<g >
<title>_raw_qspin_lock (14 samples, 0.01%)</title><rect x="189.6" y="421" width="0.2" height="15.0" fill="rgb(243,210,22)" rx="2" ry="2" />
<text  x="192.64" y="431.5" ></text>
</g>
<g >
<title>futex_wake (12 samples, 0.01%)</title><rect x="891.6" y="421" width="0.2" height="15.0" fill="rgb(253,53,42)" rx="2" ry="2" />
<text  x="894.64" y="431.5" ></text>
</g>
<g >
<title>bannerd::store::ActiveCampaignIndex::build (15 samples, 0.01%)</title><rect x="417.4" y="501" width="0.2" height="15.0" fill="rgb(210,81,12)" rx="2" ry="2" />
<text  x="420.40" y="511.5" ></text>
</g>
<g >
<title>trg::protobuf::bannerd::EventMsg::~EventMsg (11 samples, 0.01%)</title><rect x="1153.0" y="517" width="0.1" height="15.0" fill="rgb(233,224,14)" rx="2" ry="2" />
<text  x="1155.98" y="527.5" ></text>
</g>
<g >
<title>std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;::~pair (28 samples, 0.03%)</title><rect x="930.9" y="437" width="0.4" height="15.0" fill="rgb(223,193,32)" rx="2" ry="2" />
<text  x="933.94" y="447.5" ></text>
</g>
<g >
<title>scheduler_tick (13 samples, 0.01%)</title><rect x="598.4" y="373" width="0.1" height="15.0" fill="rgb(220,103,2)" rx="2" ry="2" />
<text  x="601.36" y="383.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n_1&lt;true&gt;::__uninit_default_n&lt;unsigned char*, unsigned long&gt; (25 samples, 0.02%)</title><rect x="979.2" y="469" width="0.2" height="15.0" fill="rgb(210,155,5)" rx="2" ry="2" />
<text  x="982.16" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; &gt;::_Rb_tree (10 samples, 0.01%)</title><rect x="690.1" y="469" width="0.1" height="15.0" fill="rgb(248,174,24)" rx="2" ry="2" />
<text  x="693.06" y="479.5" ></text>
</g>
<g >
<title>openssl_lock (346 samples, 0.32%)</title><rect x="27.3" y="485" width="3.8" height="15.0" fill="rgb(207,117,42)" rx="2" ry="2" />
<text  x="30.34" y="495.5" ></text>
</g>
<g >
<title>nmi (39 samples, 0.04%)</title><rect x="433.8" y="405" width="0.5" height="15.0" fill="rgb(242,78,45)" rx="2" ry="2" />
<text  x="436.82" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, std::string&gt;, std::_Select1st&lt;std::pair&lt;std::string const, std::string&gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::_M_find_tr&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, void&gt; (198 samples, 0.18%)</title><rect x="655.8" y="453" width="2.2" height="15.0" fill="rgb(209,14,21)" rx="2" ry="2" />
<text  x="658.82" y="463.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (11 samples, 0.01%)</title><rect x="992.8" y="181" width="0.2" height="15.0" fill="rgb(222,22,34)" rx="2" ry="2" />
<text  x="995.84" y="191.5" ></text>
</g>
<g >
<title>inline_mysql_rwlock_wrlock (75 samples, 0.07%)</title><rect x="91.3" y="453" width="0.8" height="15.0" fill="rgb(205,213,11)" rx="2" ry="2" />
<text  x="94.28" y="463.5" ></text>
</g>
<g >
<title>finish_task_switch (45 samples, 0.04%)</title><rect x="293.5" y="405" width="0.5" height="15.0" fill="rgb(219,54,18)" rx="2" ry="2" />
<text  x="296.49" y="415.5" ></text>
</g>
<g >
<title>igb_clean_rx_irq (13 samples, 0.01%)</title><rect x="613.5" y="373" width="0.2" height="15.0" fill="rgb(225,104,46)" rx="2" ry="2" />
<text  x="616.53" y="383.5" ></text>
</g>
<g >
<title>futex_wait (24 samples, 0.02%)</title><rect x="318.8" y="325" width="0.3" height="15.0" fill="rgb(226,106,13)" rx="2" ry="2" />
<text  x="321.83" y="335.5" ></text>
</g>
<g >
<title>tcmalloc::SizeMap::GetSizeClass (103 samples, 0.10%)</title><rect x="1126.6" y="485" width="1.1" height="15.0" fill="rgb(214,128,16)" rx="2" ry="2" />
<text  x="1129.57" y="495.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;bannerd::Tabular const,  (18 samples, 0.02%)</title><rect x="356.1" y="469" width="0.2" height="15.0" fill="rgb(241,17,52)" rx="2" ry="2" />
<text  x="359.08" y="479.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::operator&amp;= (21 samples, 0.02%)</title><rect x="830.5" y="501" width="0.2" height="15.0" fill="rgb(249,33,16)" rx="2" ry="2" />
<text  x="833.48" y="511.5" ></text>
</g>
<g >
<title>operator (1,045 samples, 0.97%)</title><rect x="393.8" y="469" width="11.4" height="15.0" fill="rgb(238,86,53)" rx="2" ry="2" />
<text  x="396.77" y="479.5" ></text>
</g>
<g >
<title>tcmalloc::ThreadCache::IncreaseCacheLimitLocked (11 samples, 0.01%)</title><rect x="1148.1" y="485" width="0.1" height="15.0" fill="rgb(232,7,32)" rx="2" ry="2" />
<text  x="1151.11" y="495.5" ></text>
</g>
<g >
<title>do_futex (11 samples, 0.01%)</title><rect x="142.8" y="453" width="0.1" height="15.0" fill="rgb(206,118,13)" rx="2" ry="2" />
<text  x="145.79" y="463.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (24 samples, 0.02%)</title><rect x="176.0" y="405" width="0.3" height="15.0" fill="rgb(238,98,50)" rx="2" ry="2" />
<text  x="179.01" y="415.5" ></text>
</g>
<g >
<title>__GI___getpid (28 samples, 0.03%)</title><rect x="894.1" y="501" width="0.3" height="15.0" fill="rgb(241,206,49)" rx="2" ry="2" />
<text  x="897.14" y="511.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (65 samples, 0.06%)</title><rect x="162.1" y="501" width="0.7" height="15.0" fill="rgb(242,195,35)" rx="2" ry="2" />
<text  x="165.05" y="511.5" ></text>
</g>
<g >
<title>do_futex (10 samples, 0.01%)</title><rect x="894.5" y="453" width="0.1" height="15.0" fill="rgb(213,90,12)" rx="2" ry="2" />
<text  x="897.50" y="463.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (25 samples, 0.02%)</title><rect x="681.2" y="437" width="0.2" height="15.0" fill="rgb(225,20,39)" rx="2" ry="2" />
<text  x="684.16" y="447.5" ></text>
</g>
<g >
<title>__schedule (54 samples, 0.05%)</title><rect x="136.9" y="389" width="0.6" height="15.0" fill="rgb(213,175,26)" rx="2" ry="2" />
<text  x="139.92" y="399.5" ></text>
</g>
<g >
<title>tcmalloc::ThreadCache::Allocate (438 samples, 0.41%)</title><rect x="1133.3" y="485" width="4.8" height="15.0" fill="rgb(206,53,28)" rx="2" ry="2" />
<text  x="1136.29" y="495.5" ></text>
</g>
<g >
<title>sysret_audit (50 samples, 0.05%)</title><rect x="294.5" y="501" width="0.5" height="15.0" fill="rgb(240,70,49)" rx="2" ry="2" />
<text  x="297.47" y="511.5" ></text>
</g>
<g >
<title>std::string::compare (49 samples, 0.05%)</title><rect x="930.2" y="453" width="0.5" height="15.0" fill="rgb(207,81,17)" rx="2" ry="2" />
<text  x="933.18" y="463.5" ></text>
</g>
<g >
<title>perf_event_sched_in (14 samples, 0.01%)</title><rect x="899.5" y="325" width="0.2" height="15.0" fill="rgb(247,9,34)" rx="2" ry="2" />
<text  x="902.53" y="335.5" ></text>
</g>
<g >
<title>bannerd::commonFunc (15 samples, 0.01%)</title><rect x="655.0" y="501" width="0.1" height="15.0" fill="rgb(222,153,12)" rx="2" ry="2" />
<text  x="657.96" y="511.5" ></text>
</g>
<g >
<title>__audit_syscall_entry (23 samples, 0.02%)</title><rect x="182.5" y="485" width="0.2" height="15.0" fill="rgb(241,118,26)" rx="2" ry="2" />
<text  x="185.49" y="495.5" ></text>
</g>
<g >
<title>irq_exit (28 samples, 0.03%)</title><rect x="992.8" y="453" width="0.3" height="15.0" fill="rgb(218,42,43)" rx="2" ry="2" />
<text  x="995.75" y="463.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (11 samples, 0.01%)</title><rect x="643.9" y="437" width="0.1" height="15.0" fill="rgb(217,93,47)" rx="2" ry="2" />
<text  x="646.89" y="447.5" ></text>
</g>
<g >
<title>trg::tarantool_client::epoll_loop::loop&lt;trg::tarantool_client::epoll_loop::SendState&gt; (39 samples, 0.04%)</title><rect x="1164.2" y="517" width="0.5" height="15.0" fill="rgb(212,106,11)" rx="2" ry="2" />
<text  x="1167.25" y="527.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (10 samples, 0.01%)</title><rect x="388.0" y="405" width="0.2" height="15.0" fill="rgb(225,95,7)" rx="2" ry="2" />
<text  x="391.04" y="415.5" ></text>
</g>
<g >
<title>lh_retrieve (13 samples, 0.01%)</title><rect x="808.1" y="517" width="0.2" height="15.0" fill="rgb(221,9,4)" rx="2" ry="2" />
<text  x="811.11" y="527.5" ></text>
</g>
<g >
<title>sys_futex (21 samples, 0.02%)</title><rect x="853.6" y="453" width="0.2" height="15.0" fill="rgb(245,177,11)" rx="2" ry="2" />
<text  x="856.58" y="463.5" ></text>
</g>
<g >
<title>futex_wait (11 samples, 0.01%)</title><rect x="142.8" y="437" width="0.1" height="15.0" fill="rgb(229,87,41)" rx="2" ry="2" />
<text  x="145.79" y="447.5" ></text>
</g>
<g >
<title>tcmalloc::SizeMap::ClassIndexMaybe (11 samples, 0.01%)</title><rect x="1139.6" y="469" width="0.2" height="15.0" fill="rgb(223,12,9)" rx="2" ry="2" />
<text  x="1142.64" y="479.5" ></text>
</g>
<g >
<title>bn_expand2 (60 samples, 0.06%)</title><rect x="80.2" y="501" width="0.6" height="15.0" fill="rgb(227,84,36)" rx="2" ry="2" />
<text  x="83.15" y="511.5" ></text>
</g>
<g >
<title>tcmalloc::CentralFreeList::ReleaseListToSpans (101 samples, 0.09%)</title><rect x="1142.3" y="501" width="1.1" height="15.0" fill="rgb(219,33,35)" rx="2" ry="2" />
<text  x="1145.34" y="511.5" ></text>
</g>
<g >
<title>__strlen_sse2_pminub (14 samples, 0.01%)</title><rect x="840.4" y="501" width="0.2" height="15.0" fill="rgb(238,66,41)" rx="2" ry="2" />
<text  x="843.40" y="511.5" ></text>
</g>
<g >
<title>tcmalloc::SLL_TryPop (37 samples, 0.03%)</title><rect x="1141.7" y="405" width="0.4" height="15.0" fill="rgb(232,4,41)" rx="2" ry="2" />
<text  x="1144.71" y="415.5" ></text>
</g>
<g >
<title>__irqentry_text_start (34 samples, 0.03%)</title><rect x="992.7" y="469" width="0.4" height="15.0" fill="rgb(246,134,32)" rx="2" ry="2" />
<text  x="995.69" y="479.5" ></text>
</g>
<g >
<title>sys_write (69 samples, 0.06%)</title><rect x="277.4" y="469" width="0.7" height="15.0" fill="rgb(253,121,1)" rx="2" ry="2" />
<text  x="280.37" y="479.5" ></text>
</g>
<g >
<title>wake_q_add (11 samples, 0.01%)</title><rect x="176.7" y="421" width="0.1" height="15.0" fill="rgb(226,141,46)" rx="2" ry="2" />
<text  x="179.67" y="431.5" ></text>
</g>
<g >
<title>__GI___strndup (25 samples, 0.02%)</title><rect x="702.0" y="501" width="0.2" height="15.0" fill="rgb(245,156,10)" rx="2" ry="2" />
<text  x="704.97" y="511.5" ></text>
</g>
<g >
<title>x86_pmu_enable (18 samples, 0.02%)</title><rect x="802.3" y="357" width="0.2" height="15.0" fill="rgb(245,57,6)" rx="2" ry="2" />
<text  x="805.26" y="367.5" ></text>
</g>
<g >
<title>auditsys (10 samples, 0.01%)</title><rect x="894.8" y="469" width="0.1" height="15.0" fill="rgb(208,229,12)" rx="2" ry="2" />
<text  x="897.82" y="479.5" ></text>
</g>
<g >
<title>bannerd::store::ActiveCampaignIndex::byPad (12 samples, 0.01%)</title><rect x="422.0" y="469" width="0.2" height="15.0" fill="rgb(205,207,33)" rx="2" ry="2" />
<text  x="425.04" y="479.5" ></text>
</g>
<g >
<title>system_call_fastpath (10 samples, 0.01%)</title><rect x="1146.7" y="485" width="0.1" height="15.0" fill="rgb(221,152,51)" rx="2" ry="2" />
<text  x="1149.71" y="495.5" ></text>
</g>
<g >
<title>getprocContent (59 samples, 0.05%)</title><rect x="698.3" y="517" width="0.6" height="15.0" fill="rgb(225,154,20)" rx="2" ry="2" />
<text  x="701.26" y="527.5" ></text>
</g>
<g >
<title>__memcpy_ssse3_back (21 samples, 0.02%)</title><rect x="857.5" y="485" width="0.2" height="15.0" fill="rgb(209,57,25)" rx="2" ry="2" />
<text  x="860.48" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, std::string&gt;, std::_Select1st&lt;std::pair&lt;std::string const, std::string&gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::_M_find_tr&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, void&gt; (63 samples, 0.06%)</title><rect x="413.6" y="485" width="0.6" height="15.0" fill="rgb(211,140,36)" rx="2" ry="2" />
<text  x="416.56" y="495.5" ></text>
</g>
<g >
<title>tcp_write_xmit (13 samples, 0.01%)</title><rect x="142.6" y="357" width="0.1" height="15.0" fill="rgb(228,21,15)" rx="2" ry="2" />
<text  x="145.55" y="367.5" ></text>
</g>
<g >
<title>net_rx_action (27 samples, 0.03%)</title><rect x="992.8" y="389" width="0.3" height="15.0" fill="rgb(223,61,13)" rx="2" ry="2" />
<text  x="995.76" y="399.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (540 samples, 0.50%)</title><rect x="901.7" y="437" width="6.0" height="15.0" fill="rgb(211,148,54)" rx="2" ry="2" />
<text  x="904.74" y="447.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;unsigned char const&amp;, unsigned int const&amp;, unsigned char const&amp;, unsigned int const&amp;, unsigned char const&amp;, unsigned int const&amp;, unsigned char const&amp;, unsigned int const&amp;&gt; (252 samples, 0.23%)</title><rect x="151.4" y="485" width="2.8" height="15.0" fill="rgb(237,211,45)" rx="2" ry="2" />
<text  x="154.39" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, bannerd::targeting::ShowsClicks&gt;, std::allocator&lt;std::pair&lt;unsigned int const, bannerd::targeting::ShowsClicks&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (15 samples, 0.01%)</title><rect x="410.0" y="485" width="0.1" height="15.0" fill="rgb(235,88,52)" rx="2" ry="2" />
<text  x="412.96" y="495.5" ></text>
</g>
<g >
<title>perf_event_sched_in (45 samples, 0.04%)</title><rect x="187.8" y="357" width="0.5" height="15.0" fill="rgb(230,181,2)" rx="2" ry="2" />
<text  x="190.82" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::_Identity&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::erase (15 samples, 0.01%)</title><rect x="922.8" y="517" width="0.2" height="15.0" fill="rgb(221,176,42)" rx="2" ry="2" />
<text  x="925.84" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::MessageLite::AppendPartialToString (41 samples, 0.04%)</title><rect x="154.7" y="501" width="0.5" height="15.0" fill="rgb(227,28,29)" rx="2" ry="2" />
<text  x="157.71" y="511.5" ></text>
</g>
<g >
<title>nmi (14 samples, 0.01%)</title><rect x="429.5" y="437" width="0.2" height="15.0" fill="rgb(206,40,4)" rx="2" ry="2" />
<text  x="432.50" y="447.5" ></text>
</g>
<g >
<title>perf_pmu_sched_task (12 samples, 0.01%)</title><rect x="321.1" y="245" width="0.1" height="15.0" fill="rgb(211,100,46)" rx="2" ry="2" />
<text  x="324.11" y="255.5" ></text>
</g>
<g >
<title>sys_futex (188 samples, 0.17%)</title><rect x="895.9" y="453" width="2.1" height="15.0" fill="rgb(222,169,21)" rx="2" ry="2" />
<text  x="898.90" y="463.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (62 samples, 0.06%)</title><rect x="924.4" y="437" width="0.7" height="15.0" fill="rgb(225,98,36)" rx="2" ry="2" />
<text  x="927.40" y="447.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt; &gt; (14 samples, 0.01%)</title><rect x="689.5" y="405" width="0.1" height="15.0" fill="rgb(249,215,12)" rx="2" ry="2" />
<text  x="692.45" y="415.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (11 samples, 0.01%)</title><rect x="920.9" y="453" width="0.1" height="15.0" fill="rgb(212,103,52)" rx="2" ry="2" />
<text  x="923.89" y="463.5" ></text>
</g>
<g >
<title>perf_swevent_add (10 samples, 0.01%)</title><rect x="320.6" y="149" width="0.1" height="15.0" fill="rgb(251,10,7)" rx="2" ry="2" />
<text  x="323.55" y="159.5" ></text>
</g>
<g >
<title>std::string::size (42 samples, 0.04%)</title><rect x="958.2" y="485" width="0.5" height="15.0" fill="rgb(227,178,26)" rx="2" ry="2" />
<text  x="961.24" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char const*&gt; &gt;::allocate (14 samples, 0.01%)</title><rect x="977.4" y="485" width="0.2" height="15.0" fill="rgb(215,199,18)" rx="2" ry="2" />
<text  x="980.44" y="495.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::operator~ (63 samples, 0.06%)</title><rect x="830.7" y="501" width="0.7" height="15.0" fill="rgb(233,141,50)" rx="2" ry="2" />
<text  x="833.71" y="511.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n_a&lt;unsigned char*, unsigned long, unsigned char&gt; (25 samples, 0.02%)</title><rect x="979.2" y="501" width="0.2" height="15.0" fill="rgb(248,74,22)" rx="2" ry="2" />
<text  x="982.16" y="511.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (11 samples, 0.01%)</title><rect x="392.9" y="501" width="0.1" height="15.0" fill="rgb(234,171,49)" rx="2" ry="2" />
<text  x="395.85" y="511.5" ></text>
</g>
<g >
<title>stub_clone (367 samples, 0.34%)</title><rect x="138.2" y="485" width="4.0" height="15.0" fill="rgb(222,76,41)" rx="2" ry="2" />
<text  x="141.21" y="495.5" ></text>
</g>
<g >
<title>__memcpy_ssse3_back (143 samples, 0.13%)</title><rect x="966.2" y="453" width="1.6" height="15.0" fill="rgb(208,83,24)" rx="2" ry="2" />
<text  x="969.19" y="463.5" ></text>
</g>
<g >
<title>native_rw_wrlock (75 samples, 0.07%)</title><rect x="91.3" y="437" width="0.8" height="15.0" fill="rgb(235,177,29)" rx="2" ry="2" />
<text  x="94.28" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long long, target::dynamic_bitset::AlignedAllocator&lt;unsigned long long&gt; &gt;::vector (360 samples, 0.33%)</title><rect x="980.8" y="517" width="3.9" height="15.0" fill="rgb(241,114,37)" rx="2" ry="2" />
<text  x="983.78" y="527.5" ></text>
</g>
<g >
<title>perf_pmu_sched_task (25 samples, 0.02%)</title><rect x="188.4" y="357" width="0.3" height="15.0" fill="rgb(250,113,37)" rx="2" ry="2" />
<text  x="191.42" y="367.5" ></text>
</g>
<g >
<title>operator-= (219 samples, 0.20%)</title><rect x="428.8" y="469" width="2.4" height="15.0" fill="rgb(212,110,48)" rx="2" ry="2" />
<text  x="431.75" y="479.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt; &gt; (13 samples, 0.01%)</title><rect x="697.6" y="453" width="0.1" height="15.0" fill="rgb(226,28,35)" rx="2" ry="2" />
<text  x="700.56" y="463.5" ></text>
</g>
<g >
<title>wake_up_q (14 samples, 0.01%)</title><rect x="113.5" y="421" width="0.1" height="15.0" fill="rgb(230,147,9)" rx="2" ry="2" />
<text  x="116.47" y="431.5" ></text>
</g>
<g >
<title>do_futex (216 samples, 0.20%)</title><rect x="145.0" y="453" width="2.4" height="15.0" fill="rgb(209,43,2)" rx="2" ry="2" />
<text  x="148.04" y="463.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::reset (2,239 samples, 2.08%)</title><rect x="995.3" y="469" width="24.6" height="15.0" fill="rgb(209,106,34)" rx="2" ry="2" />
<text  x="998.33" y="479.5" >t..</text>
</g>
<g >
<title>bannerd::TStoreBase&lt;bannerd::TemplateIncludeEx&gt;::get (19 samples, 0.02%)</title><rect x="699.9" y="485" width="0.2" height="15.0" fill="rgb(235,95,12)" rx="2" ry="2" />
<text  x="702.90" y="495.5" ></text>
</g>
<g >
<title>update_process_times (20 samples, 0.02%)</title><rect x="265.5" y="389" width="0.2" height="15.0" fill="rgb(209,102,34)" rx="2" ry="2" />
<text  x="268.51" y="399.5" ></text>
</g>
<g >
<title>sys_accept (60 samples, 0.06%)</title><rect x="194.8" y="485" width="0.6" height="15.0" fill="rgb(214,147,14)" rx="2" ry="2" />
<text  x="197.78" y="495.5" ></text>
</g>
<g >
<title>tcmalloc::CentralFreeList::Populate (29 samples, 0.03%)</title><rect x="1143.4" y="517" width="0.4" height="15.0" fill="rgb(223,112,49)" rx="2" ry="2" />
<text  x="1146.44" y="527.5" ></text>
</g>
<g >
<title>_raw_qspin_lock (25 samples, 0.02%)</title><rect x="176.0" y="437" width="0.3" height="15.0" fill="rgb(231,16,36)" rx="2" ry="2" />
<text  x="179.00" y="447.5" ></text>
</g>
<g >
<title>advance&lt;const (anonymous namespace)::ProcFunction*, long int&gt; (111 samples, 0.10%)</title><rect x="659.9" y="421" width="1.2" height="15.0" fill="rgb(254,172,15)" rx="2" ry="2" />
<text  x="662.88" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::io::CodedOutputStream::WriteVarint64ToArrayInline (18 samples, 0.02%)</title><rect x="708.3" y="501" width="0.2" height="15.0" fill="rgb(223,106,50)" rx="2" ry="2" />
<text  x="711.26" y="511.5" ></text>
</g>
<g >
<title>sysret_audit (12 samples, 0.01%)</title><rect x="134.6" y="485" width="0.1" height="15.0" fill="rgb(207,40,1)" rx="2" ry="2" />
<text  x="137.58" y="495.5" ></text>
</g>
<g >
<title>trg::protobuf::bannerd::ShowClickMsg::ByteSize (100 samples, 0.09%)</title><rect x="1153.1" y="517" width="1.1" height="15.0" fill="rgb(238,115,37)" rx="2" ry="2" />
<text  x="1156.10" y="527.5" ></text>
</g>
<g >
<title>openssl_lock (34 samples, 0.03%)</title><rect x="807.0" y="485" width="0.3" height="15.0" fill="rgb(225,183,31)" rx="2" ry="2" />
<text  x="809.97" y="495.5" ></text>
</g>
<g >
<title>applyFilters (507 samples, 0.47%)</title><rect x="428.7" y="501" width="5.6" height="15.0" fill="rgb(252,6,45)" rx="2" ry="2" />
<text  x="431.74" y="511.5" ></text>
</g>
<g >
<title>~TaskHttp (31 samples, 0.03%)</title><rect x="1189.7" y="517" width="0.3" height="15.0" fill="rgb(229,33,23)" rx="2" ry="2" />
<text  x="1192.66" y="527.5" ></text>
</g>
<g >
<title>do_futex (19 samples, 0.02%)</title><rect x="893.7" y="437" width="0.2" height="15.0" fill="rgb(211,120,52)" rx="2" ry="2" />
<text  x="896.73" y="447.5" ></text>
</g>
<g >
<title>boost::container::flat_set&lt;unsigned int, std::less&lt;unsigned int&gt;, boost::container::new_allocator&lt;unsigned int&gt; &gt;::count (26 samples, 0.02%)</title><rect x="412.0" y="501" width="0.3" height="15.0" fill="rgb(220,112,28)" rx="2" ry="2" />
<text  x="415.00" y="511.5" ></text>
</g>
<g >
<title>try_to_wake_up (12 samples, 0.01%)</title><rect x="856.4" y="405" width="0.2" height="15.0" fill="rgb(205,87,53)" rx="2" ry="2" />
<text  x="859.42" y="415.5" ></text>
</g>
<g >
<title>rb::parse_url_anchor_not_macros (83 samples, 0.08%)</title><rect x="674.0" y="501" width="0.9" height="15.0" fill="rgb(235,3,14)" rx="2" ry="2" />
<text  x="676.96" y="511.5" ></text>
</g>
<g >
<title>load_balance (18 samples, 0.02%)</title><rect x="307.3" y="373" width="0.2" height="15.0" fill="rgb(245,178,31)" rx="2" ry="2" />
<text  x="310.33" y="383.5" ></text>
</g>
<g >
<title>wake_up_q (467 samples, 0.43%)</title><rect x="176.8" y="437" width="5.1" height="15.0" fill="rgb(236,149,48)" rx="2" ry="2" />
<text  x="179.81" y="447.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::_S_cmp&lt;std::string const&amp;, std::string const&amp;&gt; (49 samples, 0.05%)</title><rect x="930.2" y="485" width="0.5" height="15.0" fill="rgb(223,221,32)" rx="2" ry="2" />
<text  x="933.18" y="495.5" ></text>
</g>
<g >
<title>__equal_range&lt;__gnu_cxx::__normal_iterator&lt;const bannerd::details::InternalStorage::Record*, std::vector&lt;bannerd::details::InternalStorage::Record&gt; &gt;, bannerd::details::InternalStorage::Record, __gnu_cxx::__ops::_Iter_comp_val&lt;(anonymous namespace)::CompareByClassAndRole&gt;, __gnu_cxx::__ops::_Val_comp_iter&lt;(anonymous namespace)::CompareByClassAndRole&gt; &gt; (999 samples, 0.93%)</title><rect x="381.9" y="485" width="10.9" height="15.0" fill="rgb(230,111,46)" rx="2" ry="2" />
<text  x="384.85" y="495.5" ></text>
</g>
<g >
<title>_IO_vfprintf_internal (14 samples, 0.01%)</title><rect x="167.7" y="517" width="0.2" height="15.0" fill="rgb(222,173,41)" rx="2" ry="2" />
<text  x="170.72" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, std::string&gt;, std::_Select1st&lt;std::pair&lt;std::string const, std::string&gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::_M_get_insert_hint_unique_pos (18 samples, 0.02%)</title><rect x="943.3" y="405" width="0.2" height="15.0" fill="rgb(230,2,1)" rx="2" ry="2" />
<text  x="946.35" y="415.5" ></text>
</g>
<g >
<title>perf_event_sched_in (10 samples, 0.01%)</title><rect x="853.1" y="309" width="0.1" height="15.0" fill="rgb(205,108,19)" rx="2" ry="2" />
<text  x="856.07" y="319.5" ></text>
</g>
<g >
<title>std::string::size (245 samples, 0.23%)</title><rect x="389.6" y="341" width="2.7" height="15.0" fill="rgb(226,164,2)" rx="2" ry="2" />
<text  x="392.64" y="351.5" ></text>
</g>
<g >
<title>sys_futex (14 samples, 0.01%)</title><rect x="891.9" y="453" width="0.1" height="15.0" fill="rgb(236,42,26)" rx="2" ry="2" />
<text  x="894.86" y="463.5" ></text>
</g>
<g >
<title>[libc-2.17.so] (69 samples, 0.06%)</title><rect x="127.8" y="517" width="0.7" height="15.0" fill="rgb(218,125,35)" rx="2" ry="2" />
<text  x="130.78" y="527.5" ></text>
</g>
<g >
<title>_IO_str_init_static_internal (45 samples, 0.04%)</title><rect x="634.6" y="485" width="0.5" height="15.0" fill="rgb(246,79,40)" rx="2" ry="2" />
<text  x="637.63" y="495.5" ></text>
</g>
<g >
<title>std::string::size (47 samples, 0.04%)</title><rect x="971.1" y="501" width="0.5" height="15.0" fill="rgb(240,140,19)" rx="2" ry="2" />
<text  x="974.09" y="511.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (10 samples, 0.01%)</title><rect x="1146.7" y="453" width="0.1" height="15.0" fill="rgb(234,132,49)" rx="2" ry="2" />
<text  x="1149.71" y="463.5" ></text>
</g>
<g >
<title>add_stringn (29 samples, 0.03%)</title><rect x="987.5" y="501" width="0.3" height="15.0" fill="rgb(208,78,21)" rx="2" ry="2" />
<text  x="990.47" y="511.5" ></text>
</g>
<g >
<title>__bn_sqr8x_reduction (7,475 samples, 6.94%)</title><rect x="195.4" y="517" width="81.9" height="15.0" fill="rgb(222,160,46)" rx="2" ry="2" />
<text  x="198.44" y="527.5" >__bn_sqr8..</text>
</g>
<g >
<title>__schedule (48 samples, 0.04%)</title><rect x="853.0" y="357" width="0.5" height="15.0" fill="rgb(227,123,53)" rx="2" ry="2" />
<text  x="855.98" y="367.5" ></text>
</g>
<g >
<title>bannerd::store::ActiveCampaignIndex::build (123 samples, 0.11%)</title><rect x="417.4" y="517" width="1.4" height="15.0" fill="rgb(241,184,47)" rx="2" ry="2" />
<text  x="420.40" y="527.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (11 samples, 0.01%)</title><rect x="329.1" y="453" width="0.1" height="15.0" fill="rgb(229,26,29)" rx="2" ry="2" />
<text  x="332.12" y="463.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (82 samples, 0.08%)</title><rect x="186.0" y="389" width="0.9" height="15.0" fill="rgb(235,61,50)" rx="2" ry="2" />
<text  x="188.96" y="399.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::_S_cmp&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const&amp;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const&amp;&gt; (62 samples, 0.06%)</title><rect x="924.4" y="469" width="0.7" height="15.0" fill="rgb(223,85,54)" rx="2" ry="2" />
<text  x="927.40" y="479.5" ></text>
</g>
<g >
<title>includes&lt;__gnu_cxx::__normal_iterator&lt;const bannerd::details::InternalStorage::Record*, std::vector&lt;bannerd::details::InternalStorage::Record&gt; &gt;, boost::container::vec_iterator&lt;std::basic_string&lt;char&gt;*, true&gt;, (anonymous namespace)::CompareByRole&gt; (1,072 samples, 1.00%)</title><rect x="393.5" y="501" width="11.7" height="15.0" fill="rgb(222,169,42)" rx="2" ry="2" />
<text  x="396.48" y="511.5" ></text>
</g>
<g >
<title>std::hash&lt;target::dynamic_bitset&gt;::operator (97 samples, 0.09%)</title><rect x="440.7" y="437" width="1.1" height="15.0" fill="rgb(211,92,12)" rx="2" ry="2" />
<text  x="443.73" y="447.5" ></text>
</g>
<g >
<title>__strstr_sse42 (22 samples, 0.02%)</title><rect x="678.0" y="501" width="0.2" height="15.0" fill="rgb(242,167,6)" rx="2" ry="2" />
<text  x="680.96" y="511.5" ></text>
</g>
<g >
<title>_M_bucket_index (10 samples, 0.01%)</title><rect x="167.9" y="501" width="0.1" height="15.0" fill="rgb(239,36,37)" rx="2" ry="2" />
<text  x="170.89" y="511.5" ></text>
</g>
<g >
<title>tcp_push (30 samples, 0.03%)</title><rect x="1164.3" y="389" width="0.3" height="15.0" fill="rgb(216,119,40)" rx="2" ry="2" />
<text  x="1167.31" y="399.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_wrlock (51 samples, 0.05%)</title><rect x="30.6" y="437" width="0.5" height="15.0" fill="rgb(252,181,32)" rx="2" ry="2" />
<text  x="33.57" y="447.5" ></text>
</g>
<g >
<title>do_exit (21 samples, 0.02%)</title><rect x="917.1" y="469" width="0.2" height="15.0" fill="rgb(207,112,20)" rx="2" ry="2" />
<text  x="920.11" y="479.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::wideAnd (113 samples, 0.10%)</title><rect x="813.3" y="485" width="1.2" height="15.0" fill="rgb(251,160,23)" rx="2" ry="2" />
<text  x="816.27" y="495.5" ></text>
</g>
<g >
<title>sys_futex (1,039 samples, 0.96%)</title><rect x="295.8" y="485" width="11.4" height="15.0" fill="rgb(246,69,38)" rx="2" ry="2" />
<text  x="298.80" y="495.5" ></text>
</g>
<g >
<title>__dynamic_cast (13 samples, 0.01%)</title><rect x="142.2" y="501" width="0.2" height="15.0" fill="rgb(229,75,31)" rx="2" ry="2" />
<text  x="145.24" y="511.5" ></text>
</g>
<g >
<title>system_call_fastpath (37 samples, 0.03%)</title><rect x="1164.3" y="485" width="0.4" height="15.0" fill="rgb(222,106,41)" rx="2" ry="2" />
<text  x="1167.26" y="495.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::BitHandler::operator bool (13 samples, 0.01%)</title><rect x="435.9" y="485" width="0.1" height="15.0" fill="rgb(244,165,14)" rx="2" ry="2" />
<text  x="438.91" y="495.5" ></text>
</g>
<g >
<title>std::string::size (20 samples, 0.02%)</title><rect x="414.0" y="405" width="0.2" height="15.0" fill="rgb(218,24,53)" rx="2" ry="2" />
<text  x="417.03" y="415.5" ></text>
</g>
<g >
<title>std::string::_S_copy_chars (74 samples, 0.07%)</title><rect x="952.2" y="501" width="0.8" height="15.0" fill="rgb(236,163,14)" rx="2" ry="2" />
<text  x="955.19" y="511.5" ></text>
</g>
<g >
<title>tc_new (38 samples, 0.04%)</title><rect x="943.9" y="405" width="0.5" height="15.0" fill="rgb(231,44,11)" rx="2" ry="2" />
<text  x="946.94" y="415.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (11 samples, 0.01%)</title><rect x="701.7" y="421" width="0.2" height="15.0" fill="rgb(228,65,22)" rx="2" ry="2" />
<text  x="704.73" y="431.5" ></text>
</g>
<g >
<title>tcmalloc::DLL_Remove (28 samples, 0.03%)</title><rect x="1146.2" y="517" width="0.3" height="15.0" fill="rgb(216,138,44)" rx="2" ry="2" />
<text  x="1149.17" y="527.5" ></text>
</g>
<g >
<title>std::string::compare (152 samples, 0.14%)</title><rect x="841.9" y="437" width="1.7" height="15.0" fill="rgb(218,69,6)" rx="2" ry="2" />
<text  x="844.94" y="447.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::operator&amp;= (19 samples, 0.02%)</title><rect x="831.7" y="485" width="0.2" height="15.0" fill="rgb(253,194,49)" rx="2" ry="2" />
<text  x="834.66" y="495.5" ></text>
</g>
<g >
<title>igb_poll (12 samples, 0.01%)</title><rect x="806.2" y="389" width="0.2" height="15.0" fill="rgb(216,2,49)" rx="2" ry="2" />
<text  x="809.23" y="399.5" ></text>
</g>
<g >
<title>std::pair&lt;std::string const, std::string&gt;::~pair (134 samples, 0.12%)</title><rect x="927.4" y="437" width="1.5" height="15.0" fill="rgb(221,60,52)" rx="2" ry="2" />
<text  x="930.43" y="447.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (31 samples, 0.03%)</title><rect x="413.7" y="405" width="0.3" height="15.0" fill="rgb(223,157,34)" rx="2" ry="2" />
<text  x="416.69" y="415.5" ></text>
</g>
<g >
<title>eventMsgStrWithIntegrity (21 samples, 0.02%)</title><rect x="643.8" y="517" width="0.2" height="15.0" fill="rgb(233,112,26)" rx="2" ry="2" />
<text  x="646.78" y="527.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (84 samples, 0.08%)</title><rect x="297.9" y="389" width="0.9" height="15.0" fill="rgb(208,71,53)" rx="2" ry="2" />
<text  x="300.87" y="399.5" ></text>
</g>
<g >
<title>perf_pmu_sched_task (66 samples, 0.06%)</title><rect x="186.1" y="373" width="0.7" height="15.0" fill="rgb(222,39,49)" rx="2" ry="2" />
<text  x="189.05" y="383.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (18 samples, 0.02%)</title><rect x="802.3" y="341" width="0.2" height="15.0" fill="rgb(238,225,12)" rx="2" ry="2" />
<text  x="805.26" y="351.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (16 samples, 0.01%)</title><rect x="355.9" y="469" width="0.2" height="15.0" fill="rgb(211,19,48)" rx="2" ry="2" />
<text  x="358.90" y="479.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::getWide (20 samples, 0.02%)</title><rect x="1098.6" y="501" width="0.3" height="15.0" fill="rgb(212,150,21)" rx="2" ry="2" />
<text  x="1101.65" y="511.5" ></text>
</g>
<g >
<title>nmi (10 samples, 0.01%)</title><rect x="423.6" y="469" width="0.1" height="15.0" fill="rgb(252,113,50)" rx="2" ry="2" />
<text  x="426.58" y="479.5" ></text>
</g>
<g >
<title>__GI___vsnprintf_chk (17 samples, 0.02%)</title><rect x="1169.9" y="469" width="0.2" height="15.0" fill="rgb(210,56,4)" rx="2" ry="2" />
<text  x="1172.90" y="479.5" ></text>
</g>
<g >
<title>parseVars (115 samples, 0.11%)</title><rect x="814.6" y="517" width="1.2" height="15.0" fill="rgb(226,75,29)" rx="2" ry="2" />
<text  x="817.56" y="527.5" ></text>
</g>
<g >
<title>__lll_lock_wait (19 samples, 0.02%)</title><rect x="142.7" y="501" width="0.2" height="15.0" fill="rgb(242,176,45)" rx="2" ry="2" />
<text  x="145.70" y="511.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned long long const*, std::vector&lt;unsigned long long, target::dynamic_bitset::AlignedAllocator&lt;unsigned long long&gt; &gt; &gt;, unsigned long long*, target::dynamic_bitset::AlignedAllocator&lt;unsigned long long&gt; &gt; (24 samples, 0.02%)</title><rect x="831.4" y="453" width="0.3" height="15.0" fill="rgb(244,4,8)" rx="2" ry="2" />
<text  x="834.40" y="463.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (15 samples, 0.01%)</title><rect x="892.9" y="485" width="0.2" height="15.0" fill="rgb(253,132,41)" rx="2" ry="2" />
<text  x="895.93" y="495.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (32 samples, 0.03%)</title><rect x="308.3" y="325" width="0.4" height="15.0" fill="rgb(239,43,40)" rx="2" ry="2" />
<text  x="311.31" y="335.5" ></text>
</g>
<g >
<title>operator&amp;= (360 samples, 0.33%)</title><rect x="810.6" y="517" width="3.9" height="15.0" fill="rgb(243,63,11)" rx="2" ry="2" />
<text  x="813.56" y="527.5" ></text>
</g>
<g >
<title>do_sync_write (15 samples, 0.01%)</title><rect x="133.8" y="437" width="0.2" height="15.0" fill="rgb(213,25,51)" rx="2" ry="2" />
<text  x="136.80" y="447.5" ></text>
</g>
<g >
<title>tcp_push (74 samples, 0.07%)</title><rect x="284.1" y="405" width="0.8" height="15.0" fill="rgb(253,213,48)" rx="2" ry="2" />
<text  x="287.12" y="415.5" ></text>
</g>
<g >
<title>bannerd::store::ActiveCampaignIndex::setPadFilters (106 samples, 0.10%)</title><rect x="439.6" y="373" width="1.1" height="15.0" fill="rgb(219,77,30)" rx="2" ry="2" />
<text  x="442.55" y="383.5" ></text>
</g>
<g >
<title>tcmalloc::ThreadCache::Allocate (32 samples, 0.03%)</title><rect x="943.9" y="373" width="0.4" height="15.0" fill="rgb(240,134,42)" rx="2" ry="2" />
<text  x="946.94" y="383.5" ></text>
</g>
<g >
<title>GetSizeWithCallback (30 samples, 0.03%)</title><rect x="281.1" y="469" width="0.3" height="15.0" fill="rgb(254,192,30)" rx="2" ry="2" />
<text  x="284.06" y="479.5" ></text>
</g>
<g >
<title>__do_softirq (13 samples, 0.01%)</title><rect x="277.2" y="421" width="0.1" height="15.0" fill="rgb(217,166,8)" rx="2" ry="2" />
<text  x="280.16" y="431.5" ></text>
</g>
<g >
<title>perf_pmu_enable (49 samples, 0.05%)</title><rect x="128.9" y="373" width="0.5" height="15.0" fill="rgb(224,170,32)" rx="2" ry="2" />
<text  x="131.87" y="383.5" ></text>
</g>
<g >
<title>group_sched_in (21 samples, 0.02%)</title><rect x="188.1" y="293" width="0.2" height="15.0" fill="rgb(210,23,38)" rx="2" ry="2" />
<text  x="191.07" y="303.5" ></text>
</g>
<g >
<title>SpinLock::Unlock (10 samples, 0.01%)</title><rect x="1142.2" y="485" width="0.1" height="15.0" fill="rgb(233,92,12)" rx="2" ry="2" />
<text  x="1145.20" y="495.5" ></text>
</g>
<g >
<title>operator (11 samples, 0.01%)</title><rect x="322.8" y="421" width="0.1" height="15.0" fill="rgb(219,40,28)" rx="2" ry="2" />
<text  x="325.75" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::io::CodedOutputStream::WriteStringWithSizeToArray (38 samples, 0.04%)</title><rect x="707.0" y="517" width="0.4" height="15.0" fill="rgb(254,76,28)" rx="2" ry="2" />
<text  x="710.03" y="527.5" ></text>
</g>
<g >
<title>findFunction (20 samples, 0.02%)</title><rect x="322.7" y="485" width="0.2" height="15.0" fill="rgb(231,100,51)" rx="2" ry="2" />
<text  x="325.68" y="495.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::set (12 samples, 0.01%)</title><rect x="103.6" y="469" width="0.2" height="15.0" fill="rgb(248,6,51)" rx="2" ry="2" />
<text  x="106.63" y="479.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::find (12 samples, 0.01%)</title><rect x="815.5" y="469" width="0.1" height="15.0" fill="rgb(253,101,15)" rx="2" ry="2" />
<text  x="818.47" y="479.5" ></text>
</g>
<g >
<title>schedule (12 samples, 0.01%)</title><rect x="856.8" y="405" width="0.1" height="15.0" fill="rgb(245,157,9)" rx="2" ry="2" />
<text  x="859.77" y="415.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (28 samples, 0.03%)</title><rect x="899.5" y="341" width="0.3" height="15.0" fill="rgb(245,90,26)" rx="2" ry="2" />
<text  x="902.49" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, std::map&lt;unsigned int, double, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, double&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int const, std::map&lt;unsigned int, double, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, double&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (56 samples, 0.05%)</title><rect x="410.1" y="485" width="0.6" height="15.0" fill="rgb(247,184,17)" rx="2" ry="2" />
<text  x="413.13" y="495.5" ></text>
</g>
<g >
<title>native_write_msr_safe (20 samples, 0.02%)</title><rect x="308.4" y="293" width="0.2" height="15.0" fill="rgb(206,142,33)" rx="2" ry="2" />
<text  x="311.42" y="303.5" ></text>
</g>
<g >
<title>std::string::_M_copy (154 samples, 0.14%)</title><rect x="966.1" y="485" width="1.7" height="15.0" fill="rgb(207,11,5)" rx="2" ry="2" />
<text  x="969.07" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::_Identity&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::_M_insert_unique&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const&amp;&gt; (18 samples, 0.02%)</title><rect x="921.9" y="517" width="0.2" height="15.0" fill="rgb(211,99,52)" rx="2" ry="2" />
<text  x="924.92" y="527.5" ></text>
</g>
<g >
<title>bannerd::engine::gp_param::var (176 samples, 0.16%)</title><rect x="686.6" y="485" width="1.9" height="15.0" fill="rgb(214,74,26)" rx="2" ry="2" />
<text  x="689.58" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, unsigned int&gt;, std::_Select1st&lt;std::pair&lt;std::string const, unsigned int&gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, unsigned int&gt; &gt; &gt;::_M_find_tr&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, void&gt; (125 samples, 0.12%)</title><rect x="700.2" y="485" width="1.3" height="15.0" fill="rgb(215,176,48)" rx="2" ry="2" />
<text  x="703.16" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, target::dynamic_bitset const*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, target::dynamic_bitset const*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (13 samples, 0.01%)</title><rect x="439.4" y="469" width="0.1" height="15.0" fill="rgb(234,153,0)" rx="2" ry="2" />
<text  x="442.40" y="479.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (49 samples, 0.05%)</title><rect x="287.7" y="485" width="0.5" height="15.0" fill="rgb(242,40,29)" rx="2" ry="2" />
<text  x="290.69" y="495.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (101 samples, 0.09%)</title><rect x="842.1" y="421" width="1.1" height="15.0" fill="rgb(221,18,43)" rx="2" ry="2" />
<text  x="845.06" y="431.5" ></text>
</g>
<g >
<title>bannerd::Store::effectiveTestId (20 samples, 0.02%)</title><rect x="325.4" y="517" width="0.2" height="15.0" fill="rgb(250,199,46)" rx="2" ry="2" />
<text  x="328.41" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::_Identity&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::_M_lower_bound (15 samples, 0.01%)</title><rect x="701.6" y="469" width="0.1" height="15.0" fill="rgb(238,155,12)" rx="2" ry="2" />
<text  x="704.55" y="479.5" ></text>
</g>
<g >
<title>__do_softirq (28 samples, 0.03%)</title><rect x="992.8" y="405" width="0.3" height="15.0" fill="rgb(219,227,18)" rx="2" ry="2" />
<text  x="995.75" y="415.5" ></text>
</g>
<g >
<title>CRYPTO_num_locks (13 samples, 0.01%)</title><rect x="892.6" y="501" width="0.1" height="15.0" fill="rgb(245,47,3)" rx="2" ry="2" />
<text  x="895.57" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char const*, std::allocator&lt;char const*&gt; &gt;::_M_allocate (14 samples, 0.01%)</title><rect x="977.4" y="501" width="0.2" height="15.0" fill="rgb(207,212,32)" rx="2" ry="2" />
<text  x="980.44" y="511.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (304 samples, 0.28%)</title><rect x="185.5" y="437" width="3.4" height="15.0" fill="rgb(247,93,36)" rx="2" ry="2" />
<text  x="188.55" y="447.5" ></text>
</g>
<g >
<title>bannerd::engine::gp_param::getEncoded (24 samples, 0.02%)</title><rect x="413.2" y="517" width="0.3" height="15.0" fill="rgb(217,77,27)" rx="2" ry="2" />
<text  x="416.22" y="527.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::operator (49 samples, 0.05%)</title><rect x="681.4" y="469" width="0.6" height="15.0" fill="rgb(211,204,41)" rx="2" ry="2" />
<text  x="684.44" y="479.5" ></text>
</g>
<g >
<title>protobuf_c_message_pack (21 samples, 0.02%)</title><rect x="832.1" y="517" width="0.3" height="15.0" fill="rgb(216,107,46)" rx="2" ry="2" />
<text  x="835.13" y="527.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (134 samples, 0.12%)</title><rect x="405.5" y="485" width="1.5" height="15.0" fill="rgb(233,160,29)" rx="2" ry="2" />
<text  x="408.50" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, std::string&gt;, std::_Select1st&lt;std::pair&lt;std::string const, std::string&gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::_M_create_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::string const&amp;&gt;, std::tuple&lt;&gt; &gt; (26 samples, 0.02%)</title><rect x="157.5" y="485" width="0.3" height="15.0" fill="rgb(223,142,27)" rx="2" ry="2" />
<text  x="160.52" y="495.5" ></text>
</g>
<g >
<title>ctx_sched_in (14 samples, 0.01%)</title><rect x="899.5" y="309" width="0.2" height="15.0" fill="rgb(239,207,9)" rx="2" ry="2" />
<text  x="902.53" y="319.5" ></text>
</g>
<g >
<title>auditsys (12 samples, 0.01%)</title><rect x="315.1" y="485" width="0.1" height="15.0" fill="rgb(235,97,34)" rx="2" ry="2" />
<text  x="318.08" y="495.5" ></text>
</g>
<g >
<title>bannerd::engine::gp_param::var (34 samples, 0.03%)</title><rect x="330.5" y="469" width="0.4" height="15.0" fill="rgb(219,53,34)" rx="2" ry="2" />
<text  x="333.52" y="479.5" ></text>
</g>
<g >
<title>schedule_timeout (25 samples, 0.02%)</title><rect x="194.9" y="405" width="0.3" height="15.0" fill="rgb(219,12,4)" rx="2" ry="2" />
<text  x="197.90" y="415.5" ></text>
</g>
<g >
<title>fillCachedShowClickMsg (75 samples, 0.07%)</title><rect x="675.0" y="517" width="0.9" height="15.0" fill="rgb(211,119,28)" rx="2" ry="2" />
<text  x="678.04" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;target::dynamic_bitset::AlignedAllocator&lt;unsigned long long&gt; &gt;::construct&lt;unsigned long long, unsigned long long const&amp;&gt; (113 samples, 0.10%)</title><rect x="980.8" y="485" width="1.2" height="15.0" fill="rgb(226,106,4)" rx="2" ry="2" />
<text  x="983.81" y="495.5" ></text>
</g>
<g >
<title>trg::protobuf::rb2::TargetMsg::ByteSize (235 samples, 0.22%)</title><rect x="1157.1" y="517" width="2.6" height="15.0" fill="rgb(226,98,30)" rx="2" ry="2" />
<text  x="1160.09" y="527.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (10 samples, 0.01%)</title><rect x="134.0" y="357" width="0.1" height="15.0" fill="rgb(230,190,38)" rx="2" ry="2" />
<text  x="136.96" y="367.5" ></text>
</g>
<g >
<title>tcmalloc::ThreadCache::FreeList::TryPop (20 samples, 0.02%)</title><rect x="1139.3" y="469" width="0.2" height="15.0" fill="rgb(251,122,52)" rx="2" ry="2" />
<text  x="1142.30" y="479.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n&lt;unsigned char*, unsigned long&gt; (25 samples, 0.02%)</title><rect x="979.2" y="485" width="0.2" height="15.0" fill="rgb(205,2,35)" rx="2" ry="2" />
<text  x="982.16" y="495.5" ></text>
</g>
<g >
<title>tcp_transmit_skb (12 samples, 0.01%)</title><rect x="284.9" y="373" width="0.2" height="15.0" fill="rgb(212,167,23)" rx="2" ry="2" />
<text  x="287.94" y="383.5" ></text>
</g>
<g >
<title>std::__fill_n_a&lt;unsigned long, unsigned char&gt; (25 samples, 0.02%)</title><rect x="979.2" y="437" width="0.2" height="15.0" fill="rgb(232,143,34)" rx="2" ry="2" />
<text  x="982.16" y="447.5" ></text>
</g>
<g >
<title>bannerd::store::ActiveCampaignIndex::setPadFilters (10 samples, 0.01%)</title><rect x="439.2" y="453" width="0.1" height="15.0" fill="rgb(230,138,21)" rx="2" ry="2" />
<text  x="442.21" y="463.5" ></text>
</g>
<g >
<title>_IO_no_init (42 samples, 0.04%)</title><rect x="634.2" y="485" width="0.4" height="15.0" fill="rgb(212,83,31)" rx="2" ry="2" />
<text  x="637.17" y="495.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (68 samples, 0.06%)</title><rect x="143.7" y="501" width="0.7" height="15.0" fill="rgb(230,94,32)" rx="2" ry="2" />
<text  x="146.67" y="511.5" ></text>
</g>
<g >
<title>sys_epoll_ctl (12 samples, 0.01%)</title><rect x="138.0" y="469" width="0.1" height="15.0" fill="rgb(208,120,39)" rx="2" ry="2" />
<text  x="141.02" y="479.5" ></text>
</g>
<g >
<title>SHA1_Init (78 samples, 0.07%)</title><rect x="117.0" y="517" width="0.8" height="15.0" fill="rgb(234,207,40)" rx="2" ry="2" />
<text  x="119.99" y="527.5" ></text>
</g>
<g >
<title>BN_POOL_finish (45 samples, 0.04%)</title><rect x="21.8" y="501" width="0.5" height="15.0" fill="rgb(245,212,23)" rx="2" ry="2" />
<text  x="24.81" y="511.5" ></text>
</g>
<g >
<title>__lll_lock_wait (27 samples, 0.03%)</title><rect x="915.9" y="421" width="0.3" height="15.0" fill="rgb(216,41,50)" rx="2" ry="2" />
<text  x="918.93" y="431.5" ></text>
</g>
<g >
<title>__dynamic_cast (15 samples, 0.01%)</title><rect x="278.7" y="517" width="0.1" height="15.0" fill="rgb(213,116,7)" rx="2" ry="2" />
<text  x="281.68" y="527.5" ></text>
</g>
<g >
<title>audit_filter_syscall (16 samples, 0.01%)</title><rect x="170.7" y="469" width="0.2" height="15.0" fill="rgb(239,59,1)" rx="2" ry="2" />
<text  x="173.75" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::construct&lt;std::pair&lt;std::string const, std::string&gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;std::string const&amp;&gt;, std::tuple&lt;&gt; &gt; (19 samples, 0.02%)</title><rect x="157.5" y="437" width="0.2" height="15.0" fill="rgb(228,130,52)" rx="2" ry="2" />
<text  x="160.52" y="447.5" ></text>
</g>
<g >
<title>std::local_Rb_tree_decrement (35 samples, 0.03%)</title><rect x="162.8" y="501" width="0.4" height="15.0" fill="rgb(254,193,38)" rx="2" ry="2" />
<text  x="165.84" y="511.5" ></text>
</g>
<g >
<title>nmi (11 samples, 0.01%)</title><rect x="671.6" y="501" width="0.1" height="15.0" fill="rgb(216,142,25)" rx="2" ry="2" />
<text  x="674.59" y="511.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_wrlock (775 samples, 0.72%)</title><rect x="182.4" y="517" width="8.5" height="15.0" fill="rgb(218,193,20)" rx="2" ry="2" />
<text  x="185.38" y="527.5" ></text>
</g>
<g >
<title>std::string::_Rep::_S_create (12 samples, 0.01%)</title><rect x="948.7" y="501" width="0.1" height="15.0" fill="rgb(214,182,42)" rx="2" ry="2" />
<text  x="951.68" y="511.5" ></text>
</g>
<g >
<title>std::condition_variable::__wait_until_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (306 samples, 0.28%)</title><rect x="318.2" y="437" width="3.3" height="15.0" fill="rgb(254,15,13)" rx="2" ry="2" />
<text  x="321.16" y="447.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (26 samples, 0.02%)</title><rect x="894.9" y="453" width="0.3" height="15.0" fill="rgb(209,29,52)" rx="2" ry="2" />
<text  x="897.95" y="463.5" ></text>
</g>
<g >
<title>sys_futex (19 samples, 0.02%)</title><rect x="893.7" y="453" width="0.2" height="15.0" fill="rgb(213,167,54)" rx="2" ry="2" />
<text  x="896.73" y="463.5" ></text>
</g>
<g >
<title>auditsys (67 samples, 0.06%)</title><rect x="169.5" y="501" width="0.7" height="15.0" fill="rgb(228,175,28)" rx="2" ry="2" />
<text  x="172.49" y="511.5" ></text>
</g>
<g >
<title>deactivate_task (59 samples, 0.05%)</title><rect x="298.9" y="389" width="0.7" height="15.0" fill="rgb(236,173,18)" rx="2" ry="2" />
<text  x="301.91" y="399.5" ></text>
</g>
<g >
<title>sysret_check (10 samples, 0.01%)</title><rect x="143.0" y="485" width="0.1" height="15.0" fill="rgb(227,33,25)" rx="2" ry="2" />
<text  x="146.01" y="495.5" ></text>
</g>
<g >
<title>BN_STACK_push (30 samples, 0.03%)</title><rect x="25.9" y="501" width="0.4" height="15.0" fill="rgb(246,35,11)" rx="2" ry="2" />
<text  x="28.93" y="511.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (13 samples, 0.01%)</title><rect x="154.9" y="405" width="0.2" height="15.0" fill="rgb(217,50,49)" rx="2" ry="2" />
<text  x="157.92" y="415.5" ></text>
</g>
<g >
<title>nmi (12 samples, 0.01%)</title><rect x="79.1" y="501" width="0.1" height="15.0" fill="rgb(219,160,53)" rx="2" ry="2" />
<text  x="82.11" y="511.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (11 samples, 0.01%)</title><rect x="333.4" y="485" width="0.1" height="15.0" fill="rgb(242,75,47)" rx="2" ry="2" />
<text  x="336.38" y="495.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (12 samples, 0.01%)</title><rect x="701.6" y="389" width="0.1" height="15.0" fill="rgb(243,130,32)" rx="2" ry="2" />
<text  x="704.59" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;bannerd::UrlLimitsIndex::Key, std::pair&lt;bannerd::UrlLimitsIndex::Key const, std::vector&lt;bannerd::UrlObjectLimitEx const*, std::allocator&lt;bannerd::UrlObjectLimitEx const*&gt; &gt; &gt;, std::__detail::_Select1st, bannerd::UrlLimitsIndex::KeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (21 samples, 0.02%)</title><rect x="919.8" y="485" width="0.2" height="15.0" fill="rgb(212,45,9)" rx="2" ry="2" />
<text  x="922.76" y="495.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt; &gt; (15 samples, 0.01%)</title><rect x="688.6" y="421" width="0.2" height="15.0" fill="rgb(239,157,18)" rx="2" ry="2" />
<text  x="691.63" y="431.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.isra.13 (49 samples, 0.05%)</title><rect x="128.9" y="325" width="0.5" height="15.0" fill="rgb(222,101,19)" rx="2" ry="2" />
<text  x="131.87" y="335.5" ></text>
</g>
<g >
<title>system_call_fastpath (20 samples, 0.02%)</title><rect x="294.1" y="501" width="0.2" height="15.0" fill="rgb(252,52,27)" rx="2" ry="2" />
<text  x="297.10" y="511.5" ></text>
</g>
<g >
<title>x86_pmu_enable (18 samples, 0.02%)</title><rect x="853.2" y="293" width="0.2" height="15.0" fill="rgb(232,15,46)" rx="2" ry="2" />
<text  x="856.18" y="303.5" ></text>
</g>
<g >
<title>intel_pmu_handle_irq (10 samples, 0.01%)</title><rect x="302.3" y="293" width="0.1" height="15.0" fill="rgb(216,114,6)" rx="2" ry="2" />
<text  x="305.28" y="303.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.isra.13 (17 samples, 0.02%)</title><rect x="853.2" y="261" width="0.2" height="15.0" fill="rgb(243,221,41)" rx="2" ry="2" />
<text  x="856.18" y="271.5" ></text>
</g>
<g >
<title>tcmalloc::SLL_TryPop (15 samples, 0.01%)</title><rect x="1126.1" y="453" width="0.2" height="15.0" fill="rgb(217,114,5)" rx="2" ry="2" />
<text  x="1129.11" y="463.5" ></text>
</g>
<g >
<title>target::bitmap::Index&lt;std::string, unsigned int, std::unordered_map&lt;std::string, unsigned int, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, unsigned int&gt; &gt; &gt; &gt;::build (10 samples, 0.01%)</title><rect x="418.5" y="485" width="0.1" height="15.0" fill="rgb(251,100,22)" rx="2" ry="2" />
<text  x="421.47" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;std::string, std::pair&lt;std::string const, unsigned int&gt;, std::__detail::_Select1st, std::equal_to&lt;std::string&gt;, unsigned long, true&gt;::_S_equals (12 samples, 0.01%)</title><rect x="920.9" y="485" width="0.1" height="15.0" fill="rgb(237,17,4)" rx="2" ry="2" />
<text  x="923.88" y="495.5" ></text>
</g>
<g >
<title>sys_recvfrom (24 samples, 0.02%)</title><rect x="281.7" y="485" width="0.2" height="15.0" fill="rgb(210,25,8)" rx="2" ry="2" />
<text  x="284.69" y="495.5" ></text>
</g>
<g >
<title>call_softirq (16 samples, 0.01%)</title><rect x="613.5" y="437" width="0.2" height="15.0" fill="rgb(236,214,45)" rx="2" ry="2" />
<text  x="616.51" y="447.5" ></text>
</g>
<g >
<title>sys_write (71 samples, 0.07%)</title><rect x="129.5" y="485" width="0.7" height="15.0" fill="rgb(245,94,47)" rx="2" ry="2" />
<text  x="132.47" y="495.5" ></text>
</g>
<g >
<title>queued_spin_lock_slowpath (15 samples, 0.01%)</title><rect x="135.9" y="373" width="0.2" height="15.0" fill="rgb(228,48,32)" rx="2" ry="2" />
<text  x="138.93" y="383.5" ></text>
</g>
<g >
<title>std::string::_M_rep (29 samples, 0.03%)</title><rect x="971.3" y="485" width="0.3" height="15.0" fill="rgb(219,0,47)" rx="2" ry="2" />
<text  x="974.29" y="495.5" ></text>
</g>
<g >
<title>flexible_sched_in (22 samples, 0.02%)</title><rect x="188.1" y="309" width="0.2" height="15.0" fill="rgb(228,140,41)" rx="2" ry="2" />
<text  x="191.07" y="319.5" ></text>
</g>
<g >
<title>dequeue_entity (51 samples, 0.05%)</title><rect x="187.0" y="357" width="0.6" height="15.0" fill="rgb(243,180,38)" rx="2" ry="2" />
<text  x="190.03" y="367.5" ></text>
</g>
<g >
<title>tcmalloc::SizeMap::GetSizeClass (15 samples, 0.01%)</title><rect x="1139.6" y="485" width="0.2" height="15.0" fill="rgb(247,123,16)" rx="2" ry="2" />
<text  x="1142.60" y="495.5" ></text>
</g>
<g >
<title>ASN1_item_ex_new (11 samples, 0.01%)</title><rect x="130.5" y="501" width="0.1" height="15.0" fill="rgb(222,95,25)" rx="2" ry="2" />
<text  x="133.49" y="511.5" ></text>
</g>
<g >
<title>EVP_MD_CTX_init (22 samples, 0.02%)</title><rect x="102.4" y="517" width="0.2" height="15.0" fill="rgb(243,181,11)" rx="2" ry="2" />
<text  x="105.37" y="527.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::count (74 samples, 0.07%)</title><rect x="829.7" y="501" width="0.8" height="15.0" fill="rgb(220,71,48)" rx="2" ry="2" />
<text  x="832.67" y="511.5" ></text>
</g>
<g >
<title>futex_wait (31 samples, 0.03%)</title><rect x="307.2" y="453" width="0.3" height="15.0" fill="rgb(228,176,19)" rx="2" ry="2" />
<text  x="310.21" y="463.5" ></text>
</g>
<g >
<title>FilterImageTypesIndex (129 samples, 0.12%)</title><rect x="102.7" y="517" width="1.4" height="15.0" fill="rgb(247,194,53)" rx="2" ry="2" />
<text  x="105.70" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, std::string&gt;, std::_Select1st&lt;std::pair&lt;std::string const, std::string&gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::_M_find_tr&lt;char [23], void&gt; (14 samples, 0.01%)</title><rect x="409.8" y="485" width="0.2" height="15.0" fill="rgb(234,183,38)" rx="2" ry="2" />
<text  x="412.80" y="495.5" ></text>
</g>
<g >
<title>__GI_____strtoll_l_internal (24 samples, 0.02%)</title><rect x="699.2" y="501" width="0.3" height="15.0" fill="rgb(226,99,48)" rx="2" ry="2" />
<text  x="702.19" y="511.5" ></text>
</g>
<g >
<title>ip_rcv_finish (11 samples, 0.01%)</title><rect x="613.5" y="277" width="0.2" height="15.0" fill="rgb(227,141,35)" rx="2" ry="2" />
<text  x="616.55" y="287.5" ></text>
</g>
<g >
<title>std::condition_variable::wait_until&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (72 samples, 0.07%)</title><rect x="834.2" y="469" width="0.8" height="15.0" fill="rgb(243,159,48)" rx="2" ry="2" />
<text  x="837.20" y="479.5" ></text>
</g>
<g >
<title>do_futex (126 samples, 0.12%)</title><rect x="289.8" y="469" width="1.4" height="15.0" fill="rgb(237,112,42)" rx="2" ry="2" />
<text  x="292.84" y="479.5" ></text>
</g>
<g >
<title>native_rw_unlock (15 samples, 0.01%)</title><rect x="807.2" y="453" width="0.1" height="15.0" fill="rgb(211,159,6)" rx="2" ry="2" />
<text  x="810.18" y="463.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (104 samples, 0.10%)</title><rect x="415.7" y="469" width="1.1" height="15.0" fill="rgb(223,15,17)" rx="2" ry="2" />
<text  x="418.68" y="479.5" ></text>
</g>
<g >
<title>sys_epoll_ctl (82 samples, 0.08%)</title><rect x="193.4" y="485" width="0.9" height="15.0" fill="rgb(244,39,6)" rx="2" ry="2" />
<text  x="196.36" y="495.5" ></text>
</g>
<g >
<title>ip_local_out_sk (49 samples, 0.05%)</title><rect x="284.4" y="325" width="0.5" height="15.0" fill="rgb(229,142,31)" rx="2" ry="2" />
<text  x="287.36" y="335.5" ></text>
</g>
<g >
<title>bannerd::store::ActiveCampaignIndex::build (32 samples, 0.03%)</title><rect x="418.0" y="453" width="0.4" height="15.0" fill="rgb(241,34,44)" rx="2" ry="2" />
<text  x="421.04" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::UInt32Size (40 samples, 0.04%)</title><rect x="1159.1" y="501" width="0.4" height="15.0" fill="rgb(210,113,6)" rx="2" ry="2" />
<text  x="1162.11" y="511.5" ></text>
</g>
<g >
<title>do_futex (24 samples, 0.02%)</title><rect x="318.8" y="341" width="0.3" height="15.0" fill="rgb(225,210,42)" rx="2" ry="2" />
<text  x="321.83" y="351.5" ></text>
</g>
<g >
<title>dequeue_entity (41 samples, 0.04%)</title><rect x="299.0" y="357" width="0.5" height="15.0" fill="rgb(236,127,33)" rx="2" ry="2" />
<text  x="302.02" y="367.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (22 samples, 0.02%)</title><rect x="944.7" y="501" width="0.3" height="15.0" fill="rgb(210,214,47)" rx="2" ry="2" />
<text  x="947.75" y="511.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (13 samples, 0.01%)</title><rect x="931.1" y="325" width="0.2" height="15.0" fill="rgb(228,116,47)" rx="2" ry="2" />
<text  x="934.11" y="335.5" ></text>
</g>
<g >
<title>snprintf (17 samples, 0.02%)</title><rect x="1169.9" y="501" width="0.2" height="15.0" fill="rgb(235,138,23)" rx="2" ry="2" />
<text  x="1172.90" y="511.5" ></text>
</g>
<g >
<title>SHA1_Final (14 samples, 0.01%)</title><rect x="892.7" y="501" width="0.2" height="15.0" fill="rgb(243,65,20)" rx="2" ry="2" />
<text  x="895.71" y="511.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::word (35 samples, 0.03%)</title><rect x="1019.5" y="453" width="0.4" height="15.0" fill="rgb(245,91,36)" rx="2" ry="2" />
<text  x="1022.47" y="463.5" ></text>
</g>
<g >
<title>std::string::resize (20 samples, 0.02%)</title><rect x="154.9" y="453" width="0.2" height="15.0" fill="rgb(224,114,42)" rx="2" ry="2" />
<text  x="157.87" y="463.5" ></text>
</g>
<g >
<title>nextPad (226 samples, 0.21%)</title><rect x="436.7" y="501" width="2.5" height="15.0" fill="rgb(245,28,5)" rx="2" ry="2" />
<text  x="439.72" y="511.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_set_length_and_sharable (28 samples, 0.03%)</title><rect x="968.2" y="469" width="0.3" height="15.0" fill="rgb(246,130,23)" rx="2" ry="2" />
<text  x="971.16" y="479.5" ></text>
</g>
<g >
<title>__upper_bound&lt;__gnu_cxx::__normal_iterator&lt;const bannerd::details::InternalStorage::Record*, std::vector&lt;bannerd::details::InternalStorage::Record&gt; &gt;, bannerd::details::InternalStorage::Record, __gnu_cxx::__ops::_Val_comp_iter&lt;(anonymous namespace)::CompareByClass&gt; &gt; (112 samples, 0.10%)</title><rect x="379.6" y="469" width="1.2" height="15.0" fill="rgb(227,18,28)" rx="2" ry="2" />
<text  x="382.57" y="479.5" ></text>
</g>
<g >
<title>bannerd::store::ActiveCampaignIndex::setPadFilters (29 samples, 0.03%)</title><rect x="427.2" y="453" width="0.3" height="15.0" fill="rgb(212,112,21)" rx="2" ry="2" />
<text  x="430.15" y="463.5" ></text>
</g>
<g >
<title>__strnlen_sse2 (32 samples, 0.03%)</title><rect x="669.6" y="469" width="0.4" height="15.0" fill="rgb(208,169,35)" rx="2" ry="2" />
<text  x="672.62" y="479.5" ></text>
</g>
<g >
<title>inline_mysql_rwlock_unlock (35 samples, 0.03%)</title><rect x="631.6" y="469" width="0.4" height="15.0" fill="rgb(231,36,20)" rx="2" ry="2" />
<text  x="634.60" y="479.5" ></text>
</g>
<g >
<title>banner_raw_msg__iter_unpack (13 samples, 0.01%)</title><rect x="313.3" y="517" width="0.2" height="15.0" fill="rgb(217,168,52)" rx="2" ry="2" />
<text  x="316.33" y="527.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (507 samples, 0.47%)</title><rect x="299.8" y="373" width="5.5" height="15.0" fill="rgb(207,8,38)" rx="2" ry="2" />
<text  x="302.77" y="383.5" ></text>
</g>
<g >
<title>alloc_pages_current (10 samples, 0.01%)</title><rect x="283.6" y="373" width="0.1" height="15.0" fill="rgb(248,190,11)" rx="2" ry="2" />
<text  x="286.61" y="383.5" ></text>
</g>
<g >
<title>ttwu_do_wakeup (12 samples, 0.01%)</title><rect x="181.8" y="389" width="0.1" height="15.0" fill="rgb(219,110,54)" rx="2" ry="2" />
<text  x="184.79" y="399.5" ></text>
</g>
<g >
<title>sys_futex (17 samples, 0.02%)</title><rect x="893.4" y="453" width="0.2" height="15.0" fill="rgb(252,57,19)" rx="2" ry="2" />
<text  x="896.44" y="463.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (13 samples, 0.01%)</title><rect x="688.7" y="405" width="0.1" height="15.0" fill="rgb(243,137,27)" rx="2" ry="2" />
<text  x="691.65" y="415.5" ></text>
</g>
<g >
<title>std::map&lt;std::string, std::string, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (32 samples, 0.03%)</title><rect x="330.5" y="453" width="0.4" height="15.0" fill="rgb(221,201,27)" rx="2" ry="2" />
<text  x="333.52" y="463.5" ></text>
</g>
<g >
<title>inet_sendmsg (36 samples, 0.03%)</title><rect x="1164.3" y="421" width="0.4" height="15.0" fill="rgb(218,49,10)" rx="2" ry="2" />
<text  x="1167.27" y="431.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (10 samples, 0.01%)</title><rect x="168.9" y="517" width="0.1" height="15.0" fill="rgb(215,131,40)" rx="2" ry="2" />
<text  x="171.86" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;target::dynamic_bitset::AlignedAllocator&lt;unsigned long long&gt; &gt;::_S_construct&lt;unsigned long long, unsigned long long const&amp;&gt; (28 samples, 0.03%)</title><rect x="830.8" y="421" width="0.3" height="15.0" fill="rgb(214,219,49)" rx="2" ry="2" />
<text  x="833.78" y="431.5" ></text>
</g>
<g >
<title>selectBanners (34 samples, 0.03%)</title><rect x="323.4" y="485" width="0.4" height="15.0" fill="rgb(251,145,39)" rx="2" ry="2" />
<text  x="326.43" y="495.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (13 samples, 0.01%)</title><rect x="355.9" y="453" width="0.2" height="15.0" fill="rgb(210,120,20)" rx="2" ry="2" />
<text  x="358.94" y="463.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (12 samples, 0.01%)</title><rect x="689.5" y="373" width="0.1" height="15.0" fill="rgb(213,39,18)" rx="2" ry="2" />
<text  x="692.47" y="383.5" ></text>
</g>
<g >
<title>sock_recvmsg (20 samples, 0.02%)</title><rect x="281.7" y="453" width="0.2" height="15.0" fill="rgb(229,113,38)" rx="2" ry="2" />
<text  x="284.70" y="463.5" ></text>
</g>
<g >
<title>encode_varuint32_size (15 samples, 0.01%)</title><rect x="642.8" y="517" width="0.1" height="15.0" fill="rgb(205,147,7)" rx="2" ry="2" />
<text  x="645.78" y="527.5" ></text>
</g>
<g >
<title>std::string::_M_copy (370 samples, 0.34%)</title><rect x="958.7" y="501" width="4.1" height="15.0" fill="rgb(242,226,8)" rx="2" ry="2" />
<text  x="961.70" y="511.5" ></text>
</g>
<g >
<title>reset (200 samples, 0.19%)</title><rect x="432.1" y="469" width="2.2" height="15.0" fill="rgb(253,120,10)" rx="2" ry="2" />
<text  x="435.06" y="479.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::unlock (21 samples, 0.02%)</title><rect x="321.7" y="469" width="0.2" height="15.0" fill="rgb(213,228,50)" rx="2" ry="2" />
<text  x="324.71" y="479.5" ></text>
</g>
<g >
<title>FilterPatternIndex (187 samples, 0.17%)</title><rect x="426.6" y="501" width="2.0" height="15.0" fill="rgb(225,89,43)" rx="2" ry="2" />
<text  x="429.59" y="511.5" ></text>
</g>
<g >
<title>do_fork (367 samples, 0.34%)</title><rect x="138.2" y="453" width="4.0" height="15.0" fill="rgb(223,208,16)" rx="2" ry="2" />
<text  x="141.21" y="463.5" ></text>
</g>
<g >
<title>plist_del (12 samples, 0.01%)</title><rect x="296.6" y="421" width="0.1" height="15.0" fill="rgb(225,127,32)" rx="2" ry="2" />
<text  x="299.60" y="431.5" ></text>
</g>
<g >
<title>BN_MONT_CTX_set_locked (428 samples, 0.40%)</title><rect x="26.5" y="517" width="4.7" height="15.0" fill="rgb(233,16,49)" rx="2" ry="2" />
<text  x="29.50" y="527.5" ></text>
</g>
<g >
<title>sys_sendto (285 samples, 0.26%)</title><rect x="282.1" y="485" width="3.1" height="15.0" fill="rgb(242,23,45)" rx="2" ry="2" />
<text  x="285.10" y="495.5" ></text>
</g>
<g >
<title>do_free_with_callback (11 samples, 0.01%)</title><rect x="281.4" y="469" width="0.1" height="15.0" fill="rgb(248,227,25)" rx="2" ry="2" />
<text  x="284.40" y="479.5" ></text>
</g>
<g >
<title>bannerd::engine::CNStat::add (733 samples, 0.68%)</title><rect x="820.4" y="485" width="8.0" height="15.0" fill="rgb(245,18,19)" rx="2" ry="2" />
<text  x="823.36" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::RepeatedField&lt;unsigned int&gt;::RepeatedField (17 samples, 0.02%)</title><rect x="1163.4" y="501" width="0.2" height="15.0" fill="rgb(235,77,21)" rx="2" ry="2" />
<text  x="1166.37" y="511.5" ></text>
</g>
<g >
<title>__schedule (19 samples, 0.02%)</title><rect x="318.9" y="277" width="0.2" height="15.0" fill="rgb(213,25,31)" rx="2" ry="2" />
<text  x="321.89" y="287.5" ></text>
</g>
<g >
<title>system_call_after_swapgs (13 samples, 0.01%)</title><rect x="136.5" y="485" width="0.2" height="15.0" fill="rgb(223,204,24)" rx="2" ry="2" />
<text  x="139.54" y="495.5" ></text>
</g>
<g >
<title>do_nanosleep (42 samples, 0.04%)</title><rect x="308.2" y="437" width="0.5" height="15.0" fill="rgb(252,183,48)" rx="2" ry="2" />
<text  x="311.21" y="447.5" ></text>
</g>
<g >
<title>nmi (11 samples, 0.01%)</title><rect x="900.5" y="501" width="0.1" height="15.0" fill="rgb(228,137,0)" rx="2" ry="2" />
<text  x="903.47" y="511.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (32 samples, 0.03%)</title><rect x="675.1" y="389" width="0.3" height="15.0" fill="rgb(245,162,29)" rx="2" ry="2" />
<text  x="678.07" y="399.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (35 samples, 0.03%)</title><rect x="631.6" y="437" width="0.4" height="15.0" fill="rgb(234,38,26)" rx="2" ry="2" />
<text  x="634.60" y="447.5" ></text>
</g>
<g >
<title>std::string::assign (411 samples, 0.38%)</title><rect x="964.8" y="517" width="4.5" height="15.0" fill="rgb(216,102,18)" rx="2" ry="2" />
<text  x="967.83" y="527.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (21 samples, 0.02%)</title><rect x="286.2" y="437" width="0.2" height="15.0" fill="rgb(211,192,47)" rx="2" ry="2" />
<text  x="289.17" y="447.5" ></text>
</g>
<g >
<title>openssl_lock_function (41 samples, 0.04%)</title><rect x="810.1" y="517" width="0.5" height="15.0" fill="rgb(239,136,12)" rx="2" ry="2" />
<text  x="813.12" y="527.5" ></text>
</g>
<g >
<title>setCampaign (38 samples, 0.04%)</title><rect x="103.3" y="485" width="0.5" height="15.0" fill="rgb(231,184,51)" rx="2" ry="2" />
<text  x="106.34" y="495.5" ></text>
</g>
<g >
<title>std::string::_M_mutate (127 samples, 0.12%)</title><rect x="967.8" y="485" width="1.3" height="15.0" fill="rgb(205,56,4)" rx="2" ry="2" />
<text  x="970.75" y="495.5" ></text>
</g>
<g >
<title>queued_spin_lock_slowpath (10 samples, 0.01%)</title><rect x="290.4" y="421" width="0.1" height="15.0" fill="rgb(214,225,4)" rx="2" ry="2" />
<text  x="293.44" y="431.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (152 samples, 0.14%)</title><rect x="841.9" y="453" width="1.7" height="15.0" fill="rgb(243,72,9)" rx="2" ry="2" />
<text  x="844.94" y="463.5" ></text>
</g>
<g >
<title>auditsys (26 samples, 0.02%)</title><rect x="182.5" y="501" width="0.3" height="15.0" fill="rgb(247,188,15)" rx="2" ry="2" />
<text  x="185.47" y="511.5" ></text>
</g>
<g >
<title>init_code (12 samples, 0.01%)</title><rect x="806.4" y="517" width="0.1" height="15.0" fill="rgb(241,93,23)" rx="2" ry="2" />
<text  x="809.40" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::allocator&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;&amp;&gt; (14 samples, 0.01%)</title><rect x="978.2" y="517" width="0.2" height="15.0" fill="rgb(237,183,44)" rx="2" ry="2" />
<text  x="981.24" y="527.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;bannerd::UrlLimitsIndex::Key, std::pair&lt;bannerd::UrlLimitsIndex::Key const, std::vector&lt;bannerd::UrlObjectLimitEx const*, std::allocator&lt;bannerd::UrlObjectLimitEx const*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;bannerd::UrlLimitsIndex::Key const, std::vector&lt;bannerd::UrlObjectLimitEx const*, std::allocator&lt;bannerd::UrlObjectLimitEx const*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;bannerd::UrlLimitsIndex::Key&gt;, bannerd::UrlLimitsIndex::KeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (46 samples, 0.04%)</title><rect x="919.6" y="517" width="0.5" height="15.0" fill="rgb(225,62,33)" rx="2" ry="2" />
<text  x="922.62" y="527.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (77 samples, 0.07%)</title><rect x="975.3" y="485" width="0.9" height="15.0" fill="rgb(233,130,45)" rx="2" ry="2" />
<text  x="978.32" y="495.5" ></text>
</g>
<g >
<title>tc_malloc (641 samples, 0.60%)</title><rect x="1125.8" y="517" width="7.0" height="15.0" fill="rgb(238,79,31)" rx="2" ry="2" />
<text  x="1128.77" y="527.5" ></text>
</g>
<g >
<title>sysret_audit (13 samples, 0.01%)</title><rect x="898.0" y="469" width="0.2" height="15.0" fill="rgb(209,131,9)" rx="2" ry="2" />
<text  x="901.02" y="479.5" ></text>
</g>
<g >
<title>lower_bound&lt;const (anonymous namespace)::ProcFunction*, (anonymous namespace)::ProcFunction, (anonymous namespace)::findFunction (600 samples, 0.56%)</title><rect x="690.4" y="469" width="6.6" height="15.0" fill="rgb(241,12,31)" rx="2" ry="2" />
<text  x="693.45" y="479.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (23 samples, 0.02%)</title><rect x="922.6" y="421" width="0.2" height="15.0" fill="rgb(222,90,18)" rx="2" ry="2" />
<text  x="925.59" y="431.5" ></text>
</g>
<g >
<title>std::map&lt;std::string, std::string, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (45 samples, 0.04%)</title><rect x="688.5" y="501" width="0.5" height="15.0" fill="rgb(210,31,49)" rx="2" ry="2" />
<text  x="691.52" y="511.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::operator&amp;= (26 samples, 0.02%)</title><rect x="1097.2" y="485" width="0.3" height="15.0" fill="rgb(233,169,9)" rx="2" ry="2" />
<text  x="1100.23" y="495.5" ></text>
</g>
<g >
<title>bannerd::store::ActiveCampaignIndex::setPadFilters (10 samples, 0.01%)</title><rect x="426.3" y="421" width="0.2" height="15.0" fill="rgb(213,52,17)" rx="2" ry="2" />
<text  x="429.34" y="431.5" ></text>
</g>
<g >
<title>__pthread_cond_timedwait (69 samples, 0.06%)</title><rect x="852.8" y="469" width="0.7" height="15.0" fill="rgb(228,158,29)" rx="2" ry="2" />
<text  x="855.77" y="479.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (18 samples, 0.02%)</title><rect x="321.7" y="421" width="0.2" height="15.0" fill="rgb(226,211,32)" rx="2" ry="2" />
<text  x="324.72" y="431.5" ></text>
</g>
<g >
<title>__strchrnul (67 samples, 0.06%)</title><rect x="639.8" y="469" width="0.7" height="15.0" fill="rgb(244,19,37)" rx="2" ry="2" />
<text  x="642.77" y="479.5" ></text>
</g>
<g >
<title>system_call_fastpath (19 samples, 0.02%)</title><rect x="194.5" y="501" width="0.2" height="15.0" fill="rgb(220,91,23)" rx="2" ry="2" />
<text  x="197.47" y="511.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.isra.13 (32 samples, 0.03%)</title><rect x="308.3" y="309" width="0.4" height="15.0" fill="rgb(221,226,27)" rx="2" ry="2" />
<text  x="311.31" y="319.5" ></text>
</g>
<g >
<title>perf_pmu_sched_task (18 samples, 0.02%)</title><rect x="899.0" y="341" width="0.2" height="15.0" fill="rgb(216,18,25)" rx="2" ry="2" />
<text  x="902.02" y="351.5" ></text>
</g>
<g >
<title>audit_filter_syscall (12 samples, 0.01%)</title><rect x="294.8" y="469" width="0.2" height="15.0" fill="rgb(223,157,10)" rx="2" ry="2" />
<text  x="297.84" y="479.5" ></text>
</g>
<g >
<title>std::string::_M_check_length (105 samples, 0.10%)</title><rect x="957.6" y="501" width="1.1" height="15.0" fill="rgb(252,149,16)" rx="2" ry="2" />
<text  x="960.55" y="511.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (10 samples, 0.01%)</title><rect x="145.2" y="389" width="0.1" height="15.0" fill="rgb(243,221,36)" rx="2" ry="2" />
<text  x="148.19" y="399.5" ></text>
</g>
<g >
<title>flexible_sched_in (15 samples, 0.01%)</title><rect x="320.5" y="197" width="0.2" height="15.0" fill="rgb(223,225,32)" rx="2" ry="2" />
<text  x="323.50" y="207.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (20 samples, 0.02%)</title><rect x="943.7" y="405" width="0.2" height="15.0" fill="rgb(249,126,3)" rx="2" ry="2" />
<text  x="946.72" y="415.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (21 samples, 0.02%)</title><rect x="891.5" y="485" width="0.3" height="15.0" fill="rgb(248,217,43)" rx="2" ry="2" />
<text  x="894.54" y="495.5" ></text>
</g>
<g >
<title>inet_accept (32 samples, 0.03%)</title><rect x="194.9" y="437" width="0.3" height="15.0" fill="rgb(230,149,2)" rx="2" ry="2" />
<text  x="197.86" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, std::string&gt;, std::_Select1st&lt;std::pair&lt;std::string const, std::string&gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::_M_lower_bound_tr&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, void&gt; (61 samples, 0.06%)</title><rect x="413.6" y="469" width="0.6" height="15.0" fill="rgb(222,100,7)" rx="2" ry="2" />
<text  x="416.58" y="479.5" ></text>
</g>
<g >
<title>rb_get_header2 (24 samples, 0.02%)</title><rect x="854.5" y="517" width="0.3" height="15.0" fill="rgb(210,39,31)" rx="2" ry="2" />
<text  x="857.50" y="527.5" ></text>
</g>
<g >
<title>BN_copy (58 samples, 0.05%)</title><rect x="46.9" y="517" width="0.7" height="15.0" fill="rgb(216,219,44)" rx="2" ry="2" />
<text  x="49.92" y="527.5" ></text>
</g>
<g >
<title>std::string::size (20 samples, 0.02%)</title><rect x="675.6" y="389" width="0.2" height="15.0" fill="rgb(246,39,45)" rx="2" ry="2" />
<text  x="678.60" y="399.5" ></text>
</g>
<g >
<title>ep_send_events_proc (11 samples, 0.01%)</title><rect x="128.1" y="437" width="0.1" height="15.0" fill="rgb(220,184,15)" rx="2" ry="2" />
<text  x="131.09" y="447.5" ></text>
</g>
<g >
<title>SpinLockHolder::~SpinLockHolder (10 samples, 0.01%)</title><rect x="1142.2" y="501" width="0.1" height="15.0" fill="rgb(220,70,40)" rx="2" ry="2" />
<text  x="1145.20" y="511.5" ></text>
</g>
<g >
<title>sys_futex (20 samples, 0.02%)</title><rect x="294.1" y="485" width="0.2" height="15.0" fill="rgb(240,182,28)" rx="2" ry="2" />
<text  x="297.10" y="495.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::_S_cmp&lt;std::string const&amp;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const&amp;&gt; (100 samples, 0.09%)</title><rect x="700.3" y="437" width="1.1" height="15.0" fill="rgb(214,126,22)" rx="2" ry="2" />
<text  x="703.35" y="447.5" ></text>
</g>
<g >
<title>free_string (40 samples, 0.04%)</title><rect x="676.2" y="517" width="0.5" height="15.0" fill="rgb(222,4,3)" rx="2" ry="2" />
<text  x="679.23" y="527.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::~unique_lock (36 samples, 0.03%)</title><rect x="321.5" y="485" width="0.4" height="15.0" fill="rgb(209,11,0)" rx="2" ry="2" />
<text  x="324.55" y="495.5" ></text>
</g>
<g >
<title>system_call_fastpath (24 samples, 0.02%)</title><rect x="907.4" y="421" width="0.3" height="15.0" fill="rgb(241,219,50)" rx="2" ry="2" />
<text  x="910.39" y="431.5" ></text>
</g>
<g >
<title>std::string::_M_copy (124 samples, 0.12%)</title><rect x="943.0" y="437" width="1.4" height="15.0" fill="rgb(228,158,51)" rx="2" ry="2" />
<text  x="946.02" y="447.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (62 samples, 0.06%)</title><rect x="700.4" y="405" width="0.7" height="15.0" fill="rgb(230,32,38)" rx="2" ry="2" />
<text  x="703.37" y="415.5" ></text>
</g>
<g >
<title>__memset_sse2 (34 samples, 0.03%)</title><rect x="921.1" y="501" width="0.4" height="15.0" fill="rgb(214,44,29)" rx="2" ry="2" />
<text  x="924.14" y="511.5" ></text>
</g>
<g >
<title>trg::tarantool_client::epoll_loop::prepare_to_new_request (60 samples, 0.06%)</title><rect x="1166.7" y="501" width="0.6" height="15.0" fill="rgb(231,31,19)" rx="2" ry="2" />
<text  x="1169.67" y="511.5" ></text>
</g>
<g >
<title>do_softirq (18 samples, 0.02%)</title><rect x="284.5" y="245" width="0.2" height="15.0" fill="rgb(236,165,31)" rx="2" ry="2" />
<text  x="287.48" y="255.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (73 samples, 0.07%)</title><rect x="170.3" y="485" width="0.8" height="15.0" fill="rgb(224,219,11)" rx="2" ry="2" />
<text  x="173.34" y="495.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::operator&amp;= (26 samples, 0.02%)</title><rect x="1096.9" y="501" width="0.2" height="15.0" fill="rgb(226,214,36)" rx="2" ry="2" />
<text  x="1099.85" y="511.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (10 samples, 0.01%)</title><rect x="144.6" y="453" width="0.1" height="15.0" fill="rgb(207,20,23)" rx="2" ry="2" />
<text  x="147.59" y="463.5" ></text>
</g>
<g >
<title>__libc_free (116 samples, 0.11%)</title><rect x="278.9" y="517" width="1.3" height="15.0" fill="rgb(232,68,5)" rx="2" ry="2" />
<text  x="281.90" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::STLStringResizeUninitialized (20 samples, 0.02%)</title><rect x="154.9" y="485" width="0.2" height="15.0" fill="rgb(240,8,31)" rx="2" ry="2" />
<text  x="157.87" y="495.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (31 samples, 0.03%)</title><rect x="853.1" y="325" width="0.3" height="15.0" fill="rgb(232,76,12)" rx="2" ry="2" />
<text  x="856.07" y="335.5" ></text>
</g>
<g >
<title>__memset_sse2 (15 samples, 0.01%)</title><rect x="920.2" y="485" width="0.2" height="15.0" fill="rgb(224,188,31)" rx="2" ry="2" />
<text  x="923.21" y="495.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (63 samples, 0.06%)</title><rect x="405.7" y="437" width="0.7" height="15.0" fill="rgb(253,122,30)" rx="2" ry="2" />
<text  x="408.74" y="447.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::operator (51 samples, 0.05%)</title><rect x="413.7" y="453" width="0.5" height="15.0" fill="rgb(243,10,39)" rx="2" ry="2" />
<text  x="416.69" y="463.5" ></text>
</g>
<g >
<title>operator (352 samples, 0.33%)</title><rect x="693.1" y="421" width="3.9" height="15.0" fill="rgb(209,177,35)" rx="2" ry="2" />
<text  x="696.12" y="431.5" ></text>
</g>
<g >
<title>event_sched_in.isra.101 (46 samples, 0.04%)</title><rect x="301.2" y="277" width="0.5" height="15.0" fill="rgb(215,109,2)" rx="2" ry="2" />
<text  x="304.23" y="287.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (40 samples, 0.04%)</title><rect x="265.3" y="485" width="0.5" height="15.0" fill="rgb(235,172,31)" rx="2" ry="2" />
<text  x="268.34" y="495.5" ></text>
</g>
<g >
<title>__strlen_sse2_pminub (27 samples, 0.03%)</title><rect x="677.7" y="501" width="0.3" height="15.0" fill="rgb(205,17,7)" rx="2" ry="2" />
<text  x="680.66" y="511.5" ></text>
</g>
<g >
<title>bannerd::engine::roundPrice (51 samples, 0.05%)</title><rect x="414.7" y="517" width="0.6" height="15.0" fill="rgb(225,185,29)" rx="2" ry="2" />
<text  x="417.71" y="527.5" ></text>
</g>
<g >
<title>std::string::compare (555 samples, 0.52%)</title><rect x="844.6" y="389" width="6.1" height="15.0" fill="rgb(232,8,42)" rx="2" ry="2" />
<text  x="847.62" y="399.5" ></text>
</g>
<g >
<title>inet_sendmsg (23 samples, 0.02%)</title><rect x="142.4" y="421" width="0.3" height="15.0" fill="rgb(221,33,35)" rx="2" ry="2" />
<text  x="145.44" y="431.5" ></text>
</g>
<g >
<title>base::internal::HookList&lt;void  (27 samples, 0.03%)</title><rect x="1126.3" y="485" width="0.3" height="15.0" fill="rgb(240,122,16)" rx="2" ry="2" />
<text  x="1129.28" y="495.5" ></text>
</g>
<g >
<title>futex_wait (16 samples, 0.01%)</title><rect x="988.1" y="437" width="0.2" height="15.0" fill="rgb(211,201,16)" rx="2" ry="2" />
<text  x="991.13" y="447.5" ></text>
</g>
<g >
<title>tcmalloc::ThreadCache::FreeList::TryPop (26 samples, 0.02%)</title><rect x="1126.0" y="469" width="0.3" height="15.0" fill="rgb(238,215,42)" rx="2" ry="2" />
<text  x="1128.99" y="479.5" ></text>
</g>
<g >
<title>nmi (35 samples, 0.03%)</title><rect x="1110.9" y="469" width="0.4" height="15.0" fill="rgb(252,73,22)" rx="2" ry="2" />
<text  x="1113.89" y="479.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (16 samples, 0.01%)</title><rect x="834.8" y="341" width="0.2" height="15.0" fill="rgb(217,142,30)" rx="2" ry="2" />
<text  x="837.79" y="351.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::basic_string_view (11 samples, 0.01%)</title><rect x="333.4" y="501" width="0.1" height="15.0" fill="rgb(248,181,53)" rx="2" ry="2" />
<text  x="336.38" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, std::string&gt;, std::_Select1st&lt;std::pair&lt;std::string const, std::string&gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::_M_erase (195 samples, 0.18%)</title><rect x="926.9" y="517" width="2.1" height="15.0" fill="rgb(234,19,42)" rx="2" ry="2" />
<text  x="929.88" y="527.5" ></text>
</g>
<g >
<title>system_call_fastpath (15 samples, 0.01%)</title><rect x="891.8" y="469" width="0.2" height="15.0" fill="rgb(251,215,4)" rx="2" ry="2" />
<text  x="894.85" y="479.5" ></text>
</g>
<g >
<title>get_futex_key (14 samples, 0.01%)</title><rect x="290.5" y="437" width="0.2" height="15.0" fill="rgb(235,122,28)" rx="2" ry="2" />
<text  x="293.55" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (39 samples, 0.04%)</title><rect x="421.6" y="437" width="0.4" height="15.0" fill="rgb(237,54,13)" rx="2" ry="2" />
<text  x="424.55" y="447.5" ></text>
</g>
<g >
<title>__GI_madvise (19 samples, 0.02%)</title><rect x="194.5" y="517" width="0.2" height="15.0" fill="rgb(223,143,7)" rx="2" ry="2" />
<text  x="197.47" y="527.5" ></text>
</g>
<g >
<title>tcmalloc::ThreadCache::FreeList::Push (71 samples, 0.07%)</title><rect x="1125.0" y="437" width="0.8" height="15.0" fill="rgb(253,67,47)" rx="2" ry="2" />
<text  x="1128.00" y="447.5" ></text>
</g>
<g >
<title>futex_wait (21 samples, 0.02%)</title><rect x="853.6" y="421" width="0.2" height="15.0" fill="rgb(222,44,33)" rx="2" ry="2" />
<text  x="856.58" y="431.5" ></text>
</g>
<g >
<title>nmi (47 samples, 0.04%)</title><rect x="1104.4" y="501" width="0.5" height="15.0" fill="rgb(245,124,3)" rx="2" ry="2" />
<text  x="1107.39" y="511.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (11 samples, 0.01%)</title><rect x="834.6" y="405" width="0.1" height="15.0" fill="rgb(238,66,17)" rx="2" ry="2" />
<text  x="837.57" y="415.5" ></text>
</g>
<g >
<title>bannerd::Engine::selectAndWeightInPrio (72 samples, 0.07%)</title><rect x="323.4" y="517" width="0.7" height="15.0" fill="rgb(228,152,28)" rx="2" ry="2" />
<text  x="326.36" y="527.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::test (23 samples, 0.02%)</title><rect x="441.8" y="485" width="0.2" height="15.0" fill="rgb(248,126,27)" rx="2" ry="2" />
<text  x="444.79" y="495.5" ></text>
</g>
<g >
<title>getProductId (177 samples, 0.16%)</title><rect x="686.6" y="501" width="1.9" height="15.0" fill="rgb(218,177,28)" rx="2" ry="2" />
<text  x="689.58" y="511.5" ></text>
</g>
<g >
<title>operator (78 samples, 0.07%)</title><rect x="667.6" y="453" width="0.8" height="15.0" fill="rgb(219,191,36)" rx="2" ry="2" />
<text  x="670.57" y="463.5" ></text>
</g>
<g >
<title>_IO_vfprintf_internal (126 samples, 0.12%)</title><rect x="985.7" y="469" width="1.4" height="15.0" fill="rgb(239,122,50)" rx="2" ry="2" />
<text  x="988.72" y="479.5" ></text>
</g>
<g >
<title>strchr@plt (22 samples, 0.02%)</title><rect x="987.8" y="517" width="0.2" height="15.0" fill="rgb(246,2,12)" rx="2" ry="2" />
<text  x="990.80" y="527.5" ></text>
</g>
<g >
<title>std::string::operator std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; (36 samples, 0.03%)</title><rect x="701.1" y="421" width="0.3" height="15.0" fill="rgb(218,190,23)" rx="2" ry="2" />
<text  x="704.05" y="431.5" ></text>
</g>
<g >
<title>bannerd::store::ActiveCampaignIndex::setPadFilters (24 samples, 0.02%)</title><rect x="427.5" y="437" width="0.2" height="15.0" fill="rgb(244,150,23)" rx="2" ry="2" />
<text  x="430.47" y="447.5" ></text>
</g>
<g >
<title>bannerd::details::InternalStorage::Record::~Record (43 samples, 0.04%)</title><rect x="355.8" y="501" width="0.5" height="15.0" fill="rgb(223,23,48)" rx="2" ry="2" />
<text  x="358.80" y="511.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (14 samples, 0.01%)</title><rect x="330.7" y="341" width="0.1" height="15.0" fill="rgb(213,37,47)" rx="2" ry="2" />
<text  x="333.65" y="351.5" ></text>
</g>
<g >
<title>_raw_qspin_lock (15 samples, 0.01%)</title><rect x="135.9" y="389" width="0.2" height="15.0" fill="rgb(217,135,26)" rx="2" ry="2" />
<text  x="138.93" y="399.5" ></text>
</g>
<g >
<title>addKey (104 samples, 0.10%)</title><rect x="426.6" y="485" width="1.1" height="15.0" fill="rgb(249,192,6)" rx="2" ry="2" />
<text  x="429.59" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, std::string&gt;, std::_Select1st&lt;std::pair&lt;std::string const, std::string&gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::_M_find_tr&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, void&gt; (96 samples, 0.09%)</title><rect x="684.9" y="453" width="1.1" height="15.0" fill="rgb(251,66,49)" rx="2" ry="2" />
<text  x="687.95" y="463.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::_S_cmp&lt;std::string const&amp;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const&amp;&gt; (16 samples, 0.01%)</title><rect x="689.5" y="421" width="0.1" height="15.0" fill="rgb(223,118,29)" rx="2" ry="2" />
<text  x="692.45" y="431.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (15 samples, 0.01%)</title><rect x="992.8" y="229" width="0.2" height="15.0" fill="rgb(241,29,51)" rx="2" ry="2" />
<text  x="995.82" y="239.5" ></text>
</g>
<g >
<title>bannerd::BannerPatternEx::isCompliant (83 samples, 0.08%)</title><rect x="313.9" y="517" width="0.9" height="15.0" fill="rgb(229,125,50)" rx="2" ry="2" />
<text  x="316.93" y="527.5" ></text>
</g>
<g >
<title>trg::protobuf::bannerd::ShowClickMsg::SerializeWithCachedSizesToArray (122 samples, 0.11%)</title><rect x="1154.2" y="517" width="1.3" height="15.0" fill="rgb(253,46,13)" rx="2" ry="2" />
<text  x="1157.20" y="527.5" ></text>
</g>
<g >
<title>tcmalloc::PageHeap::TryGetSizeClass (127 samples, 0.12%)</title><rect x="1123.6" y="453" width="1.4" height="15.0" fill="rgb(249,66,40)" rx="2" ry="2" />
<text  x="1126.60" y="463.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (12 samples, 0.01%)</title><rect x="381.7" y="405" width="0.1" height="15.0" fill="rgb(226,11,32)" rx="2" ry="2" />
<text  x="384.66" y="415.5" ></text>
</g>
<g >
<title>tcmalloc::ThreadCache::Deallocate (10 samples, 0.01%)</title><rect x="281.4" y="453" width="0.1" height="15.0" fill="rgb(246,62,24)" rx="2" ry="2" />
<text  x="284.40" y="463.5" ></text>
</g>
<g >
<title>std::string::_M_rep (11 samples, 0.01%)</title><rect x="948.2" y="501" width="0.1" height="15.0" fill="rgb(225,47,50)" rx="2" ry="2" />
<text  x="951.21" y="511.5" ></text>
</g>
<g >
<title>std::string::_S_construct&lt;char const*&gt; (139 samples, 0.13%)</title><rect x="942.9" y="501" width="1.5" height="15.0" fill="rgb(217,175,6)" rx="2" ry="2" />
<text  x="945.85" y="511.5" ></text>
</g>
<g >
<title>system_call_fastpath (109 samples, 0.10%)</title><rect x="136.7" y="485" width="1.2" height="15.0" fill="rgb(222,32,34)" rx="2" ry="2" />
<text  x="139.68" y="495.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned long long const*, std::vector&lt;unsigned long long, target::dynamic_bitset::AlignedAllocator&lt;unsigned long long&gt; &gt; &gt;, unsigned long long*, target::dynamic_bitset::AlignedAllocator&lt;unsigned long long&gt; &gt; (34 samples, 0.03%)</title><rect x="830.7" y="453" width="0.4" height="15.0" fill="rgb(211,225,40)" rx="2" ry="2" />
<text  x="833.71" y="463.5" ></text>
</g>
<g >
<title>bn_add_words (101 samples, 0.09%)</title><rect x="442.8" y="517" width="1.1" height="15.0" fill="rgb(220,51,11)" rx="2" ry="2" />
<text  x="445.81" y="527.5" ></text>
</g>
<g >
<title>rapidjson::GenericValue&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::CrtAllocator&gt;::StringEqual&lt;rapidjson::CrtAllocator&gt; (74 samples, 0.07%)</title><rect x="1149.8" y="469" width="0.8" height="15.0" fill="rgb(216,69,5)" rx="2" ry="2" />
<text  x="1152.80" y="479.5" ></text>
</g>
<g >
<title>BN_CTX_start (80 samples, 0.07%)</title><rect x="25.4" y="517" width="0.9" height="15.0" fill="rgb(215,211,33)" rx="2" ry="2" />
<text  x="28.44" y="527.5" ></text>
</g>
<g >
<title>parse_list_fast&lt;(anonymous namespace)::parseVars (45 samples, 0.04%)</title><rect x="672.3" y="485" width="0.5" height="15.0" fill="rgb(240,79,24)" rx="2" ry="2" />
<text  x="675.28" y="495.5" ></text>
</g>
<g >
<title>bannerd::details::InternalStorage::hasAll (1,121 samples, 1.04%)</title><rect x="393.0" y="517" width="12.3" height="15.0" fill="rgb(248,183,16)" rx="2" ry="2" />
<text  x="395.97" y="527.5" ></text>
</g>
<g >
<title>try_to_wake_up (124 samples, 0.12%)</title><rect x="896.5" y="389" width="1.3" height="15.0" fill="rgb(236,136,21)" rx="2" ry="2" />
<text  x="899.48" y="399.5" ></text>
</g>
<g >
<title>tcmalloc::SLL_TryPop (351 samples, 0.33%)</title><rect x="1128.4" y="453" width="3.9" height="15.0" fill="rgb(244,168,13)" rx="2" ry="2" />
<text  x="1131.42" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;std::string const, std::string&gt; &gt; (134 samples, 0.12%)</title><rect x="927.4" y="469" width="1.5" height="15.0" fill="rgb(251,125,29)" rx="2" ry="2" />
<text  x="930.43" y="479.5" ></text>
</g>
<g >
<title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (10 samples, 0.01%)</title><rect x="936.0" y="517" width="0.1" height="15.0" fill="rgb(230,218,2)" rx="2" ry="2" />
<text  x="939.04" y="527.5" ></text>
</g>
<g >
<title>net_rx_action (10 samples, 0.01%)</title><rect x="1164.5" y="181" width="0.1" height="15.0" fill="rgb(210,204,38)" rx="2" ry="2" />
<text  x="1167.46" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_default_append (15 samples, 0.01%)</title><rect x="977.6" y="517" width="0.2" height="15.0" fill="rgb(249,78,32)" rx="2" ry="2" />
<text  x="980.59" y="527.5" ></text>
</g>
<g >
<title>sys_futex (19 samples, 0.02%)</title><rect x="113.4" y="469" width="0.2" height="15.0" fill="rgb(250,178,24)" rx="2" ry="2" />
<text  x="116.43" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::io::CodedOutputStream::WriteVarint32ToArray (18 samples, 0.02%)</title><rect x="1162.2" y="469" width="0.2" height="15.0" fill="rgb(241,210,13)" rx="2" ry="2" />
<text  x="1165.20" y="479.5" ></text>
</g>
<g >
<title>ASN1_item_ex_d2i (91 samples, 0.08%)</title><rect x="18.7" y="501" width="1.0" height="15.0" fill="rgb(213,148,34)" rx="2" ry="2" />
<text  x="21.69" y="511.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (78 samples, 0.07%)</title><rect x="405.6" y="453" width="0.8" height="15.0" fill="rgb(242,151,6)" rx="2" ry="2" />
<text  x="408.57" y="463.5" ></text>
</g>
<g >
<title>sysret_check (54 samples, 0.05%)</title><rect x="183.4" y="501" width="0.6" height="15.0" fill="rgb(228,168,35)" rx="2" ry="2" />
<text  x="186.42" y="511.5" ></text>
</g>
<g >
<title>perf_event_init_task (269 samples, 0.25%)</title><rect x="139.1" y="421" width="2.9" height="15.0" fill="rgb(243,29,37)" rx="2" ry="2" />
<text  x="142.08" y="431.5" ></text>
</g>
<g >
<title>__libc_free (27 samples, 0.03%)</title><rect x="642.0" y="485" width="0.3" height="15.0" fill="rgb(205,99,15)" rx="2" ry="2" />
<text  x="645.04" y="495.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (12 samples, 0.01%)</title><rect x="701.6" y="405" width="0.1" height="15.0" fill="rgb(209,229,32)" rx="2" ry="2" />
<text  x="704.59" y="415.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (54 samples, 0.05%)</title><rect x="928.3" y="357" width="0.5" height="15.0" fill="rgb(229,136,43)" rx="2" ry="2" />
<text  x="931.25" y="367.5" ></text>
</g>
<g >
<title>iomap_apply (23 samples, 0.02%)</title><rect x="129.6" y="389" width="0.2" height="15.0" fill="rgb(235,153,36)" rx="2" ry="2" />
<text  x="132.56" y="399.5" ></text>
</g>
<g >
<title>std::__distance&lt;__gnu_cxx::__normal_iterator&lt;bannerd::details::InternalStorage::Record const*, std::vector&lt;bannerd::details::InternalStorage::Record, std::allocator&lt;bannerd::details::InternalStorage::Record&gt; &gt; &gt; &gt; (48 samples, 0.04%)</title><rect x="381.3" y="453" width="0.6" height="15.0" fill="rgb(239,130,37)" rx="2" ry="2" />
<text  x="384.33" y="463.5" ></text>
</g>
<g >
<title>__alloc_skb (15 samples, 0.01%)</title><rect x="283.7" y="389" width="0.2" height="15.0" fill="rgb(251,203,9)" rx="2" ry="2" />
<text  x="286.72" y="399.5" ></text>
</g>
<g >
<title>tick_sched_handle (22 samples, 0.02%)</title><rect x="598.3" y="405" width="0.2" height="15.0" fill="rgb(212,194,27)" rx="2" ry="2" />
<text  x="601.26" y="415.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::_S_cmp&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const&amp;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const&amp;&gt; (12 samples, 0.01%)</title><rect x="701.6" y="437" width="0.1" height="15.0" fill="rgb(205,32,44)" rx="2" ry="2" />
<text  x="704.59" y="447.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::operator (13 samples, 0.01%)</title><rect x="685.9" y="437" width="0.1" height="15.0" fill="rgb(231,126,54)" rx="2" ry="2" />
<text  x="688.86" y="447.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (11 samples, 0.01%)</title><rect x="643.9" y="453" width="0.1" height="15.0" fill="rgb(214,18,46)" rx="2" ry="2" />
<text  x="646.89" y="463.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (12 samples, 0.01%)</title><rect x="992.8" y="197" width="0.2" height="15.0" fill="rgb(223,84,13)" rx="2" ry="2" />
<text  x="995.83" y="207.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (54 samples, 0.05%)</title><rect x="856.0" y="501" width="0.6" height="15.0" fill="rgb(242,145,20)" rx="2" ry="2" />
<text  x="858.96" y="511.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (267 samples, 0.25%)</title><rect x="394.1" y="389" width="2.9" height="15.0" fill="rgb(223,26,27)" rx="2" ry="2" />
<text  x="397.12" y="399.5" ></text>
</g>
<g >
<title>system_call_fastpath (13 samples, 0.01%)</title><rect x="891.6" y="469" width="0.2" height="15.0" fill="rgb(251,112,45)" rx="2" ry="2" />
<text  x="894.63" y="479.5" ></text>
</g>
<g >
<title>tcmalloc::CentralFreeList::FetchFromOneSpans (85 samples, 0.08%)</title><rect x="1145.1" y="485" width="0.9" height="15.0" fill="rgb(212,229,14)" rx="2" ry="2" />
<text  x="1148.06" y="495.5" ></text>
</g>
<g >
<title>do_notify_resume (13 samples, 0.01%)</title><rect x="630.3" y="469" width="0.1" height="15.0" fill="rgb(248,128,40)" rx="2" ry="2" />
<text  x="633.26" y="479.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (10 samples, 0.01%)</title><rect x="702.6" y="469" width="0.1" height="15.0" fill="rgb(212,146,46)" rx="2" ry="2" />
<text  x="705.62" y="479.5" ></text>
</g>
<g >
<title>std::string::size (25 samples, 0.02%)</title><rect x="684.1" y="357" width="0.3" height="15.0" fill="rgb(244,78,25)" rx="2" ry="2" />
<text  x="687.08" y="367.5" ></text>
</g>
<g >
<title>bannerd::store::ActiveCampaignIndex::setPadFilters (19 samples, 0.02%)</title><rect x="426.6" y="469" width="0.2" height="15.0" fill="rgb(237,72,40)" rx="2" ry="2" />
<text  x="429.59" y="479.5" ></text>
</g>
<g >
<title>cpuacct_charge (10 samples, 0.01%)</title><rect x="187.5" y="325" width="0.1" height="15.0" fill="rgb(231,184,31)" rx="2" ry="2" />
<text  x="190.45" y="335.5" ></text>
</g>
<g >
<title>nmi (36 samples, 0.03%)</title><rect x="1188.2" y="485" width="0.4" height="15.0" fill="rgb(217,64,43)" rx="2" ry="2" />
<text  x="1191.25" y="495.5" ></text>
</g>
<g >
<title>schedule (832 samples, 0.77%)</title><rect x="297.6" y="421" width="9.1" height="15.0" fill="rgb(210,140,22)" rx="2" ry="2" />
<text  x="300.62" y="431.5" ></text>
</g>
<g >
<title>__sleep (43 samples, 0.04%)</title><rect x="308.2" y="517" width="0.5" height="15.0" fill="rgb(212,156,15)" rx="2" ry="2" />
<text  x="311.20" y="527.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt; &gt; (31 samples, 0.03%)</title><rect x="413.7" y="421" width="0.3" height="15.0" fill="rgb(212,112,53)" rx="2" ry="2" />
<text  x="416.69" y="431.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (555 samples, 0.52%)</title><rect x="844.6" y="405" width="6.1" height="15.0" fill="rgb(212,9,38)" rx="2" ry="2" />
<text  x="847.62" y="415.5" ></text>
</g>
<g >
<title>rb_key_get_rsa_public (73 samples, 0.07%)</title><rect x="854.8" y="517" width="0.8" height="15.0" fill="rgb(207,138,45)" rx="2" ry="2" />
<text  x="857.83" y="527.5" ></text>
</g>
<g >
<title>std::map&lt;std::string, std::string, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::operator[] (841 samples, 0.78%)</title><rect x="841.6" y="501" width="9.2" height="15.0" fill="rgb(230,185,41)" rx="2" ry="2" />
<text  x="844.56" y="511.5" ></text>
</g>
<g >
<title>__libc_free (27 samples, 0.03%)</title><rect x="642.4" y="469" width="0.3" height="15.0" fill="rgb(224,110,15)" rx="2" ry="2" />
<text  x="645.39" y="479.5" ></text>
</g>
<g >
<title>lower_bound&lt;const (anonymous namespace)::ProcFunction*, (anonymous namespace)::ProcFunction, (anonymous namespace)::findFunction (44 samples, 0.04%)</title><rect x="330.9" y="437" width="0.5" height="15.0" fill="rgb(247,29,3)" rx="2" ry="2" />
<text  x="333.92" y="447.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (10 samples, 0.01%)</title><rect x="134.0" y="437" width="0.1" height="15.0" fill="rgb(228,197,10)" rx="2" ry="2" />
<text  x="136.96" y="447.5" ></text>
</g>
<g >
<title>tcmalloc::SizeMap::ClassIndexMaybe (20 samples, 0.02%)</title><rect x="1133.1" y="469" width="0.2" height="15.0" fill="rgb(215,133,26)" rx="2" ry="2" />
<text  x="1136.07" y="479.5" ></text>
</g>
<g >
<title>sys_exit (21 samples, 0.02%)</title><rect x="917.1" y="485" width="0.2" height="15.0" fill="rgb(230,134,0)" rx="2" ry="2" />
<text  x="920.11" y="495.5" ></text>
</g>
<g >
<title>__clone (368 samples, 0.34%)</title><rect x="138.2" y="501" width="4.0" height="15.0" fill="rgb(219,40,11)" rx="2" ry="2" />
<text  x="141.21" y="511.5" ></text>
</g>
<g >
<title>RAND_bytes (29 samples, 0.03%)</title><rect x="111.5" y="517" width="0.4" height="15.0" fill="rgb(243,179,6)" rx="2" ry="2" />
<text  x="114.54" y="527.5" ></text>
</g>
<g >
<title>BN_CTX_free (65 samples, 0.06%)</title><rect x="21.7" y="517" width="0.7" height="15.0" fill="rgb(206,115,43)" rx="2" ry="2" />
<text  x="24.68" y="527.5" ></text>
</g>
<g >
<title>__nanosleep_nocancel (12 samples, 0.01%)</title><rect x="1146.7" y="501" width="0.1" height="15.0" fill="rgb(229,75,43)" rx="2" ry="2" />
<text  x="1149.69" y="511.5" ></text>
</g>
<g >
<title>std::string::resize (72 samples, 0.07%)</title><rect x="976.3" y="517" width="0.8" height="15.0" fill="rgb(215,148,46)" rx="2" ry="2" />
<text  x="979.33" y="527.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (19 samples, 0.02%)</title><rect x="686.0" y="501" width="0.2" height="15.0" fill="rgb(210,45,15)" rx="2" ry="2" />
<text  x="689.02" y="511.5" ></text>
</g>
<g >
<title>event_sched_in.isra.101 (14 samples, 0.01%)</title><rect x="320.5" y="165" width="0.2" height="15.0" fill="rgb(246,206,32)" rx="2" ry="2" />
<text  x="323.51" y="175.5" ></text>
</g>
<g >
<title>ip_local_out_sk (21 samples, 0.02%)</title><rect x="1164.4" y="309" width="0.2" height="15.0" fill="rgb(242,116,24)" rx="2" ry="2" />
<text  x="1167.39" y="319.5" ></text>
</g>
<g >
<title>std::string::size (13 samples, 0.01%)</title><rect x="701.3" y="405" width="0.1" height="15.0" fill="rgb(206,152,11)" rx="2" ry="2" />
<text  x="704.30" y="415.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (11 samples, 0.01%)</title><rect x="380.8" y="469" width="0.1" height="15.0" fill="rgb(241,108,33)" rx="2" ry="2" />
<text  x="383.79" y="479.5" ></text>
</g>
<g >
<title>sock_alloc (10 samples, 0.01%)</title><rect x="195.2" y="437" width="0.1" height="15.0" fill="rgb(243,214,15)" rx="2" ry="2" />
<text  x="198.22" y="447.5" ></text>
</g>
<g >
<title>__strcspn_sse42 (12 samples, 0.01%)</title><rect x="698.4" y="501" width="0.1" height="15.0" fill="rgb(215,5,48)" rx="2" ry="2" />
<text  x="701.41" y="511.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (28 samples, 0.03%)</title><rect x="598.2" y="437" width="0.3" height="15.0" fill="rgb(244,149,12)" rx="2" ry="2" />
<text  x="601.20" y="447.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (13 samples, 0.01%)</title><rect x="1156.6" y="453" width="0.2" height="15.0" fill="rgb(214,17,42)" rx="2" ry="2" />
<text  x="1159.64" y="463.5" ></text>
</g>
<g >
<title>sys_futex (530 samples, 0.49%)</title><rect x="185.0" y="485" width="5.8" height="15.0" fill="rgb(224,70,43)" rx="2" ry="2" />
<text  x="188.03" y="495.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (11 samples, 0.01%)</title><rect x="163.4" y="453" width="0.1" height="15.0" fill="rgb(235,199,10)" rx="2" ry="2" />
<text  x="166.42" y="463.5" ></text>
</g>
<g >
<title>getprocProduct (10 samples, 0.01%)</title><rect x="701.9" y="517" width="0.1" height="15.0" fill="rgb(250,114,29)" rx="2" ry="2" />
<text  x="704.85" y="527.5" ></text>
</g>
<g >
<title>bannerd::store::ActiveCampaignIndex::setPadFilters (13 samples, 0.01%)</title><rect x="427.0" y="453" width="0.2" height="15.0" fill="rgb(219,179,11)" rx="2" ry="2" />
<text  x="430.01" y="463.5" ></text>
</g>
<g >
<title>__libc_malloc (46 samples, 0.04%)</title><rect x="1125.8" y="501" width="0.5" height="15.0" fill="rgb(221,191,36)" rx="2" ry="2" />
<text  x="1128.77" y="511.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::find_next (164 samples, 0.15%)</title><rect x="1094.5" y="501" width="1.8" height="15.0" fill="rgb(245,83,17)" rx="2" ry="2" />
<text  x="1097.45" y="511.5" ></text>
</g>
<g >
<title>new_inode_pseudo (10 samples, 0.01%)</title><rect x="195.2" y="421" width="0.1" height="15.0" fill="rgb(224,145,25)" rx="2" ry="2" />
<text  x="198.22" y="431.5" ></text>
</g>
<g >
<title>do_free_with_callback (21 samples, 0.02%)</title><rect x="642.1" y="437" width="0.2" height="15.0" fill="rgb(239,40,33)" rx="2" ry="2" />
<text  x="645.10" y="447.5" ></text>
</g>
<g >
<title>vsnprintf (13 samples, 0.01%)</title><rect x="833.9" y="501" width="0.1" height="15.0" fill="rgb(206,221,49)" rx="2" ry="2" />
<text  x="836.88" y="511.5" ></text>
</g>
<g >
<title>asn1_enc_save (17 samples, 0.02%)</title><rect x="312.3" y="517" width="0.2" height="15.0" fill="rgb(251,8,0)" rx="2" ry="2" />
<text  x="315.35" y="527.5" ></text>
</g>
<g >
<title>perf_pmu_enable (33 samples, 0.03%)</title><rect x="308.3" y="357" width="0.4" height="15.0" fill="rgb(211,55,52)" rx="2" ry="2" />
<text  x="311.29" y="367.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (10 samples, 0.01%)</title><rect x="284.5" y="53" width="0.1" height="15.0" fill="rgb(207,224,51)" rx="2" ry="2" />
<text  x="287.53" y="63.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (101 samples, 0.09%)</title><rect x="388.5" y="325" width="1.1" height="15.0" fill="rgb(241,191,39)" rx="2" ry="2" />
<text  x="391.46" y="335.5" ></text>
</g>
<g >
<title>__virt_addr_valid (15 samples, 0.01%)</title><rect x="296.0" y="453" width="0.2" height="15.0" fill="rgb(226,97,37)" rx="2" ry="2" />
<text  x="299.01" y="463.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (12 samples, 0.01%)</title><rect x="355.9" y="437" width="0.2" height="15.0" fill="rgb(252,68,22)" rx="2" ry="2" />
<text  x="358.94" y="447.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (11 samples, 0.01%)</title><rect x="286.7" y="421" width="0.1" height="15.0" fill="rgb(235,185,23)" rx="2" ry="2" />
<text  x="289.69" y="431.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::_S_cmp&lt;std::string const&amp;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const&amp;&gt; (69 samples, 0.06%)</title><rect x="675.1" y="421" width="0.7" height="15.0" fill="rgb(252,129,35)" rx="2" ry="2" />
<text  x="678.07" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;target::dynamic_bitset, target::dynamic_bitset, std::allocator&lt;target::dynamic_bitset&gt;, std::__detail::_Identity, std::equal_to&lt;target::dynamic_bitset&gt;, std::hash&lt;target::dynamic_bitset&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_find_before_node (107 samples, 0.10%)</title><rect x="439.6" y="437" width="1.1" height="15.0" fill="rgb(241,217,15)" rx="2" ry="2" />
<text  x="442.55" y="447.5" ></text>
</g>
<g >
<title>do_futex (706 samples, 0.66%)</title><rect x="174.6" y="469" width="7.7" height="15.0" fill="rgb(251,76,7)" rx="2" ry="2" />
<text  x="177.57" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, std::string&gt;, std::_Select1st&lt;std::pair&lt;std::string const, std::string&gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::_M_get_insert_unique_pos (16 samples, 0.01%)</title><rect x="943.5" y="405" width="0.2" height="15.0" fill="rgb(226,39,31)" rx="2" ry="2" />
<text  x="946.54" y="415.5" ></text>
</g>
<g >
<title>schedule (51 samples, 0.05%)</title><rect x="293.5" y="437" width="0.5" height="15.0" fill="rgb(250,56,42)" rx="2" ry="2" />
<text  x="296.46" y="447.5" ></text>
</g>
<g >
<title>wake_up_q (20 samples, 0.02%)</title><rect x="290.8" y="437" width="0.2" height="15.0" fill="rgb(223,34,7)" rx="2" ry="2" />
<text  x="293.79" y="447.5" ></text>
</g>
<g >
<title>std::condition_variable::wait_until&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (307 samples, 0.29%)</title><rect x="318.2" y="453" width="3.3" height="15.0" fill="rgb(251,134,39)" rx="2" ry="2" />
<text  x="321.15" y="463.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (25 samples, 0.02%)</title><rect x="355.8" y="485" width="0.3" height="15.0" fill="rgb(216,121,42)" rx="2" ry="2" />
<text  x="358.80" y="495.5" ></text>
</g>
<g >
<title>__memcpy_sse2 (42 samples, 0.04%)</title><rect x="670.0" y="485" width="0.4" height="15.0" fill="rgb(244,87,37)" rx="2" ry="2" />
<text  x="672.97" y="495.5" ></text>
</g>
<g >
<title>load_balance (71 samples, 0.07%)</title><rect x="305.5" y="373" width="0.8" height="15.0" fill="rgb(233,185,34)" rx="2" ry="2" />
<text  x="308.52" y="383.5" ></text>
</g>
<g >
<title>tcmalloc::SizeMap::GetSizeClass (39 samples, 0.04%)</title><rect x="1138.9" y="485" width="0.4" height="15.0" fill="rgb(239,178,16)" rx="2" ry="2" />
<text  x="1141.87" y="495.5" ></text>
</g>
<g >
<title>remote_function (18 samples, 0.02%)</title><rect x="802.3" y="437" width="0.2" height="15.0" fill="rgb(235,8,9)" rx="2" ry="2" />
<text  x="805.26" y="447.5" ></text>
</g>
<g >
<title>bannerd::store::ActiveCampaignIndex::build (17 samples, 0.02%)</title><rect x="417.6" y="485" width="0.2" height="15.0" fill="rgb(228,145,48)" rx="2" ry="2" />
<text  x="420.57" y="495.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (87 samples, 0.08%)</title><rect x="973.4" y="469" width="1.0" height="15.0" fill="rgb(225,205,40)" rx="2" ry="2" />
<text  x="976.42" y="479.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (13 samples, 0.01%)</title><rect x="284.5" y="85" width="0.1" height="15.0" fill="rgb(219,12,48)" rx="2" ry="2" />
<text  x="287.50" y="95.5" ></text>
</g>
<g >
<title>auditsys (18 samples, 0.02%)</title><rect x="134.4" y="485" width="0.2" height="15.0" fill="rgb(208,47,43)" rx="2" ry="2" />
<text  x="137.36" y="495.5" ></text>
</g>
<g >
<title>tcmalloc::ThreadCache::FreeList::TryPop (397 samples, 0.37%)</title><rect x="1133.7" y="469" width="4.4" height="15.0" fill="rgb(240,114,26)" rx="2" ry="2" />
<text  x="1136.74" y="479.5" ></text>
</g>
<g >
<title>std::condition_variable::wait_until&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, void rb::SafeQueueBase&lt;rb::queue_wrapper&lt;bannerd::engine::CacheTask&gt; &gt;::timedPopSeveral&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;, std::vector&lt;bannerd::engine::CacheTask, std::allocator&lt;bannerd::engine::CacheTask&gt; &gt; &gt; (307 samples, 0.29%)</title><rect x="318.2" y="469" width="3.3" height="15.0" fill="rgb(206,174,26)" rx="2" ry="2" />
<text  x="321.15" y="479.5" ></text>
</g>
<g >
<title>asn1_ex_c2i (10 samples, 0.01%)</title><rect x="312.5" y="517" width="0.1" height="15.0" fill="rgb(246,162,20)" rx="2" ry="2" />
<text  x="315.53" y="527.5" ></text>
</g>
<g >
<title>schedule (10 samples, 0.01%)</title><rect x="134.0" y="405" width="0.1" height="15.0" fill="rgb(205,22,47)" rx="2" ry="2" />
<text  x="136.96" y="415.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (18 samples, 0.02%)</title><rect x="853.2" y="277" width="0.2" height="15.0" fill="rgb(230,174,12)" rx="2" ry="2" />
<text  x="856.18" y="287.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (291 samples, 0.27%)</title><rect x="393.9" y="405" width="3.2" height="15.0" fill="rgb(213,180,6)" rx="2" ry="2" />
<text  x="396.91" y="415.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::_S_cmp&lt;std::string const&amp;, std::string const&amp;&gt; (555 samples, 0.52%)</title><rect x="844.6" y="421" width="6.1" height="15.0" fill="rgb(252,176,45)" rx="2" ry="2" />
<text  x="847.62" y="431.5" ></text>
</g>
<g >
<title>rapidjson::GenericReader&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::UTF8&lt;char&gt;, rapidjson::CrtAllocator&gt;::StackStream&lt;char&gt;::Put (13 samples, 0.01%)</title><rect x="832.7" y="469" width="0.1" height="15.0" fill="rgb(222,36,12)" rx="2" ry="2" />
<text  x="835.68" y="479.5" ></text>
</g>
<g >
<title>std::condition_variable::wait_for&lt;long, std::ratio&lt;1l, 1000l&gt;, void rb::SafeQueueBase&lt;rb::queue_wrapper&lt;bannerd::engine::CacheTask&gt; &gt;::timedPopSeveral&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;, std::vector&lt;bannerd::engine::CacheTask, std::allocator&lt;bannerd::engine::CacheTask&gt; &gt; &gt; (307 samples, 0.29%)</title><rect x="318.2" y="485" width="3.3" height="15.0" fill="rgb(254,23,3)" rx="2" ry="2" />
<text  x="321.15" y="495.5" ></text>
</g>
<g >
<title>bannerd::engine::TargetMessagePacker::writeLrModelPredictions (17 samples, 0.02%)</title><rect x="412.3" y="517" width="0.2" height="15.0" fill="rgb(225,192,24)" rx="2" ry="2" />
<text  x="415.33" y="527.5" ></text>
</g>
<g >
<title>getprocEventUrl (38 samples, 0.04%)</title><rect x="699.2" y="517" width="0.4" height="15.0" fill="rgb(224,189,0)" rx="2" ry="2" />
<text  x="702.18" y="527.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (92 samples, 0.09%)</title><rect x="180.1" y="373" width="1.0" height="15.0" fill="rgb(214,225,11)" rx="2" ry="2" />
<text  x="183.08" y="383.5" ></text>
</g>
<g >
<title>__lll_unlock_wake (11 samples, 0.01%)</title><rect x="321.8" y="389" width="0.1" height="15.0" fill="rgb(234,22,33)" rx="2" ry="2" />
<text  x="324.80" y="399.5" ></text>
</g>
<g >
<title>ip_output (46 samples, 0.04%)</title><rect x="284.4" y="309" width="0.5" height="15.0" fill="rgb(238,56,25)" rx="2" ry="2" />
<text  x="287.39" y="319.5" ></text>
</g>
<g >
<title>tick_sched_timer (11 samples, 0.01%)</title><rect x="381.7" y="341" width="0.1" height="15.0" fill="rgb(244,218,50)" rx="2" ry="2" />
<text  x="384.67" y="351.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::operator (13 samples, 0.01%)</title><rect x="923.3" y="485" width="0.1" height="15.0" fill="rgb(251,143,18)" rx="2" ry="2" />
<text  x="926.25" y="495.5" ></text>
</g>
<g >
<title>schedule (48 samples, 0.04%)</title><rect x="853.0" y="373" width="0.5" height="15.0" fill="rgb(216,138,33)" rx="2" ry="2" />
<text  x="855.98" y="383.5" ></text>
</g>
<g >
<title>free_code (22 samples, 0.02%)</title><rect x="676.0" y="517" width="0.2" height="15.0" fill="rgb(236,1,45)" rx="2" ry="2" />
<text  x="678.99" y="527.5" ></text>
</g>
<g >
<title>call_softirq (18 samples, 0.02%)</title><rect x="284.5" y="229" width="0.2" height="15.0" fill="rgb(219,221,46)" rx="2" ry="2" />
<text  x="287.48" y="239.5" ></text>
</g>
<g >
<title>std::string::_M_replace_safe (287 samples, 0.27%)</title><rect x="966.0" y="501" width="3.1" height="15.0" fill="rgb(207,69,0)" rx="2" ry="2" />
<text  x="969.00" y="511.5" ></text>
</g>
<g >
<title>__xfs_trans_commit (16 samples, 0.01%)</title><rect x="130.0" y="325" width="0.2" height="15.0" fill="rgb(212,159,49)" rx="2" ry="2" />
<text  x="133.03" y="335.5" ></text>
</g>
<g >
<title>sys_futex (28 samples, 0.03%)</title><rect x="856.7" y="469" width="0.3" height="15.0" fill="rgb(240,190,10)" rx="2" ry="2" />
<text  x="859.69" y="479.5" ></text>
</g>
<g >
<title>tcp_sendmsg (36 samples, 0.03%)</title><rect x="1164.3" y="405" width="0.4" height="15.0" fill="rgb(251,72,33)" rx="2" ry="2" />
<text  x="1167.27" y="415.5" ></text>
</g>
<g >
<title>local_apic_timer_interrupt (10 samples, 0.01%)</title><rect x="880.8" y="469" width="0.1" height="15.0" fill="rgb(213,31,46)" rx="2" ry="2" />
<text  x="883.75" y="479.5" ></text>
</g>
<g >
<title>__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;const bannerd::details::InternalStorage::Record*, std::vector&lt;bannerd::details::InternalStorage::Record&gt; &gt;, bannerd::details::InternalStorage::Record, __gnu_cxx::__ops::_Iter_comp_val&lt;(anonymous namespace)::CompareByClassAndRole&gt; &gt; (39 samples, 0.04%)</title><rect x="382.0" y="469" width="0.4" height="15.0" fill="rgb(253,176,30)" rx="2" ry="2" />
<text  x="384.95" y="479.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (27 samples, 0.03%)</title><rect x="128.2" y="453" width="0.3" height="15.0" fill="rgb(235,218,35)" rx="2" ry="2" />
<text  x="131.22" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::UInt32Size (12 samples, 0.01%)</title><rect x="1153.9" y="501" width="0.1" height="15.0" fill="rgb(253,181,34)" rx="2" ry="2" />
<text  x="1156.90" y="511.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (48 samples, 0.04%)</title><rect x="598.0" y="501" width="0.5" height="15.0" fill="rgb(209,203,41)" rx="2" ry="2" />
<text  x="601.01" y="511.5" ></text>
</g>
<g >
<title>__lll_unlock_wake (69 samples, 0.06%)</title><rect x="142.9" y="501" width="0.8" height="15.0" fill="rgb(243,95,53)" rx="2" ry="2" />
<text  x="145.91" y="511.5" ></text>
</g>
<g >
<title>std::string::append (16 samples, 0.01%)</title><rect x="154.9" y="437" width="0.2" height="15.0" fill="rgb(228,111,29)" rx="2" ry="2" />
<text  x="157.89" y="447.5" ></text>
</g>
<g >
<title>std::string::replace (83 samples, 0.08%)</title><rect x="971.7" y="517" width="0.9" height="15.0" fill="rgb(237,29,17)" rx="2" ry="2" />
<text  x="974.67" y="527.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_wrlock (11 samples, 0.01%)</title><rect x="113.7" y="501" width="0.1" height="15.0" fill="rgb(247,229,27)" rx="2" ry="2" />
<text  x="116.65" y="511.5" ></text>
</g>
<g >
<title>__lower_bound&lt;const (anonymous namespace)::ProcFunction*, (anonymous namespace)::ProcFunction, __gnu_cxx::__ops::_Iter_comp_val&lt;(anonymous namespace)::findFunction (37 samples, 0.03%)</title><rect x="331.0" y="421" width="0.4" height="15.0" fill="rgb(221,139,22)" rx="2" ry="2" />
<text  x="333.99" y="431.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (49 samples, 0.05%)</title><rect x="146.3" y="309" width="0.5" height="15.0" fill="rgb(235,29,35)" rx="2" ry="2" />
<text  x="149.28" y="319.5" ></text>
</g>
<g >
<title>ip_rcv (16 samples, 0.01%)</title><rect x="284.5" y="133" width="0.2" height="15.0" fill="rgb(251,40,18)" rx="2" ry="2" />
<text  x="287.50" y="143.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;clientserver::epoll::socket_buffer&lt;trg::tarantool_client::epoll_client_socket&gt;,  (48 samples, 0.04%)</title><rect x="1165.5" y="485" width="0.6" height="15.0" fill="rgb(218,3,30)" rx="2" ry="2" />
<text  x="1168.54" y="495.5" ></text>
</g>
<g >
<title>std::string::size (43 samples, 0.04%)</title><rect x="160.7" y="421" width="0.5" height="15.0" fill="rgb(206,215,17)" rx="2" ry="2" />
<text  x="163.72" y="431.5" ></text>
</g>
<g >
<title>__memcpy_ssse3_back (51 samples, 0.05%)</title><rect x="972.0" y="453" width="0.6" height="15.0" fill="rgb(248,108,42)" rx="2" ry="2" />
<text  x="974.99" y="463.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (24 samples, 0.02%)</title><rect x="922.6" y="437" width="0.2" height="15.0" fill="rgb(251,0,23)" rx="2" ry="2" />
<text  x="925.58" y="447.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (15 samples, 0.01%)</title><rect x="135.9" y="357" width="0.2" height="15.0" fill="rgb(233,58,42)" rx="2" ry="2" />
<text  x="138.93" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;bannerd::details::InternalStorage::Record const*, std::vector&lt;bannerd::details::InternalStorage::Record, std::allocator&lt;bannerd::details::InternalStorage::Record&gt; &gt; &gt; (48 samples, 0.04%)</title><rect x="381.3" y="437" width="0.6" height="15.0" fill="rgb(206,188,7)" rx="2" ry="2" />
<text  x="384.33" y="447.5" ></text>
</g>
<g >
<title>openssl_lock (93 samples, 0.09%)</title><rect x="91.1" y="469" width="1.0" height="15.0" fill="rgb(239,178,1)" rx="2" ry="2" />
<text  x="94.09" y="479.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_wrlock (22 samples, 0.02%)</title><rect x="891.8" y="485" width="0.2" height="15.0" fill="rgb(218,133,9)" rx="2" ry="2" />
<text  x="894.77" y="495.5" ></text>
</g>
<g >
<title>do_nanosleep (10 samples, 0.01%)</title><rect x="144.6" y="437" width="0.1" height="15.0" fill="rgb(209,109,34)" rx="2" ry="2" />
<text  x="147.59" y="447.5" ></text>
</g>
<g >
<title>rb_rsa_public_encrypt (127 samples, 0.12%)</title><rect x="855.6" y="517" width="1.4" height="15.0" fill="rgb(221,186,42)" rx="2" ry="2" />
<text  x="858.63" y="527.5" ></text>
</g>
<g >
<title>htonl@plt (71 samples, 0.07%)</title><rect x="709.3" y="517" width="0.8" height="15.0" fill="rgb(212,174,52)" rx="2" ry="2" />
<text  x="712.32" y="527.5" ></text>
</g>
<g >
<title>sysret_audit (20 samples, 0.02%)</title><rect x="192.2" y="501" width="0.3" height="15.0" fill="rgb(240,168,33)" rx="2" ry="2" />
<text  x="195.24" y="511.5" ></text>
</g>
<g >
<title>trg::tarantool_client::epoll_loop::loop&lt;trg::tarantool_client::epoll_loop::RecvState&gt; (11 samples, 0.01%)</title><rect x="1164.1" y="517" width="0.1" height="15.0" fill="rgb(225,26,40)" rx="2" ry="2" />
<text  x="1167.13" y="527.5" ></text>
</g>
<g >
<title>inline_mysql_rwlock_unlock (65 samples, 0.06%)</title><rect x="29.9" y="469" width="0.7" height="15.0" fill="rgb(228,208,30)" rx="2" ry="2" />
<text  x="32.86" y="479.5" ></text>
</g>
<g >
<title>bannerd::TargetingCollection::Range&lt;bannerd::TargetingStringSetEx&gt;::Range (14 samples, 0.01%)</title><rect x="151.0" y="485" width="0.1" height="15.0" fill="rgb(250,9,6)" rx="2" ry="2" />
<text  x="153.98" y="495.5" ></text>
</g>
<g >
<title>__libc_realloc (108 samples, 0.10%)</title><rect x="280.5" y="517" width="1.2" height="15.0" fill="rgb(228,124,41)" rx="2" ry="2" />
<text  x="283.48" y="527.5" ></text>
</g>
<g >
<title>nmi (10 samples, 0.01%)</title><rect x="941.7" y="501" width="0.1" height="15.0" fill="rgb(245,35,14)" rx="2" ry="2" />
<text  x="944.69" y="511.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, unsigned int, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, unsigned int&gt; &gt; &gt;::find (47 samples, 0.04%)</title><rect x="421.5" y="469" width="0.5" height="15.0" fill="rgb(229,198,17)" rx="2" ry="2" />
<text  x="424.47" y="479.5" ></text>
</g>
<g >
<title>__strcspn_sse42 (31 samples, 0.03%)</title><rect x="671.8" y="485" width="0.3" height="15.0" fill="rgb(226,20,12)" rx="2" ry="2" />
<text  x="674.76" y="495.5" ></text>
</g>
<g >
<title>tcp_sendmsg (19 samples, 0.02%)</title><rect x="142.5" y="405" width="0.2" height="15.0" fill="rgb(226,116,13)" rx="2" ry="2" />
<text  x="145.49" y="415.5" ></text>
</g>
<g >
<title>BN_bin2bn (581 samples, 0.54%)</title><rect x="31.3" y="517" width="6.3" height="15.0" fill="rgb(206,214,19)" rx="2" ry="2" />
<text  x="34.26" y="527.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, google::dense_hash_set&lt;unsigned int, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, google::libc_allocator_with_realloc&lt;unsigned int&gt; &gt;, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, google::dense_hash_set&lt;unsigned int, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, google::libc_allocator_with_realloc&lt;unsigned int&gt; &gt; &gt; &gt; &gt;::operator[] (16 samples, 0.01%)</title><rect x="439.2" y="501" width="0.2" height="15.0" fill="rgb(236,189,48)" rx="2" ry="2" />
<text  x="442.20" y="511.5" ></text>
</g>
<g >
<title>queued_spin_lock_slowpath (14 samples, 0.01%)</title><rect x="189.6" y="405" width="0.2" height="15.0" fill="rgb(232,220,18)" rx="2" ry="2" />
<text  x="192.64" y="415.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.isra.13 (42 samples, 0.04%)</title><rect x="293.5" y="325" width="0.5" height="15.0" fill="rgb(211,103,35)" rx="2" ry="2" />
<text  x="296.51" y="335.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (368 samples, 0.34%)</title><rect x="388.3" y="373" width="4.0" height="15.0" fill="rgb(221,179,3)" rx="2" ry="2" />
<text  x="391.30" y="383.5" ></text>
</g>
<g >
<title>___snprintf_chk (17 samples, 0.02%)</title><rect x="1169.9" y="485" width="0.2" height="15.0" fill="rgb(214,198,14)" rx="2" ry="2" />
<text  x="1172.90" y="495.5" ></text>
</g>
<g >
<title>system_call_fastpath (21 samples, 0.02%)</title><rect x="834.8" y="405" width="0.2" height="15.0" fill="rgb(210,15,9)" rx="2" ry="2" />
<text  x="837.75" y="415.5" ></text>
</g>
<g >
<title>bannerd::engine::TargetMessagePacker::writeTopicsMl (12 samples, 0.01%)</title><rect x="412.8" y="517" width="0.1" height="15.0" fill="rgb(214,117,15)" rx="2" ry="2" />
<text  x="415.81" y="527.5" ></text>
</g>
<g >
<title>tcmalloc::ThreadCache::Allocate (417 samples, 0.39%)</title><rect x="1127.7" y="485" width="4.6" height="15.0" fill="rgb(211,85,8)" rx="2" ry="2" />
<text  x="1130.70" y="495.5" ></text>
</g>
<g >
<title>nmi (419 samples, 0.39%)</title><rect x="880.9" y="501" width="4.6" height="15.0" fill="rgb(225,215,17)" rx="2" ry="2" />
<text  x="883.87" y="511.5" ></text>
</g>
<g >
<title>__strnlen_sse2 (21 samples, 0.02%)</title><rect x="702.0" y="485" width="0.2" height="15.0" fill="rgb(206,183,46)" rx="2" ry="2" />
<text  x="705.02" y="495.5" ></text>
</g>
<g >
<title>sys_madvise (18 samples, 0.02%)</title><rect x="194.5" y="485" width="0.2" height="15.0" fill="rgb(221,141,11)" rx="2" ry="2" />
<text  x="197.47" y="495.5" ></text>
</g>
<g >
<title>trg::Ipv6::any (10 samples, 0.01%)</title><rect x="1148.8" y="517" width="0.1" height="15.0" fill="rgb(250,128,29)" rx="2" ry="2" />
<text  x="1151.78" y="527.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (12 samples, 0.01%)</title><rect x="613.5" y="341" width="0.2" height="15.0" fill="rgb(254,18,49)" rx="2" ry="2" />
<text  x="616.55" y="351.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, std::map&lt;unsigned int, double, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, double&gt; &gt; &gt;, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, std::map&lt;unsigned int, double, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, double&gt; &gt; &gt; &gt; &gt; &gt;::find (56 samples, 0.05%)</title><rect x="410.1" y="501" width="0.6" height="15.0" fill="rgb(211,77,32)" rx="2" ry="2" />
<text  x="413.13" y="511.5" ></text>
</g>
<g >
<title>bannerd::engine::TargetMessagePacker::writeClicksHistory (15 samples, 0.01%)</title><rect x="411.4" y="517" width="0.1" height="15.0" fill="rgb(235,10,2)" rx="2" ry="2" />
<text  x="414.37" y="527.5" ></text>
</g>
<g >
<title>asn1_get_length (14 samples, 0.01%)</title><rect x="18.2" y="501" width="0.1" height="15.0" fill="rgb(222,108,34)" rx="2" ry="2" />
<text  x="21.19" y="511.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.isra.13 (40 samples, 0.04%)</title><rect x="320.7" y="197" width="0.4" height="15.0" fill="rgb(240,138,46)" rx="2" ry="2" />
<text  x="323.67" y="207.5" ></text>
</g>
<g >
<title>tc_realloc (203 samples, 0.19%)</title><rect x="1139.9" y="517" width="2.2" height="15.0" fill="rgb(222,112,33)" rx="2" ry="2" />
<text  x="1142.89" y="527.5" ></text>
</g>
<g >
<title>auditsys (41 samples, 0.04%)</title><rect x="287.1" y="501" width="0.5" height="15.0" fill="rgb(210,212,9)" rx="2" ry="2" />
<text  x="290.13" y="511.5" ></text>
</g>
<g >
<title>__pthread_cond_timedwait (26 samples, 0.02%)</title><rect x="853.5" y="485" width="0.3" height="15.0" fill="rgb(247,229,0)" rx="2" ry="2" />
<text  x="856.53" y="495.5" ></text>
</g>
<g >
<title>futex_wait (18 samples, 0.02%)</title><rect x="893.7" y="421" width="0.2" height="15.0" fill="rgb(225,152,45)" rx="2" ry="2" />
<text  x="896.74" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, bannerd::TemplateIncludeEx&gt;, std::allocator&lt;std::pair&lt;unsigned int const, bannerd::TemplateIncludeEx&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (17 samples, 0.02%)</title><rect x="699.9" y="453" width="0.2" height="15.0" fill="rgb(253,132,49)" rx="2" ry="2" />
<text  x="702.92" y="463.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (130 samples, 0.12%)</title><rect x="320.0" y="325" width="1.5" height="15.0" fill="rgb(242,20,53)" rx="2" ry="2" />
<text  x="323.03" y="335.5" ></text>
</g>
<g >
<title>__memcpy_ssse3_back (21 samples, 0.02%)</title><rect x="943.1" y="405" width="0.2" height="15.0" fill="rgb(244,162,23)" rx="2" ry="2" />
<text  x="946.06" y="415.5" ></text>
</g>
<g >
<title>__strcspn_sse42 (11 samples, 0.01%)</title><rect x="703.4" y="501" width="0.1" height="15.0" fill="rgb(222,55,49)" rx="2" ry="2" />
<text  x="706.35" y="511.5" ></text>
</g>
<g >
<title>tcmalloc::ThreadCache::GetCacheIfPresent (119 samples, 0.11%)</title><rect x="1122.1" y="453" width="1.4" height="15.0" fill="rgb(247,202,54)" rx="2" ry="2" />
<text  x="1125.15" y="463.5" ></text>
</g>
<g >
<title>sock_sendmsg (37 samples, 0.03%)</title><rect x="1164.3" y="437" width="0.4" height="15.0" fill="rgb(231,112,39)" rx="2" ry="2" />
<text  x="1167.26" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_rebalance_for_erase (30 samples, 0.03%)</title><rect x="934.9" y="517" width="0.3" height="15.0" fill="rgb(228,98,17)" rx="2" ry="2" />
<text  x="937.88" y="527.5" ></text>
</g>
<g >
<title>BN_rshift (14 samples, 0.01%)</title><rect x="79.1" y="517" width="0.1" height="15.0" fill="rgb(252,26,40)" rx="2" ry="2" />
<text  x="82.09" y="527.5" ></text>
</g>
<g >
<title>__accept_nocancel (65 samples, 0.06%)</title><rect x="194.7" y="517" width="0.7" height="15.0" fill="rgb(216,35,4)" rx="2" ry="2" />
<text  x="197.73" y="527.5" ></text>
</g>
<g >
<title>ip_queue_xmit (22 samples, 0.02%)</title><rect x="1164.4" y="325" width="0.2" height="15.0" fill="rgb(219,149,40)" rx="2" ry="2" />
<text  x="1167.38" y="335.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::operator|= (989 samples, 0.92%)</title><rect x="1100.4" y="517" width="10.9" height="15.0" fill="rgb(221,51,20)" rx="2" ry="2" />
<text  x="1103.43" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, std::string&gt;, std::_Select1st&lt;std::pair&lt;std::string const, std::string&gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::_M_find_tr&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, void&gt; (31 samples, 0.03%)</title><rect x="330.5" y="437" width="0.4" height="15.0" fill="rgb(243,221,51)" rx="2" ry="2" />
<text  x="333.53" y="447.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_set_sharable (11 samples, 0.01%)</title><rect x="975.1" y="469" width="0.2" height="15.0" fill="rgb(251,83,54)" rx="2" ry="2" />
<text  x="978.15" y="479.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (89 samples, 0.08%)</title><rect x="840.6" y="501" width="1.0" height="15.0" fill="rgb(214,12,13)" rx="2" ry="2" />
<text  x="843.58" y="511.5" ></text>
</g>
<g >
<title>tcp_sendmsg (201 samples, 0.19%)</title><rect x="283.0" y="421" width="2.2" height="15.0" fill="rgb(214,70,14)" rx="2" ry="2" />
<text  x="286.00" y="431.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (17 samples, 0.02%)</title><rect x="192.3" y="485" width="0.1" height="15.0" fill="rgb(215,47,33)" rx="2" ry="2" />
<text  x="195.26" y="495.5" ></text>
</g>
<g >
<title>std::__distance&lt;__gnu_cxx::__normal_iterator&lt;bannerd::details::InternalStorage::Record const*, std::vector&lt;bannerd::details::InternalStorage::Record, std::allocator&lt;bannerd::details::InternalStorage::Record&gt; &gt; &gt; &gt; (24 samples, 0.02%)</title><rect x="392.5" y="453" width="0.3" height="15.0" fill="rgb(212,101,40)" rx="2" ry="2" />
<text  x="395.54" y="463.5" ></text>
</g>
<g >
<title>bannerd::store::ActiveCampaignIndex::byPad (241 samples, 0.22%)</title><rect x="418.8" y="501" width="2.6" height="15.0" fill="rgb(254,57,1)" rx="2" ry="2" />
<text  x="421.77" y="511.5" ></text>
</g>
<g >
<title>tcp_write_xmit (14 samples, 0.01%)</title><rect x="283.4" y="389" width="0.1" height="15.0" fill="rgb(243,189,50)" rx="2" ry="2" />
<text  x="286.36" y="399.5" ></text>
</g>
<g >
<title>__libc_send (25 samples, 0.02%)</title><rect x="142.4" y="501" width="0.3" height="15.0" fill="rgb(232,33,34)" rx="2" ry="2" />
<text  x="145.43" y="511.5" ></text>
</g>
<g >
<title>sysret_check (27 samples, 0.03%)</title><rect x="192.5" y="501" width="0.3" height="15.0" fill="rgb(250,188,19)" rx="2" ry="2" />
<text  x="195.46" y="511.5" ></text>
</g>
<g >
<title>event_sched_in.isra.101 (13 samples, 0.01%)</title><rect x="146.1" y="261" width="0.2" height="15.0" fill="rgb(226,61,14)" rx="2" ry="2" />
<text  x="149.12" y="271.5" ></text>
</g>
<g >
<title>ip_queue_xmit (11 samples, 0.01%)</title><rect x="142.6" y="325" width="0.1" height="15.0" fill="rgb(250,60,29)" rx="2" ry="2" />
<text  x="145.57" y="335.5" ></text>
</g>
<g >
<title>tcmalloc::ThreadCache::FreeList::TryPop (106 samples, 0.10%)</title><rect x="164.6" y="453" width="1.2" height="15.0" fill="rgb(251,150,3)" rx="2" ry="2" />
<text  x="167.59" y="463.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::wideAndNot (87 samples, 0.08%)</title><rect x="1099.5" y="501" width="0.9" height="15.0" fill="rgb(233,57,3)" rx="2" ry="2" />
<text  x="1102.48" y="511.5" ></text>
</g>
<g >
<title>tcp_transmit_skb (24 samples, 0.02%)</title><rect x="1164.4" y="341" width="0.2" height="15.0" fill="rgb(240,79,18)" rx="2" ry="2" />
<text  x="1167.38" y="351.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (82 samples, 0.08%)</title><rect x="686.7" y="373" width="0.9" height="15.0" fill="rgb(243,36,41)" rx="2" ry="2" />
<text  x="689.73" y="383.5" ></text>
</g>
<g >
<title>system_call_fastpath (90 samples, 0.08%)</title><rect x="286.0" y="501" width="1.0" height="15.0" fill="rgb(216,26,52)" rx="2" ry="2" />
<text  x="289.01" y="511.5" ></text>
</g>
<g >
<title>do_softirq (12 samples, 0.01%)</title><rect x="806.2" y="453" width="0.2" height="15.0" fill="rgb(248,223,51)" rx="2" ry="2" />
<text  x="809.23" y="463.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (12 samples, 0.01%)</title><rect x="667.7" y="389" width="0.1" height="15.0" fill="rgb(212,119,50)" rx="2" ry="2" />
<text  x="670.67" y="399.5" ></text>
</g>
<g >
<title>__libc_free (108 samples, 0.10%)</title><rect x="279.0" y="501" width="1.2" height="15.0" fill="rgb(207,141,24)" rx="2" ry="2" />
<text  x="281.99" y="511.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (47 samples, 0.04%)</title><rect x="294.5" y="485" width="0.5" height="15.0" fill="rgb(245,151,53)" rx="2" ry="2" />
<text  x="297.49" y="495.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (29 samples, 0.03%)</title><rect x="413.7" y="373" width="0.3" height="15.0" fill="rgb(222,110,42)" rx="2" ry="2" />
<text  x="416.71" y="383.5" ></text>
</g>
<g >
<title>__schedule (10 samples, 0.01%)</title><rect x="977.5" y="341" width="0.1" height="15.0" fill="rgb(251,180,21)" rx="2" ry="2" />
<text  x="980.48" y="351.5" ></text>
</g>
<g >
<title>__GI_getpeername (10 samples, 0.01%)</title><rect x="194.3" y="517" width="0.1" height="15.0" fill="rgb(237,212,22)" rx="2" ry="2" />
<text  x="197.26" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::_M_range_initialize&lt;boost::container::vec_iterator&lt;unsigned int*, true&gt; &gt; (14 samples, 0.01%)</title><rect x="411.6" y="469" width="0.2" height="15.0" fill="rgb(248,55,22)" rx="2" ry="2" />
<text  x="414.61" y="479.5" ></text>
</g>
<g >
<title>napi_gro_receive (10 samples, 0.01%)</title><rect x="277.2" y="357" width="0.1" height="15.0" fill="rgb(234,65,34)" rx="2" ry="2" />
<text  x="280.17" y="367.5" ></text>
</g>
<g >
<title>inline_mysql_rwlock_unlock (17 samples, 0.02%)</title><rect x="807.9" y="469" width="0.2" height="15.0" fill="rgb(242,106,15)" rx="2" ry="2" />
<text  x="810.91" y="479.5" ></text>
</g>
<g >
<title>__bswap_32 (12 samples, 0.01%)</title><rect x="855.5" y="501" width="0.1" height="15.0" fill="rgb(219,206,33)" rx="2" ry="2" />
<text  x="858.49" y="511.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (54 samples, 0.05%)</title><rect x="182.8" y="485" width="0.6" height="15.0" fill="rgb(213,15,54)" rx="2" ry="2" />
<text  x="185.81" y="495.5" ></text>
</g>
<g >
<title>CRYPTO_lock (57 samples, 0.05%)</title><rect x="94.4" y="517" width="0.6" height="15.0" fill="rgb(205,10,16)" rx="2" ry="2" />
<text  x="97.36" y="527.5" ></text>
</g>
<g >
<title>xfs_trans_commit (17 samples, 0.02%)</title><rect x="130.0" y="341" width="0.2" height="15.0" fill="rgb(216,17,0)" rx="2" ry="2" />
<text  x="133.03" y="351.5" ></text>
</g>
<g >
<title>__GI___vsnprintf_chk (830 samples, 0.77%)</title><rect x="633.6" y="501" width="9.1" height="15.0" fill="rgb(247,201,42)" rx="2" ry="2" />
<text  x="636.64" y="511.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (13 samples, 0.01%)</title><rect x="945.3" y="421" width="0.1" height="15.0" fill="rgb(226,20,6)" rx="2" ry="2" />
<text  x="948.26" y="431.5" ></text>
</g>
<g >
<title>BN_from_montgomery (11 samples, 0.01%)</title><rect x="51.8" y="517" width="0.1" height="15.0" fill="rgb(224,211,25)" rx="2" ry="2" />
<text  x="54.80" y="527.5" ></text>
</g>
<g >
<title>__schedule (14 samples, 0.01%)</title><rect x="853.6" y="373" width="0.2" height="15.0" fill="rgb(207,61,3)" rx="2" ry="2" />
<text  x="856.64" y="383.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::operator-= (37 samples, 0.03%)</title><rect x="431.5" y="421" width="0.4" height="15.0" fill="rgb(237,83,25)" rx="2" ry="2" />
<text  x="434.52" y="431.5" ></text>
</g>
<g >
<title>__strchr_sse42 (154 samples, 0.14%)</title><rect x="851.0" y="485" width="1.7" height="15.0" fill="rgb(239,87,46)" rx="2" ry="2" />
<text  x="853.97" y="495.5" ></text>
</g>
<g >
<title>do_futex (21 samples, 0.02%)</title><rect x="853.6" y="437" width="0.2" height="15.0" fill="rgb(207,21,12)" rx="2" ry="2" />
<text  x="856.58" y="447.5" ></text>
</g>
<g >
<title>rb::stat::TimeGauge::stop (95 samples, 0.09%)</title><rect x="852.8" y="517" width="1.0" height="15.0" fill="rgb(226,148,20)" rx="2" ry="2" />
<text  x="855.77" y="527.5" ></text>
</g>
<g >
<title>irq_exit (12 samples, 0.01%)</title><rect x="806.2" y="469" width="0.2" height="15.0" fill="rgb(215,110,32)" rx="2" ry="2" />
<text  x="809.23" y="479.5" ></text>
</g>
<g >
<title>group_sched_in (14 samples, 0.01%)</title><rect x="320.5" y="181" width="0.2" height="15.0" fill="rgb(250,34,38)" rx="2" ry="2" />
<text  x="323.51" y="191.5" ></text>
</g>
<g >
<title>tcmalloc::SLL_Next (73 samples, 0.07%)</title><rect x="165.0" y="421" width="0.8" height="15.0" fill="rgb(230,200,37)" rx="2" ry="2" />
<text  x="167.95" y="431.5" ></text>
</g>
<g >
<title>nmi (10 samples, 0.01%)</title><rect x="443.8" y="501" width="0.1" height="15.0" fill="rgb(242,29,39)" rx="2" ry="2" />
<text  x="446.80" y="511.5" ></text>
</g>
<g >
<title>BN_new (22 samples, 0.02%)</title><rect x="72.0" y="517" width="0.2" height="15.0" fill="rgb(248,120,14)" rx="2" ry="2" />
<text  x="74.98" y="527.5" ></text>
</g>
<g >
<title>nmi (73 samples, 0.07%)</title><rect x="36.8" y="501" width="0.8" height="15.0" fill="rgb(243,45,38)" rx="2" ry="2" />
<text  x="39.81" y="511.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (23 samples, 0.02%)</title><rect x="992.8" y="325" width="0.3" height="15.0" fill="rgb(228,10,46)" rx="2" ry="2" />
<text  x="995.81" y="335.5" ></text>
</g>
<g >
<title>[unknown] (16 samples, 0.01%)</title><rect x="134.0" y="501" width="0.1" height="15.0" fill="rgb(211,31,5)" rx="2" ry="2" />
<text  x="136.96" y="511.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (911 samples, 0.85%)</title><rect x="296.8" y="437" width="9.9" height="15.0" fill="rgb(237,32,25)" rx="2" ry="2" />
<text  x="299.76" y="447.5" ></text>
</g>
<g >
<title>TCMalloc_PageMap2&lt;35&gt;::get (44 samples, 0.04%)</title><rect x="1142.8" y="437" width="0.5" height="15.0" fill="rgb(222,174,28)" rx="2" ry="2" />
<text  x="1145.82" y="447.5" ></text>
</g>
<g >
<title>dup_int (852 samples, 0.79%)</title><rect x="633.4" y="517" width="9.3" height="15.0" fill="rgb(242,46,15)" rx="2" ry="2" />
<text  x="636.41" y="527.5" ></text>
</g>
<g >
<title>bn_expand2 (148 samples, 0.14%)</title><rect x="444.2" y="517" width="1.6" height="15.0" fill="rgb(241,161,11)" rx="2" ry="2" />
<text  x="447.16" y="527.5" ></text>
</g>
<g >
<title>dequeue_task_fair (54 samples, 0.05%)</title><rect x="187.0" y="373" width="0.6" height="15.0" fill="rgb(238,221,49)" rx="2" ry="2" />
<text  x="190.00" y="383.5" ></text>
</g>
<g >
<title>system_call_after_swapgs (165 samples, 0.15%)</title><rect x="172.3" y="501" width="1.8" height="15.0" fill="rgb(226,188,24)" rx="2" ry="2" />
<text  x="175.34" y="511.5" ></text>
</g>
<g >
<title>get_futex_key (23 samples, 0.02%)</title><rect x="190.2" y="421" width="0.2" height="15.0" fill="rgb(231,58,12)" rx="2" ry="2" />
<text  x="193.16" y="431.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::string*&gt; (18 samples, 0.02%)</title><rect x="931.1" y="373" width="0.2" height="15.0" fill="rgb(218,113,45)" rx="2" ry="2" />
<text  x="934.05" y="383.5" ></text>
</g>
<g >
<title>__xfs_trans_commit (17 samples, 0.02%)</title><rect x="277.8" y="309" width="0.2" height="15.0" fill="rgb(242,202,23)" rx="2" ry="2" />
<text  x="280.83" y="319.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::_S_cmp&lt;std::string const&amp;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const&amp;&gt; (148 samples, 0.14%)</title><rect x="686.7" y="405" width="1.6" height="15.0" fill="rgb(240,56,45)" rx="2" ry="2" />
<text  x="689.72" y="415.5" ></text>
</g>
<g >
<title>std::string::_M_copy (11 samples, 0.01%)</title><rect x="163.4" y="469" width="0.1" height="15.0" fill="rgb(249,53,24)" rx="2" ry="2" />
<text  x="166.42" y="479.5" ></text>
</g>
<g >
<title>do_sync_write (66 samples, 0.06%)</title><rect x="129.5" y="453" width="0.7" height="15.0" fill="rgb(235,204,16)" rx="2" ry="2" />
<text  x="132.50" y="463.5" ></text>
</g>
<g >
<title>bannerd::Engine::cacher (436 samples, 0.40%)</title><rect x="317.5" y="517" width="4.8" height="15.0" fill="rgb(240,159,31)" rx="2" ry="2" />
<text  x="320.53" y="527.5" ></text>
</g>
<g >
<title>__strlen_sse2_pminub (40 samples, 0.04%)</title><rect x="970.6" y="485" width="0.4" height="15.0" fill="rgb(210,171,38)" rx="2" ry="2" />
<text  x="973.61" y="495.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (22 samples, 0.02%)</title><rect x="265.5" y="437" width="0.2" height="15.0" fill="rgb(250,40,0)" rx="2" ry="2" />
<text  x="268.48" y="447.5" ></text>
</g>
<g >
<title>x86_pmu_enable (32 samples, 0.03%)</title><rect x="308.3" y="341" width="0.4" height="15.0" fill="rgb(231,94,29)" rx="2" ry="2" />
<text  x="311.31" y="351.5" ></text>
</g>
<g >
<title>nmi (34 samples, 0.03%)</title><rect x="56.4" y="501" width="0.4" height="15.0" fill="rgb(210,77,16)" rx="2" ry="2" />
<text  x="59.41" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray (74 samples, 0.07%)</title><rect x="707.4" y="517" width="0.9" height="15.0" fill="rgb(236,60,35)" rx="2" ry="2" />
<text  x="710.45" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;target::dynamic_bitset, target::dynamic_bitset, std::__detail::_Identity, std::equal_to&lt;target::dynamic_bitset&gt;, std::hash&lt;target::dynamic_bitset&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_equals (107 samples, 0.10%)</title><rect x="439.6" y="421" width="1.1" height="15.0" fill="rgb(235,222,34)" rx="2" ry="2" />
<text  x="442.55" y="431.5" ></text>
</g>
<g >
<title>timerqueue_add (10 samples, 0.01%)</title><rect x="145.2" y="373" width="0.1" height="15.0" fill="rgb(253,140,17)" rx="2" ry="2" />
<text  x="148.19" y="383.5" ></text>
</g>
<g >
<title>_IO_str_init_static_internal (11 samples, 0.01%)</title><rect x="985.6" y="469" width="0.1" height="15.0" fill="rgb(242,117,32)" rx="2" ry="2" />
<text  x="988.60" y="479.5" ></text>
</g>
<g >
<title>nmi (10 samples, 0.01%)</title><rect x="86.8" y="501" width="0.2" height="15.0" fill="rgb(237,166,52)" rx="2" ry="2" />
<text  x="89.85" y="511.5" ></text>
</g>
<g >
<title>futex_wake (87 samples, 0.08%)</title><rect x="135.2" y="437" width="1.0" height="15.0" fill="rgb(246,123,25)" rx="2" ry="2" />
<text  x="138.23" y="447.5" ></text>
</g>
<g >
<title>__setsockopt (20 samples, 0.02%)</title><rect x="307.8" y="517" width="0.3" height="15.0" fill="rgb(224,213,47)" rx="2" ry="2" />
<text  x="310.85" y="527.5" ></text>
</g>
<g >
<title>applyNegativeFilters (220 samples, 0.20%)</title><rect x="428.7" y="485" width="2.5" height="15.0" fill="rgb(225,204,6)" rx="2" ry="2" />
<text  x="431.74" y="495.5" ></text>
</g>
<g >
<title>nmi (28 samples, 0.03%)</title><rect x="1107.9" y="485" width="0.4" height="15.0" fill="rgb(209,66,29)" rx="2" ry="2" />
<text  x="1110.95" y="495.5" ></text>
</g>
<g >
<title>std::ostream::put (26 samples, 0.02%)</title><rect x="947.4" y="517" width="0.3" height="15.0" fill="rgb(235,63,43)" rx="2" ry="2" />
<text  x="950.39" y="527.5" ></text>
</g>
<g >
<title>do_futex (107 samples, 0.10%)</title><rect x="136.7" y="453" width="1.2" height="15.0" fill="rgb(222,40,34)" rx="2" ry="2" />
<text  x="139.70" y="463.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::_S_cmp&lt;std::string const&amp;, std::string const&amp;&gt; (169 samples, 0.16%)</title><rect x="682.5" y="405" width="1.9" height="15.0" fill="rgb(235,166,20)" rx="2" ry="2" />
<text  x="685.50" y="415.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (103 samples, 0.10%)</title><rect x="936.3" y="517" width="1.2" height="15.0" fill="rgb(245,151,12)" rx="2" ry="2" />
<text  x="939.33" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (98 samples, 0.09%)</title><rect x="931.3" y="517" width="1.1" height="15.0" fill="rgb(224,131,53)" rx="2" ry="2" />
<text  x="934.33" y="527.5" ></text>
</g>
<g >
<title>__schedule (86 samples, 0.08%)</title><rect x="898.9" y="373" width="1.0" height="15.0" fill="rgb(248,162,7)" rx="2" ry="2" />
<text  x="901.91" y="383.5" ></text>
</g>
<g >
<title>sha1_block_data_order (21 samples, 0.02%)</title><rect x="857.9" y="517" width="0.2" height="15.0" fill="rgb(254,125,13)" rx="2" ry="2" />
<text  x="860.87" y="527.5" ></text>
</g>
<g >
<title>perf_iterate_ctx (28 samples, 0.03%)</title><rect x="138.8" y="373" width="0.3" height="15.0" fill="rgb(244,208,44)" rx="2" ry="2" />
<text  x="141.77" y="383.5" ></text>
</g>
<g >
<title>rb::stat::CommonArray&lt;rb::stat::BaseConcreteHistogram&lt;rb::stat::LinearHistogram&lt;1ul, 5001ul, 100ul, 1ul, rb::stat::Tick&gt; &gt;, 14ul&gt;::commit (68 samples, 0.06%)</title><rect x="324.6" y="469" width="0.8" height="15.0" fill="rgb(251,46,12)" rx="2" ry="2" />
<text  x="327.61" y="479.5" ></text>
</g>
<g >
<title>write_code (1,725 samples, 1.60%)</title><rect x="1170.8" y="517" width="18.9" height="15.0" fill="rgb(212,82,38)" rx="2" ry="2" />
<text  x="1173.76" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::_Identity&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::equal_range (66 samples, 0.06%)</title><rect x="922.1" y="517" width="0.7" height="15.0" fill="rgb(250,176,3)" rx="2" ry="2" />
<text  x="925.12" y="527.5" ></text>
</g>
<g >
<title>inline_mysql_rwlock_rdlock (18 samples, 0.02%)</title><rect x="807.7" y="469" width="0.2" height="15.0" fill="rgb(207,50,3)" rx="2" ry="2" />
<text  x="810.72" y="479.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt; &gt; (18 samples, 0.02%)</title><rect x="330.6" y="373" width="0.2" height="15.0" fill="rgb(235,94,34)" rx="2" ry="2" />
<text  x="333.61" y="383.5" ></text>
</g>
<g >
<title>visit_groups_merge (28 samples, 0.03%)</title><rect x="146.0" y="309" width="0.3" height="15.0" fill="rgb(233,214,9)" rx="2" ry="2" />
<text  x="148.96" y="319.5" ></text>
</g>
<g >
<title>getproc (1,290 samples, 1.20%)</title><rect x="655.2" y="501" width="14.1" height="15.0" fill="rgb(236,63,50)" rx="2" ry="2" />
<text  x="658.16" y="511.5" ></text>
</g>
<g >
<title>std::string::push_back (18 samples, 0.02%)</title><rect x="710.3" y="485" width="0.2" height="15.0" fill="rgb(211,42,11)" rx="2" ry="2" />
<text  x="713.34" y="495.5" ></text>
</g>
<g >
<title>bannerd::engine::TargetMessagePacker::writeSscUserId (10 samples, 0.01%)</title><rect x="412.7" y="517" width="0.1" height="15.0" fill="rgb(217,127,39)" rx="2" ry="2" />
<text  x="415.70" y="527.5" ></text>
</g>
<g >
<title>std::string::_Rep::_S_create (36 samples, 0.03%)</title><rect x="968.5" y="469" width="0.4" height="15.0" fill="rgb(249,65,3)" rx="2" ry="2" />
<text  x="971.46" y="479.5" ></text>
</g>
<g >
<title>add_stringn (61 samples, 0.06%)</title><rect x="310.3" y="501" width="0.6" height="15.0" fill="rgb(250,16,3)" rx="2" ry="2" />
<text  x="313.26" y="511.5" ></text>
</g>
<g >
<title>__libc_free (980 samples, 0.91%)</title><rect x="1112.7" y="501" width="10.8" height="15.0" fill="rgb(245,99,40)" rx="2" ry="2" />
<text  x="1115.72" y="511.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;bannerd::details::InternalStorage::Record const*, std::vector&lt;bannerd::details::InternalStorage::Record, std::allocator&lt;bannerd::details::InternalStorage::Record&gt; &gt; &gt; &gt; (48 samples, 0.04%)</title><rect x="381.3" y="469" width="0.6" height="15.0" fill="rgb(224,172,9)" rx="2" ry="2" />
<text  x="384.33" y="479.5" ></text>
</g>
<g >
<title>trg::protobuf::bannerd::BannerLimitMsg::ByteSize (43 samples, 0.04%)</title><rect x="1151.2" y="517" width="0.5" height="15.0" fill="rgb(230,226,29)" rx="2" ry="2" />
<text  x="1154.24" y="527.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (46 samples, 0.04%)</title><rect x="963.8" y="485" width="0.5" height="15.0" fill="rgb(230,18,32)" rx="2" ry="2" />
<text  x="966.83" y="495.5" ></text>
</g>
<g >
<title>nmi (21 samples, 0.02%)</title><rect x="508.7" y="501" width="0.2" height="15.0" fill="rgb(227,198,49)" rx="2" ry="2" />
<text  x="511.67" y="511.5" ></text>
</g>
<g >
<title>malloc_fast_path&lt;tcmalloc::malloc_oom&gt; (595 samples, 0.55%)</title><rect x="1126.3" y="501" width="6.5" height="15.0" fill="rgb(206,28,44)" rx="2" ry="2" />
<text  x="1129.28" y="511.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (10 samples, 0.01%)</title><rect x="697.6" y="421" width="0.1" height="15.0" fill="rgb(229,10,43)" rx="2" ry="2" />
<text  x="700.59" y="431.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (66 samples, 0.06%)</title><rect x="686.9" y="357" width="0.7" height="15.0" fill="rgb(223,144,39)" rx="2" ry="2" />
<text  x="689.91" y="367.5" ></text>
</g>
<g >
<title>findFunction (52 samples, 0.05%)</title><rect x="330.9" y="469" width="0.6" height="15.0" fill="rgb(234,171,40)" rx="2" ry="2" />
<text  x="333.89" y="479.5" ></text>
</g>
<g >
<title>__exchange_and_add (11 samples, 0.01%)</title><rect x="931.1" y="261" width="0.1" height="15.0" fill="rgb(252,76,25)" rx="2" ry="2" />
<text  x="934.12" y="271.5" ></text>
</g>
<g >
<title>openssl_lock_function (110 samples, 0.10%)</title><rect x="90.9" y="485" width="1.2" height="15.0" fill="rgb(238,66,17)" rx="2" ry="2" />
<text  x="93.90" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long long, target::dynamic_bitset::AlignedAllocator&lt;unsigned long long&gt; &gt;::vector (244 samples, 0.23%)</title><rect x="982.0" y="501" width="2.7" height="15.0" fill="rgb(213,22,27)" rx="2" ry="2" />
<text  x="985.05" y="511.5" ></text>
</g>
<g >
<title>do_realloc (203 samples, 0.19%)</title><rect x="1139.9" y="501" width="2.2" height="15.0" fill="rgb(227,66,43)" rx="2" ry="2" />
<text  x="1142.89" y="511.5" ></text>
</g>
<g >
<title>sha1_block_data_order_avx (2,502 samples, 2.32%)</title><rect x="858.1" y="517" width="27.4" height="15.0" fill="rgb(229,28,23)" rx="2" ry="2" />
<text  x="861.10" y="527.5" >s..</text>
</g>
<g >
<title>schedule (10 samples, 0.01%)</title><rect x="1146.7" y="421" width="0.1" height="15.0" fill="rgb(206,29,46)" rx="2" ry="2" />
<text  x="1149.71" y="431.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt; &gt; (352 samples, 0.33%)</title><rect x="693.1" y="405" width="3.9" height="15.0" fill="rgb(235,114,41)" rx="2" ry="2" />
<text  x="696.12" y="415.5" ></text>
</g>
<g >
<title>perf_swevent_add (32 samples, 0.03%)</title><rect x="301.4" y="261" width="0.3" height="15.0" fill="rgb(220,37,37)" rx="2" ry="2" />
<text  x="304.38" y="271.5" ></text>
</g>
<g >
<title>BN_mod_inverse (337 samples, 0.31%)</title><rect x="64.5" y="517" width="3.7" height="15.0" fill="rgb(236,69,23)" rx="2" ry="2" />
<text  x="67.49" y="527.5" ></text>
</g>
<g >
<title>__pthread_cond_timedwait (18 samples, 0.02%)</title><rect x="988.1" y="501" width="0.2" height="15.0" fill="rgb(229,69,45)" rx="2" ry="2" />
<text  x="991.11" y="511.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_set_length_and_sharable (20 samples, 0.02%)</title><rect x="974.4" y="485" width="0.2" height="15.0" fill="rgb(235,165,17)" rx="2" ry="2" />
<text  x="977.39" y="495.5" ></text>
</g>
<g >
<title>std::map&lt;std::string, std::string, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::find&lt;char [23]&gt; (14 samples, 0.01%)</title><rect x="409.8" y="501" width="0.2" height="15.0" fill="rgb(217,64,3)" rx="2" ry="2" />
<text  x="412.80" y="511.5" ></text>
</g>
<g >
<title>__schedule (28 samples, 0.03%)</title><rect x="307.2" y="405" width="0.3" height="15.0" fill="rgb(252,31,4)" rx="2" ry="2" />
<text  x="310.22" y="415.5" ></text>
</g>
<g >
<title>httpd::parse_request_fields&lt;std::shared_ptr&lt;clientserver::buffer&lt;clientserver::service_socket&gt; &gt; &gt; (38 samples, 0.04%)</title><rect x="710.2" y="517" width="0.4" height="15.0" fill="rgb(249,143,34)" rx="2" ry="2" />
<text  x="713.17" y="527.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (307 samples, 0.29%)</title><rect x="959.4" y="485" width="3.4" height="15.0" fill="rgb(239,117,10)" rx="2" ry="2" />
<text  x="962.39" y="495.5" ></text>
</g>
<g >
<title>native_write_msr_safe (148 samples, 0.14%)</title><rect x="302.6" y="293" width="1.6" height="15.0" fill="rgb(214,201,4)" rx="2" ry="2" />
<text  x="305.61" y="303.5" ></text>
</g>
<g >
<title>bannerd::TargetingCollection::Record&lt;bool const&amp;, bannerd::targeting::StringSet const&amp;&gt;::operator&lt; (253 samples, 0.23%)</title><rect x="151.4" y="501" width="2.8" height="15.0" fill="rgb(223,81,53)" rx="2" ry="2" />
<text  x="154.38" y="511.5" ></text>
</g>
<g >
<title>perf_pmu_sched_task (51 samples, 0.05%)</title><rect x="298.0" y="373" width="0.6" height="15.0" fill="rgb(251,24,50)" rx="2" ry="2" />
<text  x="301.01" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; &gt;::swap (59 samples, 0.05%)</title><rect x="673.1" y="501" width="0.6" height="15.0" fill="rgb(225,99,13)" rx="2" ry="2" />
<text  x="676.05" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::WriteUInt32ToArray (19 samples, 0.02%)</title><rect x="1155.3" y="501" width="0.2" height="15.0" fill="rgb(212,226,38)" rx="2" ry="2" />
<text  x="1158.26" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::_Identity&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::_M_upper_bound (11 samples, 0.01%)</title><rect x="922.3" y="501" width="0.1" height="15.0" fill="rgb(229,96,13)" rx="2" ry="2" />
<text  x="925.32" y="511.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, std::map&lt;unsigned int, double, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, double&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int const, std::map&lt;unsigned int, double, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, double&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (44 samples, 0.04%)</title><rect x="410.3" y="453" width="0.4" height="15.0" fill="rgb(227,178,43)" rx="2" ry="2" />
<text  x="413.26" y="463.5" ></text>
</g>
<g >
<title>schedule (11 samples, 0.01%)</title><rect x="893.7" y="389" width="0.2" height="15.0" fill="rgb(251,29,2)" rx="2" ry="2" />
<text  x="896.74" y="399.5" ></text>
</g>
<g >
<title>rb::stat::commit&lt;bannerd::request_lifetime&gt; (21 samples, 0.02%)</title><rect x="1189.8" y="501" width="0.2" height="15.0" fill="rgb(219,175,4)" rx="2" ry="2" />
<text  x="1192.76" y="511.5" ></text>
</g>
<g >
<title>ASN1_get_object (42 samples, 0.04%)</title><rect x="17.9" y="517" width="0.5" height="15.0" fill="rgb(247,100,29)" rx="2" ry="2" />
<text  x="20.92" y="527.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::wideOr (275 samples, 0.26%)</title><rect x="1108.3" y="501" width="3.0" height="15.0" fill="rgb(222,155,21)" rx="2" ry="2" />
<text  x="1111.26" y="511.5" ></text>
</g>
<g >
<title>bannerd::TargetingCollection::Range&lt;bannerd::FilterMobileCategoryEx&gt;::Range (41 samples, 0.04%)</title><rect x="149.0" y="501" width="0.4" height="15.0" fill="rgb(218,213,42)" rx="2" ry="2" />
<text  x="151.99" y="511.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::operator (36 samples, 0.03%)</title><rect x="922.4" y="501" width="0.4" height="15.0" fill="rgb(231,133,7)" rx="2" ry="2" />
<text  x="925.44" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::io::CodedOutputStream::WriteTagToArray (25 samples, 0.02%)</title><rect x="1161.9" y="469" width="0.3" height="15.0" fill="rgb(221,142,43)" rx="2" ry="2" />
<text  x="1164.92" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long long, target::dynamic_bitset::AlignedAllocator&lt;unsigned long long&gt; &gt;::vector (113 samples, 0.10%)</title><rect x="980.8" y="469" width="1.2" height="15.0" fill="rgb(215,45,11)" rx="2" ry="2" />
<text  x="983.81" y="479.5" ></text>
</g>
<g >
<title>futex_wake (24 samples, 0.02%)</title><rect x="856.3" y="437" width="0.3" height="15.0" fill="rgb(217,98,45)" rx="2" ry="2" />
<text  x="859.29" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, std::string&gt;, std::_Select1st&lt;std::pair&lt;std::string const, std::string&gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::_M_lower_bound_tr&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, void&gt; (161 samples, 0.15%)</title><rect x="656.0" y="437" width="1.7" height="15.0" fill="rgb(227,116,39)" rx="2" ry="2" />
<text  x="658.98" y="447.5" ></text>
</g>
<g >
<title>do_free_with_callback (913 samples, 0.85%)</title><rect x="1113.4" y="469" width="10.1" height="15.0" fill="rgb(243,60,12)" rx="2" ry="2" />
<text  x="1116.45" y="479.5" ></text>
</g>
<g >
<title>BN_mod_exp_mont (32 samples, 0.03%)</title><rect x="892.0" y="501" width="0.4" height="15.0" fill="rgb(213,149,21)" rx="2" ry="2" />
<text  x="895.02" y="511.5" ></text>
</g>
<g >
<title>sock_sendmsg (280 samples, 0.26%)</title><rect x="282.1" y="453" width="3.1" height="15.0" fill="rgb(222,123,38)" rx="2" ry="2" />
<text  x="285.15" y="463.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (27 samples, 0.03%)</title><rect x="128.2" y="437" width="0.3" height="15.0" fill="rgb(233,112,2)" rx="2" ry="2" />
<text  x="131.22" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::deallocate (11 samples, 0.01%)</title><rect x="928.9" y="453" width="0.1" height="15.0" fill="rgb(215,2,25)" rx="2" ry="2" />
<text  x="931.90" y="463.5" ></text>
</g>
<g >
<title>FilterMobileAppsIndex (25 samples, 0.02%)</title><rect x="426.3" y="501" width="0.3" height="15.0" fill="rgb(206,32,12)" rx="2" ry="2" />
<text  x="429.32" y="511.5" ></text>
</g>
<g >
<title>htonl (44 samples, 0.04%)</title><rect x="708.8" y="517" width="0.5" height="15.0" fill="rgb(233,174,54)" rx="2" ry="2" />
<text  x="711.84" y="527.5" ></text>
</g>
<g >
<title>sysret_check (17 samples, 0.02%)</title><rect x="134.7" y="485" width="0.2" height="15.0" fill="rgb(220,177,53)" rx="2" ry="2" />
<text  x="137.71" y="495.5" ></text>
</g>
<g >
<title>futex_wait (149 samples, 0.14%)</title><rect x="898.7" y="421" width="1.6" height="15.0" fill="rgb(205,0,49)" rx="2" ry="2" />
<text  x="901.72" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, bannerd::engine::BannerProductsInfo&gt;, std::allocator&lt;std::pair&lt;unsigned int const, bannerd::engine::BannerProductsInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (22 samples, 0.02%)</title><rect x="689.1" y="469" width="0.3" height="15.0" fill="rgb(240,64,11)" rx="2" ry="2" />
<text  x="692.11" y="479.5" ></text>
</g>
<g >
<title>system_call_after_swapgs (22 samples, 0.02%)</title><rect x="285.8" y="501" width="0.2" height="15.0" fill="rgb(216,192,37)" rx="2" ry="2" />
<text  x="288.77" y="511.5" ></text>
</g>
<g >
<title>__clone (94 samples, 0.09%)</title><rect x="277.3" y="517" width="1.1" height="15.0" fill="rgb(250,5,49)" rx="2" ry="2" />
<text  x="280.33" y="527.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt; &gt; (32 samples, 0.03%)</title><rect x="675.1" y="405" width="0.3" height="15.0" fill="rgb(224,198,39)" rx="2" ry="2" />
<text  x="678.07" y="415.5" ></text>
</g>
<g >
<title>perf_pmu_sched_task (10 samples, 0.01%)</title><rect x="145.5" y="357" width="0.1" height="15.0" fill="rgb(240,228,50)" rx="2" ry="2" />
<text  x="148.45" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, std::string&gt;, std::_Select1st&lt;std::pair&lt;std::string const, std::string&gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::_M_lower_bound_tr&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, void&gt; (26 samples, 0.02%)</title><rect x="688.6" y="469" width="0.3" height="15.0" fill="rgb(217,150,27)" rx="2" ry="2" />
<text  x="691.62" y="479.5" ></text>
</g>
<g >
<title>binarySearch&lt;const (anonymous namespace)::ProcFunction*, (anonymous namespace)::ProcFunction, (anonymous namespace)::findFunction (20 samples, 0.02%)</title><rect x="322.7" y="469" width="0.2" height="15.0" fill="rgb(230,226,47)" rx="2" ry="2" />
<text  x="325.68" y="479.5" ></text>
</g>
<g >
<title>fget_light (62 samples, 0.06%)</title><rect x="316.3" y="453" width="0.7" height="15.0" fill="rgb(210,110,36)" rx="2" ry="2" />
<text  x="319.35" y="463.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (87 samples, 0.08%)</title><rect x="941.8" y="501" width="1.0" height="15.0" fill="rgb(247,16,30)" rx="2" ry="2" />
<text  x="944.82" y="511.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt; &gt; (24 samples, 0.02%)</title><rect x="331.1" y="373" width="0.3" height="15.0" fill="rgb(215,192,24)" rx="2" ry="2" />
<text  x="334.14" y="383.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt; &gt; (10 samples, 0.01%)</title><rect x="322.8" y="389" width="0.1" height="15.0" fill="rgb(227,4,3)" rx="2" ry="2" />
<text  x="325.77" y="399.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::_S_cmp&lt;std::string const&amp;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const&amp;&gt; (25 samples, 0.02%)</title><rect x="688.6" y="437" width="0.3" height="15.0" fill="rgb(237,45,33)" rx="2" ry="2" />
<text  x="691.63" y="447.5" ></text>
</g>
<g >
<title>nmi (31 samples, 0.03%)</title><rect x="984.4" y="485" width="0.3" height="15.0" fill="rgb(212,96,27)" rx="2" ry="2" />
<text  x="987.36" y="495.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::string&gt; (18 samples, 0.02%)</title><rect x="931.1" y="357" width="0.2" height="15.0" fill="rgb(238,221,5)" rx="2" ry="2" />
<text  x="934.05" y="367.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (37 samples, 0.03%)</title><rect x="949.1" y="485" width="0.4" height="15.0" fill="rgb(230,120,12)" rx="2" ry="2" />
<text  x="952.14" y="495.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, bannerd::TemplateIncludeEx, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, bannerd::TemplateIncludeEx&gt; &gt; &gt;::find (19 samples, 0.02%)</title><rect x="699.9" y="469" width="0.2" height="15.0" fill="rgb(227,204,50)" rx="2" ry="2" />
<text  x="702.90" y="479.5" ></text>
</g>
<g >
<title>std::map&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; &gt;::map (10 samples, 0.01%)</title><rect x="690.1" y="485" width="0.1" height="15.0" fill="rgb(245,156,33)" rx="2" ry="2" />
<text  x="693.06" y="495.5" ></text>
</g>
<g >
<title>futex_wait (25 samples, 0.02%)</title><rect x="856.7" y="437" width="0.3" height="15.0" fill="rgb(246,179,4)" rx="2" ry="2" />
<text  x="859.72" y="447.5" ></text>
</g>
<g >
<title>finish_task_switch (98 samples, 0.09%)</title><rect x="187.6" y="389" width="1.1" height="15.0" fill="rgb(240,205,34)" rx="2" ry="2" />
<text  x="190.63" y="399.5" ></text>
</g>
<g >
<title>tc_free (31 samples, 0.03%)</title><rect x="642.4" y="485" width="0.3" height="15.0" fill="rgb(241,221,34)" rx="2" ry="2" />
<text  x="645.39" y="495.5" ></text>
</g>
<g >
<title>RSA_free (26 samples, 0.02%)</title><rect x="113.8" y="517" width="0.3" height="15.0" fill="rgb(223,163,49)" rx="2" ry="2" />
<text  x="116.84" y="527.5" ></text>
</g>
<g >
<title>perf_try_init_event (87 samples, 0.08%)</title><rect x="140.7" y="341" width="0.9" height="15.0" fill="rgb(208,60,3)" rx="2" ry="2" />
<text  x="143.69" y="351.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (11 samples, 0.01%)</title><rect x="893.7" y="405" width="0.2" height="15.0" fill="rgb(243,19,38)" rx="2" ry="2" />
<text  x="896.74" y="415.5" ></text>
</g>
<g >
<title>__exchange_and_add (54 samples, 0.05%)</title><rect x="928.3" y="341" width="0.5" height="15.0" fill="rgb(243,51,53)" rx="2" ry="2" />
<text  x="931.25" y="351.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_destroy (20 samples, 0.02%)</title><rect x="948.9" y="517" width="0.2" height="15.0" fill="rgb(217,188,35)" rx="2" ry="2" />
<text  x="951.86" y="527.5" ></text>
</g>
<g >
<title>trg::protobuf::bannerd::ShowClickMsg::SharedCtor (21 samples, 0.02%)</title><rect x="1155.5" y="517" width="0.3" height="15.0" fill="rgb(214,22,36)" rx="2" ry="2" />
<text  x="1158.54" y="527.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (11 samples, 0.01%)</title><rect x="701.7" y="405" width="0.2" height="15.0" fill="rgb(250,203,29)" rx="2" ry="2" />
<text  x="704.73" y="415.5" ></text>
</g>
<g >
<title>tcmalloc::SizeMap::GetSizeClass (17 samples, 0.02%)</title><rect x="166.0" y="469" width="0.2" height="15.0" fill="rgb(244,205,30)" rx="2" ry="2" />
<text  x="169.02" y="479.5" ></text>
</g>
<g >
<title>futex_wait (10 samples, 0.01%)</title><rect x="916.7" y="373" width="0.1" height="15.0" fill="rgb(234,23,47)" rx="2" ry="2" />
<text  x="919.68" y="383.5" ></text>
</g>
<g >
<title>RSA_new (16 samples, 0.01%)</title><rect x="131.7" y="501" width="0.2" height="15.0" fill="rgb(247,206,16)" rx="2" ry="2" />
<text  x="134.71" y="511.5" ></text>
</g>
<g >
<title>google::dense_hashtable&lt;unsigned int, unsigned int, std::hash&lt;unsigned int&gt;, google::dense_hash_set&lt;unsigned int, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, google::libc_allocator_with_realloc&lt;unsigned int&gt; &gt;::Identity, google::dense_hash_set&lt;unsigned int, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, google::libc_allocator_with_realloc&lt;unsigned int&gt; &gt;::SetKey, std::equal_to&lt;unsigned int&gt;, google::libc_allocator_with_realloc&lt;unsigned int&gt; &gt;::insert&lt;__gnu_cxx::__normal_iterator&lt;unsigned int*, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt; &gt; &gt; (36 samples, 0.03%)</title><rect x="436.3" y="485" width="0.4" height="15.0" fill="rgb(207,168,33)" rx="2" ry="2" />
<text  x="439.29" y="495.5" ></text>
</g>
<g >
<title>__libc_send (299 samples, 0.28%)</title><rect x="281.9" y="517" width="3.3" height="15.0" fill="rgb(228,209,48)" rx="2" ry="2" />
<text  x="284.95" y="527.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (329 samples, 0.31%)</title><rect x="693.4" y="389" width="3.6" height="15.0" fill="rgb(231,211,32)" rx="2" ry="2" />
<text  x="696.37" y="399.5" ></text>
</g>
<g >
<title>__round (37 samples, 0.03%)</title><rect x="414.8" y="501" width="0.4" height="15.0" fill="rgb(209,143,31)" rx="2" ry="2" />
<text  x="417.84" y="511.5" ></text>
</g>
<g >
<title>tcp_write_xmit (30 samples, 0.03%)</title><rect x="1164.3" y="357" width="0.3" height="15.0" fill="rgb(231,200,14)" rx="2" ry="2" />
<text  x="1167.31" y="367.5" ></text>
</g>
<g >
<title>std::condition_variable::__wait_until_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (72 samples, 0.07%)</title><rect x="834.2" y="453" width="0.8" height="15.0" fill="rgb(206,115,1)" rx="2" ry="2" />
<text  x="837.20" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::internal::RepeatedPtrFieldBase::Destroy&lt;google::protobuf::RepeatedPtrField&lt;std::string&gt;::TypeHandler&gt; (26 samples, 0.02%)</title><rect x="706.0" y="517" width="0.3" height="15.0" fill="rgb(246,66,0)" rx="2" ry="2" />
<text  x="708.98" y="527.5" ></text>
</g>
<g >
<title>reset&lt;profile::build_positive_string_set, std::vector&lt;const bannerd::store::ActiveCampaign*&gt;, bannerd::store::ActiveCampaignIndex::build (74 samples, 0.07%)</title><rect x="417.8" y="501" width="0.8" height="15.0" fill="rgb(226,217,18)" rx="2" ry="2" />
<text  x="420.81" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, std::string&gt;, std::_Select1st&lt;std::pair&lt;std::string const, std::string&gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::_M_find_tr&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, void&gt; (170 samples, 0.16%)</title><rect x="686.6" y="453" width="1.9" height="15.0" fill="rgb(216,229,11)" rx="2" ry="2" />
<text  x="689.60" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::vector&lt;boost::container::vec_iterator&lt;unsigned int*, true&gt;, void&gt; (14 samples, 0.01%)</title><rect x="411.6" y="485" width="0.2" height="15.0" fill="rgb(218,160,40)" rx="2" ry="2" />
<text  x="414.61" y="495.5" ></text>
</g>
<g >
<title>std::string::compare (130 samples, 0.12%)</title><rect x="945.6" y="405" width="1.4" height="15.0" fill="rgb(220,181,6)" rx="2" ry="2" />
<text  x="948.62" y="415.5" ></text>
</g>
<g >
<title>ip_rcv_finish (21 samples, 0.02%)</title><rect x="992.8" y="261" width="0.2" height="15.0" fill="rgb(230,163,15)" rx="2" ry="2" />
<text  x="995.81" y="271.5" ></text>
</g>
<g >
<title>__memchr (30 samples, 0.03%)</title><rect x="672.4" y="437" width="0.4" height="15.0" fill="rgb(223,19,31)" rx="2" ry="2" />
<text  x="675.43" y="447.5" ></text>
</g>
<g >
<title>ip_rcv (11 samples, 0.01%)</title><rect x="613.5" y="293" width="0.2" height="15.0" fill="rgb(221,44,32)" rx="2" ry="2" />
<text  x="616.55" y="303.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::_S_cmp&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const&amp;, std::string const&amp;&gt; (13 samples, 0.01%)</title><rect x="685.9" y="421" width="0.1" height="15.0" fill="rgb(227,175,28)" rx="2" ry="2" />
<text  x="688.86" y="431.5" ></text>
</g>
<g >
<title>hash_futex (15 samples, 0.01%)</title><rect x="190.5" y="437" width="0.2" height="15.0" fill="rgb(227,186,16)" rx="2" ry="2" />
<text  x="193.52" y="447.5" ></text>
</g>
<g >
<title>__exchange_and_add (10 samples, 0.01%)</title><rect x="930.9" y="341" width="0.2" height="15.0" fill="rgb(234,159,4)" rx="2" ry="2" />
<text  x="933.94" y="351.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::_S_cmp&lt;std::string const&amp;, std::string const&amp;&gt; (49 samples, 0.05%)</title><rect x="681.4" y="453" width="0.6" height="15.0" fill="rgb(228,120,11)" rx="2" ry="2" />
<text  x="684.44" y="463.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::operator (199 samples, 0.18%)</title><rect x="159.0" y="485" width="2.2" height="15.0" fill="rgb(215,176,46)" rx="2" ry="2" />
<text  x="162.02" y="495.5" ></text>
</g>
<g >
<title>sys_nanosleep (51 samples, 0.05%)</title><rect x="293.5" y="485" width="0.5" height="15.0" fill="rgb(215,53,47)" rx="2" ry="2" />
<text  x="296.46" y="495.5" ></text>
</g>
<g >
<title>bannerd::TargetingCollection::Record&lt;bannerd::TargetingCollection::CheckParams const&amp;, bannerd::TargetingCollection::CheckRemarketingParams const&amp;, bannerd::TargetingCollection::CheckResults&amp;&gt;::operator&lt; (14 samples, 0.01%)</title><rect x="151.2" y="501" width="0.2" height="15.0" fill="rgb(219,88,18)" rx="2" ry="2" />
<text  x="154.23" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, std::string&gt;, std::_Select1st&lt;std::pair&lt;std::string const, std::string&gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::_M_get_insert_hint_unique_pos (310 samples, 0.29%)</title><rect x="157.8" y="501" width="3.4" height="15.0" fill="rgb(251,63,5)" rx="2" ry="2" />
<text  x="160.80" y="511.5" ></text>
</g>
<g >
<title>std::string::compare (134 samples, 0.12%)</title><rect x="405.5" y="469" width="1.5" height="15.0" fill="rgb(221,51,39)" rx="2" ry="2" />
<text  x="408.50" y="479.5" ></text>
</g>
<g >
<title>do_realloc_with_callback (67 samples, 0.06%)</title><rect x="280.9" y="485" width="0.8" height="15.0" fill="rgb(243,189,18)" rx="2" ry="2" />
<text  x="283.93" y="495.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (49 samples, 0.05%)</title><rect x="681.4" y="437" width="0.6" height="15.0" fill="rgb(241,149,19)" rx="2" ry="2" />
<text  x="684.44" y="447.5" ></text>
</g>
<g >
<title>std::string::_S_copy_chars (124 samples, 0.12%)</title><rect x="943.0" y="453" width="1.4" height="15.0" fill="rgb(225,58,35)" rx="2" ry="2" />
<text  x="946.02" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (41 samples, 0.04%)</title><rect x="919.1" y="469" width="0.4" height="15.0" fill="rgb(248,101,31)" rx="2" ry="2" />
<text  x="922.09" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long long, target::dynamic_bitset::AlignedAllocator&lt;unsigned long long&gt; &gt;::_M_fill_insert (64 samples, 0.06%)</title><rect x="980.0" y="469" width="0.7" height="15.0" fill="rgb(233,8,31)" rx="2" ry="2" />
<text  x="983.00" y="479.5" ></text>
</g>
<g >
<title>std::fill&lt;__gnu_cxx::__normal_iterator&lt;unsigned long long*, std::vector&lt;unsigned long long, target::dynamic_bitset::AlignedAllocator&lt;unsigned long long&gt; &gt; &gt;, int&gt; (200 samples, 0.19%)</title><rect x="432.1" y="437" width="2.2" height="15.0" fill="rgb(231,101,3)" rx="2" ry="2" />
<text  x="435.06" y="447.5" ></text>
</g>
<g >
<title>nmi (27 samples, 0.03%)</title><rect x="59.7" y="501" width="0.3" height="15.0" fill="rgb(243,131,28)" rx="2" ry="2" />
<text  x="62.71" y="511.5" ></text>
</g>
<g >
<title>alloc_inode (10 samples, 0.01%)</title><rect x="195.2" y="405" width="0.1" height="15.0" fill="rgb(253,193,36)" rx="2" ry="2" />
<text  x="198.22" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;target::dynamic_bitset::AlignedAllocator&lt;unsigned long long&gt; &gt;::construct&lt;unsigned long long, unsigned long long const&amp;&gt; (28 samples, 0.03%)</title><rect x="830.8" y="437" width="0.3" height="15.0" fill="rgb(206,161,37)" rx="2" ry="2" />
<text  x="833.78" y="447.5" ></text>
</g>
<g >
<title>tcmalloc::SLL_TryPop (95 samples, 0.09%)</title><rect x="164.7" y="437" width="1.1" height="15.0" fill="rgb(225,153,27)" rx="2" ry="2" />
<text  x="167.71" y="447.5" ></text>
</g>
<g >
<title>std::map&lt;std::string, std::string, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::lower_bound (648 samples, 0.60%)</title><rect x="843.6" y="485" width="7.1" height="15.0" fill="rgb(253,7,8)" rx="2" ry="2" />
<text  x="846.60" y="495.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (11 samples, 0.01%)</title><rect x="380.8" y="453" width="0.1" height="15.0" fill="rgb(232,97,7)" rx="2" ry="2" />
<text  x="383.79" y="463.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (108 samples, 0.10%)</title><rect x="145.8" y="357" width="1.2" height="15.0" fill="rgb(250,171,29)" rx="2" ry="2" />
<text  x="148.78" y="367.5" ></text>
</g>
<g >
<title>nmi (514 samples, 0.48%)</title><rect x="489.4" y="501" width="5.6" height="15.0" fill="rgb(210,13,26)" rx="2" ry="2" />
<text  x="492.41" y="511.5" ></text>
</g>
<g >
<title>system_call_fastpath (16 samples, 0.01%)</title><rect x="892.1" y="469" width="0.2" height="15.0" fill="rgb(227,105,27)" rx="2" ry="2" />
<text  x="895.09" y="479.5" ></text>
</g>
<g >
<title>__strspn_sse42 (28 samples, 0.03%)</title><rect x="815.1" y="501" width="0.3" height="15.0" fill="rgb(206,7,0)" rx="2" ry="2" />
<text  x="818.06" y="511.5" ></text>
</g>
<g >
<title>getprocTruncate (57 samples, 0.05%)</title><rect x="703.2" y="517" width="0.6" height="15.0" fill="rgb(250,72,50)" rx="2" ry="2" />
<text  x="706.19" y="527.5" ></text>
</g>
<g >
<title>tcmalloc::ThreadCache::Allocate (12 samples, 0.01%)</title><rect x="166.2" y="469" width="0.1" height="15.0" fill="rgb(210,16,11)" rx="2" ry="2" />
<text  x="169.20" y="479.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (15 samples, 0.01%)</title><rect x="657.8" y="389" width="0.1" height="15.0" fill="rgb(218,196,50)" rx="2" ry="2" />
<text  x="660.77" y="399.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::operator-= (87 samples, 0.08%)</title><rect x="1099.5" y="485" width="0.9" height="15.0" fill="rgb(220,126,33)" rx="2" ry="2" />
<text  x="1102.48" y="495.5" ></text>
</g>
<g >
<title>sys_epoll_wait (45 samples, 0.04%)</title><rect x="128.0" y="485" width="0.5" height="15.0" fill="rgb(207,22,37)" rx="2" ry="2" />
<text  x="131.05" y="495.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::basic_string_view (26 samples, 0.02%)</title><rect x="697.7" y="501" width="0.3" height="15.0" fill="rgb(239,98,38)" rx="2" ry="2" />
<text  x="700.71" y="511.5" ></text>
</g>
<g >
<title>__strncmp_sse42 (65 samples, 0.06%)</title><rect x="147.6" y="501" width="0.7" height="15.0" fill="rgb(222,162,3)" rx="2" ry="2" />
<text  x="150.60" y="511.5" ></text>
</g>
<g >
<title>start_thread (25 samples, 0.02%)</title><rect x="917.1" y="517" width="0.2" height="15.0" fill="rgb(216,34,4)" rx="2" ry="2" />
<text  x="920.07" y="527.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (10 samples, 0.01%)</title><rect x="930.9" y="373" width="0.2" height="15.0" fill="rgb(235,141,47)" rx="2" ry="2" />
<text  x="933.94" y="383.5" ></text>
</g>
<g >
<title>std::map&lt;std::string, std::string, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (18 samples, 0.02%)</title><rect x="689.5" y="485" width="0.1" height="15.0" fill="rgb(207,40,27)" rx="2" ry="2" />
<text  x="692.45" y="495.5" ></text>
</g>
<g >
<title>system_call_fastpath (141 samples, 0.13%)</title><rect x="320.0" y="389" width="1.5" height="15.0" fill="rgb(235,29,42)" rx="2" ry="2" />
<text  x="322.96" y="399.5" ></text>
</g>
<g >
<title>operator (34 samples, 0.03%)</title><rect x="382.0" y="437" width="0.4" height="15.0" fill="rgb(223,98,43)" rx="2" ry="2" />
<text  x="385.01" y="447.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt; &gt; (22 samples, 0.02%)</title><rect x="667.6" y="421" width="0.2" height="15.0" fill="rgb(238,134,40)" rx="2" ry="2" />
<text  x="670.57" y="431.5" ></text>
</g>
<g >
<title>__libc_recv (26 samples, 0.02%)</title><rect x="281.7" y="517" width="0.2" height="15.0" fill="rgb(218,123,3)" rx="2" ry="2" />
<text  x="284.66" y="527.5" ></text>
</g>
<g >
<title>do_free (11 samples, 0.01%)</title><rect x="164.4" y="469" width="0.1" height="15.0" fill="rgb(207,206,3)" rx="2" ry="2" />
<text  x="167.35" y="479.5" ></text>
</g>
<g >
<title>__GI_strlen (26 samples, 0.02%)</title><rect x="329.9" y="485" width="0.3" height="15.0" fill="rgb(230,111,15)" rx="2" ry="2" />
<text  x="332.91" y="495.5" ></text>
</g>
<g >
<title>call_softirq (13 samples, 0.01%)</title><rect x="277.2" y="437" width="0.1" height="15.0" fill="rgb(239,23,23)" rx="2" ry="2" />
<text  x="280.16" y="447.5" ></text>
</g>
<g >
<title>queued_spin_lock_slowpath (24 samples, 0.02%)</title><rect x="176.0" y="421" width="0.3" height="15.0" fill="rgb(223,144,29)" rx="2" ry="2" />
<text  x="179.01" y="431.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (14 samples, 0.01%)</title><rect x="807.2" y="437" width="0.1" height="15.0" fill="rgb(243,56,4)" rx="2" ry="2" />
<text  x="810.19" y="447.5" ></text>
</g>
<g >
<title>std::string::_M_rep (24 samples, 0.02%)</title><rect x="958.4" y="469" width="0.3" height="15.0" fill="rgb(250,55,11)" rx="2" ry="2" />
<text  x="961.44" y="479.5" ></text>
</g>
<g >
<title>tcmalloc::ThreadCache::Allocate (20 samples, 0.02%)</title><rect x="1139.3" y="485" width="0.2" height="15.0" fill="rgb(236,35,7)" rx="2" ry="2" />
<text  x="1142.30" y="495.5" ></text>
</g>
<g >
<title>EVP_DigestUpdate (17 samples, 0.02%)</title><rect x="101.7" y="517" width="0.2" height="15.0" fill="rgb(219,40,20)" rx="2" ry="2" />
<text  x="104.71" y="527.5" ></text>
</g>
<g >
<title>rb2::Cipherer::encrypt (18 samples, 0.02%)</title><rect x="833.0" y="517" width="0.2" height="15.0" fill="rgb(241,54,17)" rx="2" ry="2" />
<text  x="835.97" y="527.5" ></text>
</g>
<g >
<title>[libpthread-2.17.so] (156 samples, 0.14%)</title><rect x="128.5" y="517" width="1.7" height="15.0" fill="rgb(219,204,2)" rx="2" ry="2" />
<text  x="131.54" y="527.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1,045 samples, 0.97%)</title><rect x="393.8" y="437" width="11.4" height="15.0" fill="rgb(220,112,25)" rx="2" ry="2" />
<text  x="396.77" y="447.5" ></text>
</g>
<g >
<title>.LC1 (11 samples, 0.01%)</title><rect x="17.8" y="517" width="0.1" height="15.0" fill="rgb(211,55,3)" rx="2" ry="2" />
<text  x="20.80" y="527.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, std::map&lt;unsigned int, double, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, double&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int const, std::map&lt;unsigned int, double, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, double&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (44 samples, 0.04%)</title><rect x="410.3" y="469" width="0.4" height="15.0" fill="rgb(221,210,15)" rx="2" ry="2" />
<text  x="413.26" y="479.5" ></text>
</g>
<g >
<title>rb::unparse_url_get_params (61 samples, 0.06%)</title><rect x="678.6" y="485" width="0.7" height="15.0" fill="rgb(246,145,30)" rx="2" ry="2" />
<text  x="681.65" y="495.5" ></text>
</g>
<g >
<title>perf_event_update_userpage (26 samples, 0.02%)</title><rect x="301.4" y="245" width="0.3" height="15.0" fill="rgb(217,70,51)" rx="2" ry="2" />
<text  x="304.45" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Insert_base&lt;target::dynamic_bitset, target::dynamic_bitset, std::allocator&lt;target::dynamic_bitset&gt;, std::__detail::_Identity, std::equal_to&lt;target::dynamic_bitset&gt;, std::hash&lt;target::dynamic_bitset&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::insert (205 samples, 0.19%)</title><rect x="439.5" y="485" width="2.3" height="15.0" fill="rgb(219,73,27)" rx="2" ry="2" />
<text  x="442.54" y="495.5" ></text>
</g>
<g >
<title>__schedule (51 samples, 0.05%)</title><rect x="293.5" y="421" width="0.5" height="15.0" fill="rgb(210,109,40)" rx="2" ry="2" />
<text  x="296.46" y="431.5" ></text>
</g>
<g >
<title>task_work_run (13 samples, 0.01%)</title><rect x="630.3" y="453" width="0.1" height="15.0" fill="rgb(208,154,39)" rx="2" ry="2" />
<text  x="633.26" y="463.5" ></text>
</g>
<g >
<title>x86_pmu_enable (49 samples, 0.05%)</title><rect x="128.9" y="357" width="0.5" height="15.0" fill="rgb(219,195,48)" rx="2" ry="2" />
<text  x="131.87" y="367.5" ></text>
</g>
<g >
<title>finish_task_switch (10 samples, 0.01%)</title><rect x="134.0" y="373" width="0.1" height="15.0" fill="rgb(216,74,44)" rx="2" ry="2" />
<text  x="136.96" y="383.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::WriteTagToArray (25 samples, 0.02%)</title><rect x="1161.9" y="485" width="0.3" height="15.0" fill="rgb(209,144,17)" rx="2" ry="2" />
<text  x="1164.92" y="495.5" ></text>
</g>
<g >
<title>int_signal (14 samples, 0.01%)</title><rect x="630.3" y="485" width="0.1" height="15.0" fill="rgb(220,105,28)" rx="2" ry="2" />
<text  x="633.25" y="495.5" ></text>
</g>
<g >
<title>__fput (11 samples, 0.01%)</title><rect x="630.3" y="421" width="0.1" height="15.0" fill="rgb(247,220,28)" rx="2" ry="2" />
<text  x="633.26" y="431.5" ></text>
</g>
<g >
<title>sys_futex (739 samples, 0.69%)</title><rect x="174.3" y="485" width="8.1" height="15.0" fill="rgb(230,68,11)" rx="2" ry="2" />
<text  x="177.26" y="495.5" ></text>
</g>
<g >
<title>skb_page_frag_refill (12 samples, 0.01%)</title><rect x="283.6" y="389" width="0.1" height="15.0" fill="rgb(251,4,8)" rx="2" ry="2" />
<text  x="286.59" y="399.5" ></text>
</g>
<g >
<title>std::advance&lt;__gnu_cxx::__normal_iterator&lt;bannerd::details::InternalStorage::Record const*, std::vector&lt;bannerd::details::InternalStorage::Record, std::allocator&lt;bannerd::details::InternalStorage::Record&gt; &gt; &gt;, long&gt; (16 samples, 0.01%)</title><rect x="381.2" y="469" width="0.1" height="15.0" fill="rgb(207,67,38)" rx="2" ry="2" />
<text  x="384.15" y="479.5" ></text>
</g>
<g >
<title>tcp_transmit_skb (62 samples, 0.06%)</title><rect x="284.2" y="357" width="0.7" height="15.0" fill="rgb(228,136,4)" rx="2" ry="2" />
<text  x="287.24" y="367.5" ></text>
</g>
<g >
<title>std::string::capacity (26 samples, 0.02%)</title><rect x="968.9" y="469" width="0.2" height="15.0" fill="rgb(215,184,3)" rx="2" ry="2" />
<text  x="971.86" y="479.5" ></text>
</g>
<g >
<title>getprocBannerOrFormat (13 samples, 0.01%)</title><rect x="698.1" y="517" width="0.2" height="15.0" fill="rgb(212,171,27)" rx="2" ry="2" />
<text  x="701.12" y="527.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::operator-= (56 samples, 0.05%)</title><rect x="1098.9" y="501" width="0.6" height="15.0" fill="rgb(243,109,44)" rx="2" ry="2" />
<text  x="1101.87" y="511.5" ></text>
</g>
<g >
<title>genEventMsg (152 samples, 0.14%)</title><rect x="684.7" y="517" width="1.6" height="15.0" fill="rgb(230,172,4)" rx="2" ry="2" />
<text  x="687.65" y="527.5" ></text>
</g>
<g >
<title>sys_futex (62 samples, 0.06%)</title><rect x="852.8" y="437" width="0.7" height="15.0" fill="rgb(213,84,47)" rx="2" ry="2" />
<text  x="855.85" y="447.5" ></text>
</g>
<g >
<title>smp_call_function_single_interrupt (18 samples, 0.02%)</title><rect x="802.3" y="485" width="0.2" height="15.0" fill="rgb(209,167,11)" rx="2" ry="2" />
<text  x="805.26" y="495.5" ></text>
</g>
<g >
<title>audit_filter_inodes (17 samples, 0.02%)</title><rect x="170.6" y="469" width="0.1" height="15.0" fill="rgb(234,20,34)" rx="2" ry="2" />
<text  x="173.56" y="479.5" ></text>
</g>
<g >
<title>sys_futex (139 samples, 0.13%)</title><rect x="289.7" y="485" width="1.5" height="15.0" fill="rgb(219,54,31)" rx="2" ry="2" />
<text  x="292.72" y="495.5" ></text>
</g>
<g >
<title>std::__advance&lt;__gnu_cxx::__normal_iterator&lt;bannerd::details::InternalStorage::Record const*, std::vector&lt;bannerd::details::InternalStorage::Record, std::allocator&lt;bannerd::details::InternalStorage::Record&gt; &gt; &gt;, long&gt; (19 samples, 0.02%)</title><rect x="392.3" y="453" width="0.2" height="15.0" fill="rgb(231,110,44)" rx="2" ry="2" />
<text  x="395.33" y="463.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_set_length_and_sharable (141 samples, 0.13%)</title><rect x="963.1" y="501" width="1.5" height="15.0" fill="rgb(249,195,14)" rx="2" ry="2" />
<text  x="966.05" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;target::dynamic_bitset, target::dynamic_bitset, std::__detail::_Identity, std::hash&lt;target::dynamic_bitset&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (97 samples, 0.09%)</title><rect x="440.7" y="453" width="1.1" height="15.0" fill="rgb(211,26,29)" rx="2" ry="2" />
<text  x="443.73" y="463.5" ></text>
</g>
<g >
<title>trg::tarantool_client::epoll_context::prepare (103 samples, 0.10%)</title><rect x="1165.5" y="501" width="1.2" height="15.0" fill="rgb(252,156,54)" rx="2" ry="2" />
<text  x="1168.54" y="511.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (18 samples, 0.02%)</title><rect x="802.3" y="453" width="0.2" height="15.0" fill="rgb(250,128,42)" rx="2" ry="2" />
<text  x="805.26" y="463.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_wrlock (29 samples, 0.03%)</title><rect x="893.6" y="485" width="0.3" height="15.0" fill="rgb(212,161,33)" rx="2" ry="2" />
<text  x="896.62" y="495.5" ></text>
</g>
<g >
<title>getprocGenEventMsg (105 samples, 0.10%)</title><rect x="669.4" y="501" width="1.1" height="15.0" fill="rgb(249,59,42)" rx="2" ry="2" />
<text  x="672.39" y="511.5" ></text>
</g>
<g >
<title>nmi (23 samples, 0.02%)</title><rect x="801.6" y="485" width="0.3" height="15.0" fill="rgb(206,215,3)" rx="2" ry="2" />
<text  x="804.65" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;bannerd::details::InternalStorage::Record const*, std::vector&lt;bannerd::details::InternalStorage::Record, std::allocator&lt;bannerd::details::InternalStorage::Record&gt; &gt; &gt;::operator+= (19 samples, 0.02%)</title><rect x="392.3" y="437" width="0.2" height="15.0" fill="rgb(208,193,37)" rx="2" ry="2" />
<text  x="395.33" y="447.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (11 samples, 0.01%)</title><rect x="127.2" y="501" width="0.2" height="15.0" fill="rgb(220,122,39)" rx="2" ry="2" />
<text  x="130.24" y="511.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (27 samples, 0.03%)</title><rect x="681.1" y="469" width="0.3" height="15.0" fill="rgb(245,206,49)" rx="2" ry="2" />
<text  x="684.15" y="479.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (10 samples, 0.01%)</title><rect x="702.6" y="437" width="0.1" height="15.0" fill="rgb(223,11,49)" rx="2" ry="2" />
<text  x="705.62" y="447.5" ></text>
</g>
<g >
<title>do_free_with_callback (11 samples, 0.01%)</title><rect x="164.4" y="453" width="0.1" height="15.0" fill="rgb(249,135,18)" rx="2" ry="2" />
<text  x="167.35" y="463.5" ></text>
</g>
<g >
<title>tcmalloc::SLL_Next (10 samples, 0.01%)</title><rect x="280.8" y="421" width="0.1" height="15.0" fill="rgb(207,31,0)" rx="2" ry="2" />
<text  x="283.79" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long long, target::dynamic_bitset::AlignedAllocator&lt;unsigned long long&gt; &gt;::operator[] (116 samples, 0.11%)</title><rect x="1092.8" y="437" width="1.3" height="15.0" fill="rgb(243,48,44)" rx="2" ry="2" />
<text  x="1095.84" y="447.5" ></text>
</g>
<g >
<title>BN_sub (12 samples, 0.01%)</title><rect x="80.9" y="517" width="0.1" height="15.0" fill="rgb(206,81,23)" rx="2" ry="2" />
<text  x="83.88" y="527.5" ></text>
</g>
<g >
<title>CRYPTO_lock (156 samples, 0.14%)</title><rect x="90.4" y="501" width="1.7" height="15.0" fill="rgb(232,112,7)" rx="2" ry="2" />
<text  x="93.44" y="511.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (34 samples, 0.03%)</title><rect x="685.0" y="373" width="0.4" height="15.0" fill="rgb(247,68,37)" rx="2" ry="2" />
<text  x="688.01" y="383.5" ></text>
</g>
<g >
<title>sys_futex (19 samples, 0.02%)</title><rect x="169.0" y="485" width="0.2" height="15.0" fill="rgb(218,107,14)" rx="2" ry="2" />
<text  x="172.04" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;target::dynamic_bitset::AlignedAllocator&lt;unsigned long long&gt; &gt;::construct&lt;unsigned long long, unsigned long long const&amp;&gt; (64 samples, 0.06%)</title><rect x="980.0" y="485" width="0.7" height="15.0" fill="rgb(244,185,51)" rx="2" ry="2" />
<text  x="983.00" y="495.5" ></text>
</g>
<g >
<title>joinPositiveFilters (67 samples, 0.06%)</title><rect x="431.3" y="469" width="0.8" height="15.0" fill="rgb(251,121,2)" rx="2" ry="2" />
<text  x="434.33" y="479.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, bannerd::engine::BannerProductsInfo, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, bannerd::engine::BannerProductsInfo&gt; &gt; &gt;::find (31 samples, 0.03%)</title><rect x="689.0" y="501" width="0.4" height="15.0" fill="rgb(213,154,44)" rx="2" ry="2" />
<text  x="692.01" y="511.5" ></text>
</g>
<g >
<title>std::string::resize (20 samples, 0.02%)</title><rect x="154.9" y="469" width="0.2" height="15.0" fill="rgb(251,135,36)" rx="2" ry="2" />
<text  x="157.87" y="479.5" ></text>
</g>
<g >
<title>trg::time::format_to_ms (28 samples, 0.03%)</title><rect x="1169.8" y="517" width="0.3" height="15.0" fill="rgb(221,49,9)" rx="2" ry="2" />
<text  x="1172.81" y="527.5" ></text>
</g>
<g >
<title>xfs_file_aio_write (15 samples, 0.01%)</title><rect x="133.8" y="421" width="0.2" height="15.0" fill="rgb(241,0,44)" rx="2" ry="2" />
<text  x="136.80" y="431.5" ></text>
</g>
<g >
<title>CRYPTO_add_lock (173 samples, 0.16%)</title><rect x="90.3" y="517" width="1.9" height="15.0" fill="rgb(248,87,16)" rx="2" ry="2" />
<text  x="93.26" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;bannerd::details::InternalStorage::Record const*, std::vector&lt;bannerd::details::InternalStorage::Record, std::allocator&lt;bannerd::details::InternalStorage::Record&gt; &gt; &gt;::operator+= (16 samples, 0.01%)</title><rect x="381.2" y="437" width="0.1" height="15.0" fill="rgb(239,143,24)" rx="2" ry="2" />
<text  x="384.15" y="447.5" ></text>
</g>
<g >
<title>sys_futex (27 samples, 0.03%)</title><rect x="318.8" y="357" width="0.3" height="15.0" fill="rgb(209,127,41)" rx="2" ry="2" />
<text  x="321.80" y="367.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (150 samples, 0.14%)</title><rect x="966.1" y="469" width="1.7" height="15.0" fill="rgb(253,123,13)" rx="2" ry="2" />
<text  x="969.11" y="479.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (82 samples, 0.08%)</title><rect x="840.7" y="469" width="0.9" height="15.0" fill="rgb(220,182,52)" rx="2" ry="2" />
<text  x="843.66" y="479.5" ></text>
</g>
<g >
<title>do_futex (181 samples, 0.17%)</title><rect x="896.0" y="437" width="1.9" height="15.0" fill="rgb(205,79,48)" rx="2" ry="2" />
<text  x="898.96" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;bannerd::engine::CacheTask, std::allocator&lt;bannerd::engine::CacheTask&gt; &gt;::empty (14 samples, 0.01%)</title><rect x="322.2" y="501" width="0.1" height="15.0" fill="rgb(224,152,19)" rx="2" ry="2" />
<text  x="325.15" y="511.5" ></text>
</g>
<g >
<title>__schedule (25 samples, 0.02%)</title><rect x="194.9" y="373" width="0.3" height="15.0" fill="rgb(212,122,25)" rx="2" ry="2" />
<text  x="197.90" y="383.5" ></text>
</g>
<g >
<title>target::cpm2ppe (19 samples, 0.02%)</title><rect x="1094.1" y="517" width="0.2" height="15.0" fill="rgb(243,11,19)" rx="2" ry="2" />
<text  x="1097.11" y="527.5" ></text>
</g>
<g >
<title>find (16 samples, 0.01%)</title><rect x="426.3" y="485" width="0.2" height="15.0" fill="rgb(235,120,31)" rx="2" ry="2" />
<text  x="429.32" y="495.5" ></text>
</g>
<g >
<title>all&lt;std::tuple&lt;bannerd::Content, bannerd::Setting, bannerd::Textblock, bannerd::Url&gt;, bannerd::BannerPatternEx::isCompliant (30 samples, 0.03%)</title><rect x="314.3" y="485" width="0.3" height="15.0" fill="rgb(221,117,20)" rx="2" ry="2" />
<text  x="317.32" y="495.5" ></text>
</g>
<g >
<title>native_rw_unlock (65 samples, 0.06%)</title><rect x="29.9" y="453" width="0.7" height="15.0" fill="rgb(228,155,10)" rx="2" ry="2" />
<text  x="32.86" y="463.5" ></text>
</g>
<g >
<title>bannerd::Engine::miner (15 samples, 0.01%)</title><rect x="322.9" y="517" width="0.2" height="15.0" fill="rgb(212,154,45)" rx="2" ry="2" />
<text  x="325.92" y="527.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt; &gt; (64 samples, 0.06%)</title><rect x="700.3" y="421" width="0.8" height="15.0" fill="rgb(232,152,53)" rx="2" ry="2" />
<text  x="703.35" y="431.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::set (100 samples, 0.09%)</title><rect x="1111.3" y="517" width="1.1" height="15.0" fill="rgb(205,27,8)" rx="2" ry="2" />
<text  x="1114.28" y="527.5" ></text>
</g>
<g >
<title>system_call_fastpath (12 samples, 0.01%)</title><rect x="307.9" y="501" width="0.2" height="15.0" fill="rgb(210,152,23)" rx="2" ry="2" />
<text  x="310.93" y="511.5" ></text>
</g>
<g >
<title>__strcspn_sse42 (35 samples, 0.03%)</title><rect x="814.7" y="501" width="0.4" height="15.0" fill="rgb(232,156,51)" rx="2" ry="2" />
<text  x="817.67" y="511.5" ></text>
</g>
<g >
<title>tcmalloc::CentralFreeList::FetchFromOneSpans (92 samples, 0.09%)</title><rect x="1144.1" y="501" width="1.0" height="15.0" fill="rgb(251,160,28)" rx="2" ry="2" />
<text  x="1147.06" y="511.5" ></text>
</g>
<g >
<title>fix (40 samples, 0.04%)</title><rect x="435.9" y="501" width="0.4" height="15.0" fill="rgb(229,147,0)" rx="2" ry="2" />
<text  x="438.85" y="511.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (12 samples, 0.01%)</title><rect x="949.5" y="501" width="0.2" height="15.0" fill="rgb(232,197,48)" rx="2" ry="2" />
<text  x="952.55" y="511.5" ></text>
</g>
<g >
<title>tcmalloc::SLL_PopRange (57 samples, 0.05%)</title><rect x="1147.4" y="485" width="0.6" height="15.0" fill="rgb(206,86,32)" rx="2" ry="2" />
<text  x="1150.39" y="495.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (65 samples, 0.06%)</title><rect x="656.1" y="357" width="0.7" height="15.0" fill="rgb(227,155,53)" rx="2" ry="2" />
<text  x="659.06" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;bannerd::UrlLimitsIndex::Key, std::pair&lt;bannerd::UrlLimitsIndex::Key const, std::vector&lt;bannerd::UrlObjectLimitEx const*, std::allocator&lt;bannerd::UrlObjectLimitEx const*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;bannerd::UrlLimitsIndex::Key const, std::vector&lt;bannerd::UrlObjectLimitEx const*, std::allocator&lt;bannerd::UrlObjectLimitEx const*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;bannerd::UrlLimitsIndex::Key&gt;, bannerd::UrlLimitsIndex::KeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (154 samples, 0.14%)</title><rect x="917.9" y="517" width="1.7" height="15.0" fill="rgb(215,222,19)" rx="2" ry="2" />
<text  x="920.93" y="527.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::dynamic_bitset (34 samples, 0.03%)</title><rect x="830.7" y="485" width="0.4" height="15.0" fill="rgb(218,81,10)" rx="2" ry="2" />
<text  x="833.71" y="495.5" ></text>
</g>
<g >
<title>ip_queue_xmit (12 samples, 0.01%)</title><rect x="284.9" y="357" width="0.2" height="15.0" fill="rgb(226,226,22)" rx="2" ry="2" />
<text  x="287.94" y="367.5" ></text>
</g>
<g >
<title>visit_groups_merge (126 samples, 0.12%)</title><rect x="300.4" y="325" width="1.4" height="15.0" fill="rgb(230,117,33)" rx="2" ry="2" />
<text  x="303.41" y="335.5" ></text>
</g>
<g >
<title>getprocInclude (204 samples, 0.19%)</title><rect x="699.6" y="517" width="2.3" height="15.0" fill="rgb(212,79,38)" rx="2" ry="2" />
<text  x="702.62" y="527.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (44 samples, 0.04%)</title><rect x="293.5" y="389" width="0.5" height="15.0" fill="rgb(246,152,24)" rx="2" ry="2" />
<text  x="296.49" y="399.5" ></text>
</g>
<g >
<title>boost::container::dtl::flat_tree&lt;unsigned int, boost::move_detail::identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, boost::container::new_allocator&lt;unsigned int&gt; &gt;::priv_lower_bound&lt;boost::container::vec_iterator&lt;unsigned int*, true&gt; &gt; (20 samples, 0.02%)</title><rect x="412.1" y="453" width="0.2" height="15.0" fill="rgb(253,151,35)" rx="2" ry="2" />
<text  x="415.07" y="463.5" ></text>
</g>
<g >
<title>getproc (751 samples, 0.70%)</title><rect x="689.9" y="517" width="8.2" height="15.0" fill="rgb(224,157,13)" rx="2" ry="2" />
<text  x="692.89" y="527.5" ></text>
</g>
<g >
<title>audit_filter_syscall (16 samples, 0.01%)</title><rect x="287.9" y="469" width="0.2" height="15.0" fill="rgb(207,35,19)" rx="2" ry="2" />
<text  x="290.88" y="479.5" ></text>
</g>
<g >
<title>nmi (36 samples, 0.03%)</title><rect x="84.8" y="501" width="0.4" height="15.0" fill="rgb(219,172,54)" rx="2" ry="2" />
<text  x="87.81" y="511.5" ></text>
</g>
<g >
<title>SYSC_sendto (37 samples, 0.03%)</title><rect x="1164.3" y="453" width="0.4" height="15.0" fill="rgb(248,229,11)" rx="2" ry="2" />
<text  x="1167.26" y="463.5" ></text>
</g>
<g >
<title>__schedule (41 samples, 0.04%)</title><rect x="308.2" y="405" width="0.5" height="15.0" fill="rgb(236,105,1)" rx="2" ry="2" />
<text  x="311.22" y="415.5" ></text>
</g>
<g >
<title>ip_local_deliver (18 samples, 0.02%)</title><rect x="992.8" y="245" width="0.2" height="15.0" fill="rgb(248,218,5)" rx="2" ry="2" />
<text  x="995.82" y="255.5" ></text>
</g>
<g >
<title>rapidjson::GenericValue&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::CrtAllocator&gt;::FindMember&lt;rapidjson::CrtAllocator&gt; (82 samples, 0.08%)</title><rect x="1149.7" y="501" width="0.9" height="15.0" fill="rgb(232,78,24)" rx="2" ry="2" />
<text  x="1152.71" y="511.5" ></text>
</g>
<g >
<title>boost::container::dtl::flat_tree&lt;unsigned int, boost::move_detail::identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, boost::container::new_allocator&lt;unsigned int&gt; &gt;::find (23 samples, 0.02%)</title><rect x="412.0" y="485" width="0.3" height="15.0" fill="rgb(220,131,33)" rx="2" ry="2" />
<text  x="415.03" y="495.5" ></text>
</g>
<g >
<title>nmi (1,028 samples, 0.95%)</title><rect x="265.9" y="501" width="11.2" height="15.0" fill="rgb(236,178,32)" rx="2" ry="2" />
<text  x="268.88" y="511.5" ></text>
</g>
<g >
<title>do_free_with_callback (212 samples, 0.20%)</title><rect x="1123.5" y="469" width="2.3" height="15.0" fill="rgb(210,26,14)" rx="2" ry="2" />
<text  x="1126.45" y="479.5" ></text>
</g>
<g >
<title>std::fill&lt;__gnu_cxx::__normal_iterator&lt;unsigned long long*, std::vector&lt;unsigned long long, target::dynamic_bitset::AlignedAllocator&lt;unsigned long long&gt; &gt; &gt;, unsigned long&gt; (226 samples, 0.21%)</title><rect x="436.7" y="453" width="2.5" height="15.0" fill="rgb(216,111,45)" rx="2" ry="2" />
<text  x="439.72" y="463.5" ></text>
</g>
<g >
<title>futex_wait (133 samples, 0.12%)</title><rect x="320.0" y="341" width="1.5" height="15.0" fill="rgb(208,206,40)" rx="2" ry="2" />
<text  x="323.02" y="351.5" ></text>
</g>
<g >
<title>native_write_msr_safe (31 samples, 0.03%)</title><rect x="129.0" y="309" width="0.4" height="15.0" fill="rgb(235,163,20)" rx="2" ry="2" />
<text  x="132.03" y="319.5" ></text>
</g>
<g >
<title>idle_balance (23 samples, 0.02%)</title><rect x="147.0" y="373" width="0.2" height="15.0" fill="rgb(208,36,41)" rx="2" ry="2" />
<text  x="149.98" y="383.5" ></text>
</g>
<g >
<title>bn_sub_words (283 samples, 0.26%)</title><rect x="626.2" y="517" width="3.1" height="15.0" fill="rgb(251,155,19)" rx="2" ry="2" />
<text  x="629.19" y="527.5" ></text>
</g>
<g >
<title>EVP_DigestInit_ex (155 samples, 0.14%)</title><rect x="100.0" y="517" width="1.7" height="15.0" fill="rgb(238,160,2)" rx="2" ry="2" />
<text  x="103.01" y="527.5" ></text>
</g>
<g >
<title>FilterMobileCategoryIndex (29 samples, 0.03%)</title><rect x="104.1" y="517" width="0.3" height="15.0" fill="rgb(207,186,22)" rx="2" ry="2" />
<text  x="107.11" y="527.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (72 samples, 0.07%)</title><rect x="969.7" y="501" width="0.7" height="15.0" fill="rgb(210,56,7)" rx="2" ry="2" />
<text  x="972.66" y="511.5" ></text>
</g>
<g >
<title>__GI___vsnprintf_chk (13 samples, 0.01%)</title><rect x="833.9" y="485" width="0.1" height="15.0" fill="rgb(217,191,48)" rx="2" ry="2" />
<text  x="836.88" y="495.5" ></text>
</g>
<g >
<title>__GI___vsnprintf_chk (12 samples, 0.01%)</title><rect x="833.7" y="469" width="0.2" height="15.0" fill="rgb(245,102,0)" rx="2" ry="2" />
<text  x="836.74" y="479.5" ></text>
</g>
<g >
<title>system_call_fastpath (63 samples, 0.06%)</title><rect x="852.8" y="453" width="0.7" height="15.0" fill="rgb(217,86,3)" rx="2" ry="2" />
<text  x="855.84" y="463.5" ></text>
</g>
<g >
<title>queued_spin_lock_slowpath (28 samples, 0.03%)</title><rect x="897.4" y="357" width="0.3" height="15.0" fill="rgb(229,146,9)" rx="2" ry="2" />
<text  x="900.41" y="367.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::find_next (167 samples, 0.16%)</title><rect x="1094.4" y="517" width="1.9" height="15.0" fill="rgb(229,153,32)" rx="2" ry="2" />
<text  x="1097.43" y="527.5" ></text>
</g>
<g >
<title>operator-= (55 samples, 0.05%)</title><rect x="431.3" y="437" width="0.6" height="15.0" fill="rgb(212,109,23)" rx="2" ry="2" />
<text  x="434.33" y="447.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (85 samples, 0.08%)</title><rect x="187.8" y="373" width="0.9" height="15.0" fill="rgb(212,6,13)" rx="2" ry="2" />
<text  x="190.76" y="383.5" ></text>
</g>
<g >
<title>BN_STACK_pop (18 samples, 0.02%)</title><rect x="21.4" y="501" width="0.2" height="15.0" fill="rgb(219,94,21)" rx="2" ry="2" />
<text  x="24.45" y="511.5" ></text>
</g>
<g >
<title>iomap_write_actor (14 samples, 0.01%)</title><rect x="277.5" y="357" width="0.2" height="15.0" fill="rgb(243,142,26)" rx="2" ry="2" />
<text  x="280.50" y="367.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (13 samples, 0.01%)</title><rect x="1164.4" y="245" width="0.2" height="15.0" fill="rgb(254,181,10)" rx="2" ry="2" />
<text  x="1167.43" y="255.5" ></text>
</g>
<g >
<title>trg::protobuf::rb2::TargetMsg::SharedCtor (49 samples, 0.05%)</title><rect x="1162.4" y="517" width="0.6" height="15.0" fill="rgb(218,41,5)" rx="2" ry="2" />
<text  x="1165.43" y="527.5" ></text>
</g>
<g >
<title>std::string::compare (23 samples, 0.02%)</title><rect x="382.1" y="341" width="0.3" height="15.0" fill="rgb(242,148,25)" rx="2" ry="2" />
<text  x="385.13" y="351.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::WriteUInt32ToArray (43 samples, 0.04%)</title><rect x="1161.9" y="501" width="0.5" height="15.0" fill="rgb(225,26,9)" rx="2" ry="2" />
<text  x="1164.92" y="511.5" ></text>
</g>
<g >
<title>update_process_times (15 samples, 0.01%)</title><rect x="802.1" y="389" width="0.1" height="15.0" fill="rgb(220,222,12)" rx="2" ry="2" />
<text  x="805.07" y="399.5" ></text>
</g>
<g >
<title>openssl_lock (157 samples, 0.15%)</title><rect x="631.6" y="485" width="1.7" height="15.0" fill="rgb(254,188,2)" rx="2" ry="2" />
<text  x="634.57" y="495.5" ></text>
</g>
<g >
<title>sk_num (12 samples, 0.01%)</title><rect x="885.5" y="517" width="0.1" height="15.0" fill="rgb(229,167,42)" rx="2" ry="2" />
<text  x="888.51" y="527.5" ></text>
</g>
<g >
<title>nmi (13 samples, 0.01%)</title><rect x="333.2" y="485" width="0.1" height="15.0" fill="rgb(221,43,43)" rx="2" ry="2" />
<text  x="336.19" y="495.5" ></text>
</g>
<g >
<title>perf_pmu_enable (49 samples, 0.05%)</title><rect x="146.3" y="341" width="0.5" height="15.0" fill="rgb(215,74,49)" rx="2" ry="2" />
<text  x="149.28" y="351.5" ></text>
</g>
<g >
<title>int_free_ex_data (66 samples, 0.06%)</title><rect x="806.6" y="517" width="0.8" height="15.0" fill="rgb(230,87,40)" rx="2" ry="2" />
<text  x="809.63" y="527.5" ></text>
</g>
<g >
<title>tick_sched_handle (20 samples, 0.02%)</title><rect x="265.5" y="405" width="0.2" height="15.0" fill="rgb(251,130,1)" rx="2" ry="2" />
<text  x="268.51" y="415.5" ></text>
</g>
<g >
<title>ASN1_item_ex_d2i (60 samples, 0.06%)</title><rect x="19.7" y="517" width="0.6" height="15.0" fill="rgb(218,21,29)" rx="2" ry="2" />
<text  x="22.68" y="527.5" ></text>
</g>
<g >
<title>local_apic_timer_interrupt (30 samples, 0.03%)</title><rect x="265.5" y="469" width="0.3" height="15.0" fill="rgb(254,122,39)" rx="2" ry="2" />
<text  x="268.45" y="479.5" ></text>
</g>
<g >
<title>BN_rshift1 (205 samples, 0.19%)</title><rect x="76.8" y="517" width="2.3" height="15.0" fill="rgb(251,169,4)" rx="2" ry="2" />
<text  x="79.85" y="527.5" ></text>
</g>
<g >
<title>hmac_sha1 (35 samples, 0.03%)</title><rect x="708.5" y="517" width="0.3" height="15.0" fill="rgb(230,217,19)" rx="2" ry="2" />
<text  x="711.46" y="527.5" ></text>
</g>
<g >
<title>bannerd::UserEventsFiltered::iterator::findNext (10 samples, 0.01%)</title><rect x="409.7" y="469" width="0.1" height="15.0" fill="rgb(207,213,2)" rx="2" ry="2" />
<text  x="412.67" y="479.5" ></text>
</g>
<g >
<title>rb::parse_url_get_params (465 samples, 0.43%)</title><rect x="679.3" y="501" width="5.1" height="15.0" fill="rgb(237,214,46)" rx="2" ry="2" />
<text  x="682.32" y="511.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (55 samples, 0.05%)</title><rect x="949.1" y="517" width="0.6" height="15.0" fill="rgb(244,49,25)" rx="2" ry="2" />
<text  x="952.07" y="527.5" ></text>
</g>
<g >
<title>bn_expand_internal (67 samples, 0.06%)</title><rect x="445.8" y="517" width="0.7" height="15.0" fill="rgb(247,224,37)" rx="2" ry="2" />
<text  x="448.79" y="527.5" ></text>
</g>
<g >
<title>ASN1_item_ex_new (19 samples, 0.02%)</title><rect x="20.3" y="517" width="0.2" height="15.0" fill="rgb(206,2,32)" rx="2" ry="2" />
<text  x="23.34" y="527.5" ></text>
</g>
<g >
<title>system_call_after_swapgs (22 samples, 0.02%)</title><rect x="134.9" y="485" width="0.3" height="15.0" fill="rgb(232,42,11)" rx="2" ry="2" />
<text  x="137.93" y="495.5" ></text>
</g>
<g >
<title>__GI___strndup (61 samples, 0.06%)</title><rect x="191.0" y="517" width="0.6" height="15.0" fill="rgb(244,35,41)" rx="2" ry="2" />
<text  x="193.98" y="527.5" ></text>
</g>
<g >
<title>trg::protobuf::bannerd::BannerLimitMsg::~BannerLimitMsg (46 samples, 0.04%)</title><rect x="1152.1" y="517" width="0.5" height="15.0" fill="rgb(233,144,49)" rx="2" ry="2" />
<text  x="1155.13" y="527.5" ></text>
</g>
<g >
<title>bannerd::store::ActiveCampaignIndex::setPadFilters (10 samples, 0.01%)</title><rect x="431.5" y="405" width="0.1" height="15.0" fill="rgb(213,220,27)" rx="2" ry="2" />
<text  x="434.52" y="415.5" ></text>
</g>
<g >
<title>system_call_fastpath (153 samples, 0.14%)</title><rect x="898.7" y="469" width="1.7" height="15.0" fill="rgb(209,51,22)" rx="2" ry="2" />
<text  x="901.71" y="479.5" ></text>
</g>
<g >
<title>intel_pmu_hw_config (20 samples, 0.02%)</title><rect x="141.3" y="309" width="0.3" height="15.0" fill="rgb(241,147,41)" rx="2" ry="2" />
<text  x="144.34" y="319.5" ></text>
</g>
<g >
<title>system_call_fastpath (150 samples, 0.14%)</title><rect x="128.6" y="501" width="1.6" height="15.0" fill="rgb(251,133,17)" rx="2" ry="2" />
<text  x="131.61" y="511.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (38 samples, 0.04%)</title><rect x="319.1" y="389" width="0.4" height="15.0" fill="rgb(211,179,41)" rx="2" ry="2" />
<text  x="322.10" y="399.5" ></text>
</g>
<g >
<title>rb::stat::CollectedStat&lt;bannerd::model_calls_in_auction&gt;::commit (68 samples, 0.06%)</title><rect x="324.6" y="485" width="0.8" height="15.0" fill="rgb(212,12,17)" rx="2" ry="2" />
<text  x="327.61" y="495.5" ></text>
</g>
<g >
<title>tcp_recvmsg (19 samples, 0.02%)</title><rect x="281.7" y="421" width="0.2" height="15.0" fill="rgb(214,201,7)" rx="2" ry="2" />
<text  x="284.70" y="431.5" ></text>
</g>
<g >
<title>do_malloc (17 samples, 0.02%)</title><rect x="280.7" y="485" width="0.2" height="15.0" fill="rgb(230,64,40)" rx="2" ry="2" />
<text  x="283.74" y="495.5" ></text>
</g>
<g >
<title>reset&lt;profile::build_user_hateness, std::vector&lt;const bannerd::store::ActiveCampaign*&gt;, bool  (12 samples, 0.01%)</title><rect x="418.6" y="501" width="0.2" height="15.0" fill="rgb(233,124,2)" rx="2" ry="2" />
<text  x="421.62" y="511.5" ></text>
</g>
<g >
<title>__irqentry_text_start (19 samples, 0.02%)</title><rect x="613.5" y="485" width="0.2" height="15.0" fill="rgb(224,81,16)" rx="2" ry="2" />
<text  x="616.48" y="495.5" ></text>
</g>
<g >
<title>__memcpy_ssse3_back (10 samples, 0.01%)</title><rect x="163.4" y="437" width="0.1" height="15.0" fill="rgb(250,110,29)" rx="2" ry="2" />
<text  x="166.43" y="447.5" ></text>
</g>
<g >
<title>finish_task_switch (531 samples, 0.49%)</title><rect x="299.6" y="389" width="5.8" height="15.0" fill="rgb(216,70,41)" rx="2" ry="2" />
<text  x="302.57" y="399.5" ></text>
</g>
<g >
<title>bannerd::store::ActiveCampaignIndex::setPadFilters (45 samples, 0.04%)</title><rect x="429.7" y="437" width="0.4" height="15.0" fill="rgb(245,200,37)" rx="2" ry="2" />
<text  x="432.65" y="447.5" ></text>
</g>
<g >
<title>trg::protobuf::bannerd::ShowClickMsg::ByteSize (12 samples, 0.01%)</title><rect x="166.9" y="501" width="0.1" height="15.0" fill="rgb(250,225,31)" rx="2" ry="2" />
<text  x="169.91" y="511.5" ></text>
</g>
<g >
<title>__irqentry_text_start (15 samples, 0.01%)</title><rect x="277.1" y="485" width="0.2" height="15.0" fill="rgb(220,94,1)" rx="2" ry="2" />
<text  x="280.14" y="495.5" ></text>
</g>
<g >
<title>dequeue_task_fair (11 samples, 0.01%)</title><rect x="145.6" y="357" width="0.1" height="15.0" fill="rgb(230,53,39)" rx="2" ry="2" />
<text  x="148.63" y="367.5" ></text>
</g>
<g >
<title>bannerd::store::ActiveCampaignIndex::setPadFilters (15 samples, 0.01%)</title><rect x="431.2" y="469" width="0.1" height="15.0" fill="rgb(208,116,12)" rx="2" ry="2" />
<text  x="434.16" y="479.5" ></text>
</g>
<g >
<title>__memset_sse2 (21 samples, 0.02%)</title><rect x="60.9" y="501" width="0.3" height="15.0" fill="rgb(218,215,54)" rx="2" ry="2" />
<text  x="63.93" y="511.5" ></text>
</g>
<g >
<title>find_busiest_group (15 samples, 0.01%)</title><rect x="147.1" y="341" width="0.1" height="15.0" fill="rgb(223,222,52)" rx="2" ry="2" />
<text  x="150.06" y="351.5" ></text>
</g>
<g >
<title>operator (32 samples, 0.03%)</title><rect x="331.0" y="405" width="0.4" height="15.0" fill="rgb(216,57,39)" rx="2" ry="2" />
<text  x="334.05" y="415.5" ></text>
</g>
<g >
<title>ret_from_intr (19 samples, 0.02%)</title><rect x="613.5" y="501" width="0.2" height="15.0" fill="rgb(208,103,36)" rx="2" ry="2" />
<text  x="616.48" y="511.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::wideOr (154 samples, 0.14%)</title><rect x="424.1" y="485" width="1.7" height="15.0" fill="rgb(208,100,39)" rx="2" ry="2" />
<text  x="427.10" y="495.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (19 samples, 0.02%)</title><rect x="489.1" y="485" width="0.2" height="15.0" fill="rgb(214,157,13)" rx="2" ry="2" />
<text  x="492.10" y="495.5" ></text>
</g>
<g >
<title>__lower_bound&lt;const (anonymous namespace)::ProcFunction*, (anonymous namespace)::ProcFunction, __gnu_cxx::__ops::_Iter_comp_val&lt;(anonymous namespace)::findFunction (700 samples, 0.65%)</title><rect x="659.9" y="437" width="7.7" height="15.0" fill="rgb(231,62,41)" rx="2" ry="2" />
<text  x="662.88" y="447.5" ></text>
</g>
<g >
<title>xfs_trans_alloc (13 samples, 0.01%)</title><rect x="129.9" y="341" width="0.1" height="15.0" fill="rgb(215,119,13)" rx="2" ry="2" />
<text  x="132.89" y="351.5" ></text>
</g>
<g >
<title>google::protobuf::io::CodedOutputStream::VarintSize32 (40 samples, 0.04%)</title><rect x="1159.1" y="485" width="0.4" height="15.0" fill="rgb(233,183,5)" rx="2" ry="2" />
<text  x="1162.11" y="495.5" ></text>
</g>
<g >
<title>_IO_old_init (10 samples, 0.01%)</title><rect x="985.5" y="453" width="0.1" height="15.0" fill="rgb(218,54,20)" rx="2" ry="2" />
<text  x="988.49" y="463.5" ></text>
</g>
<g >
<title>do_futex (61 samples, 0.06%)</title><rect x="852.9" y="421" width="0.6" height="15.0" fill="rgb(213,43,42)" rx="2" ry="2" />
<text  x="855.86" y="431.5" ></text>
</g>
<g >
<title>nmi (14 samples, 0.01%)</title><rect x="425.6" y="453" width="0.2" height="15.0" fill="rgb(212,222,38)" rx="2" ry="2" />
<text  x="428.63" y="463.5" ></text>
</g>
<g >
<title>sys_futex (31 samples, 0.03%)</title><rect x="307.2" y="485" width="0.3" height="15.0" fill="rgb(251,13,7)" rx="2" ry="2" />
<text  x="310.21" y="495.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_wrlock (220 samples, 0.20%)</title><rect x="898.0" y="485" width="2.4" height="15.0" fill="rgb(239,156,20)" rx="2" ry="2" />
<text  x="900.97" y="495.5" ></text>
</g>
<g >
<title>update_process_times (20 samples, 0.02%)</title><rect x="598.3" y="389" width="0.2" height="15.0" fill="rgb(230,79,45)" rx="2" ry="2" />
<text  x="601.29" y="399.5" ></text>
</g>
<g >
<title>_IO_no_init (14 samples, 0.01%)</title><rect x="985.4" y="469" width="0.2" height="15.0" fill="rgb(210,154,52)" rx="2" ry="2" />
<text  x="988.44" y="479.5" ></text>
</g>
<g >
<title>RSA_public_encrypt (18 samples, 0.02%)</title><rect x="116.1" y="517" width="0.2" height="15.0" fill="rgb(208,177,5)" rx="2" ry="2" />
<text  x="119.06" y="527.5" ></text>
</g>
<g >
<title>std::string::compare (199 samples, 0.18%)</title><rect x="159.0" y="437" width="2.2" height="15.0" fill="rgb(233,45,25)" rx="2" ry="2" />
<text  x="162.02" y="447.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (10 samples, 0.01%)</title><rect x="702.6" y="453" width="0.1" height="15.0" fill="rgb(239,175,14)" rx="2" ry="2" />
<text  x="705.62" y="463.5" ></text>
</g>
<g >
<title>__GI___strdup (26 samples, 0.02%)</title><rect x="329.9" y="501" width="0.3" height="15.0" fill="rgb(207,122,37)" rx="2" ry="2" />
<text  x="332.91" y="511.5" ></text>
</g>
<g >
<title>hash_futex (28 samples, 0.03%)</title><rect x="182.0" y="453" width="0.3" height="15.0" fill="rgb(209,121,24)" rx="2" ry="2" />
<text  x="184.97" y="463.5" ></text>
</g>
<g >
<title>std::string::_M_rep (14 samples, 0.01%)</title><rect x="161.0" y="405" width="0.2" height="15.0" fill="rgb(221,147,9)" rx="2" ry="2" />
<text  x="164.04" y="415.5" ></text>
</g>
<g >
<title>__lll_unlock_wake (388 samples, 0.36%)</title><rect x="287.0" y="517" width="4.2" height="15.0" fill="rgb(227,210,42)" rx="2" ry="2" />
<text  x="290.00" y="527.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;bannerd::Tabular const&gt;::shared_ptr (11 samples, 0.01%)</title><rect x="355.7" y="485" width="0.1" height="15.0" fill="rgb(240,223,23)" rx="2" ry="2" />
<text  x="358.68" y="495.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (17 samples, 0.02%)</title><rect x="945.3" y="469" width="0.1" height="15.0" fill="rgb(242,88,30)" rx="2" ry="2" />
<text  x="948.26" y="479.5" ></text>
</g>
<g >
<title>SpinLock::Unlock (13 samples, 0.01%)</title><rect x="1143.6" y="485" width="0.2" height="15.0" fill="rgb(254,27,17)" rx="2" ry="2" />
<text  x="1146.62" y="495.5" ></text>
</g>
<g >
<title>operator (22 samples, 0.02%)</title><rect x="667.6" y="437" width="0.2" height="15.0" fill="rgb(238,41,1)" rx="2" ry="2" />
<text  x="670.57" y="447.5" ></text>
</g>
<g >
<title>__memcpy_sse2 (18 samples, 0.02%)</title><rect x="702.2" y="501" width="0.2" height="15.0" fill="rgb(234,44,26)" rx="2" ry="2" />
<text  x="705.25" y="511.5" ></text>
</g>
<g >
<title>tcmalloc::CentralFreeList::FetchFromOneSpansSafe (85 samples, 0.08%)</title><rect x="1145.1" y="501" width="0.9" height="15.0" fill="rgb(222,50,12)" rx="2" ry="2" />
<text  x="1148.06" y="511.5" ></text>
</g>
<g >
<title>tcmalloc::ThreadCache::Allocate (16 samples, 0.01%)</title><rect x="280.3" y="485" width="0.2" height="15.0" fill="rgb(214,81,42)" rx="2" ry="2" />
<text  x="283.31" y="495.5" ></text>
</g>
<g >
<title>dev_queue_xmit (17 samples, 0.02%)</title><rect x="284.7" y="261" width="0.2" height="15.0" fill="rgb(250,184,41)" rx="2" ry="2" />
<text  x="287.68" y="271.5" ></text>
</g>
<g >
<title>sysret_audit (12 samples, 0.01%)</title><rect x="315.2" y="485" width="0.1" height="15.0" fill="rgb(225,118,45)" rx="2" ry="2" />
<text  x="318.22" y="495.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::flip (29 samples, 0.03%)</title><rect x="831.1" y="485" width="0.3" height="15.0" fill="rgb(213,41,26)" rx="2" ry="2" />
<text  x="834.08" y="495.5" ></text>
</g>
<g >
<title>__GI_epoll_ctl (23 samples, 0.02%)</title><rect x="137.9" y="501" width="0.2" height="15.0" fill="rgb(245,71,5)" rx="2" ry="2" />
<text  x="140.90" y="511.5" ></text>
</g>
<g >
<title>bannerd::engine::gp_param::var (18 samples, 0.02%)</title><rect x="689.5" y="501" width="0.1" height="15.0" fill="rgb(231,203,6)" rx="2" ry="2" />
<text  x="692.45" y="511.5" ></text>
</g>
<g >
<title>native_write_msr_safe (11 samples, 0.01%)</title><rect x="802.3" y="309" width="0.1" height="15.0" fill="rgb(231,28,52)" rx="2" ry="2" />
<text  x="805.32" y="319.5" ></text>
</g>
<g >
<title>napi_gro_receive (23 samples, 0.02%)</title><rect x="992.8" y="341" width="0.3" height="15.0" fill="rgb(237,196,34)" rx="2" ry="2" />
<text  x="995.81" y="351.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (114 samples, 0.11%)</title><rect x="682.8" y="357" width="1.3" height="15.0" fill="rgb(215,122,28)" rx="2" ry="2" />
<text  x="685.81" y="367.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (41 samples, 0.04%)</title><rect x="265.3" y="501" width="0.5" height="15.0" fill="rgb(205,110,15)" rx="2" ry="2" />
<text  x="268.33" y="511.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (54 samples, 0.05%)</title><rect x="852.9" y="389" width="0.6" height="15.0" fill="rgb(250,52,5)" rx="2" ry="2" />
<text  x="855.92" y="399.5" ></text>
</g>
<g >
<title>finish_task_switch (88 samples, 0.08%)</title><rect x="320.3" y="277" width="1.0" height="15.0" fill="rgb(211,113,27)" rx="2" ry="2" />
<text  x="323.33" y="287.5" ></text>
</g>
<g >
<title>std::chrono::_V2::system_clock::now (32 samples, 0.03%)</title><rect x="944.6" y="517" width="0.4" height="15.0" fill="rgb(237,64,32)" rx="2" ry="2" />
<text  x="947.65" y="527.5" ></text>
</g>
<g >
<title>__netif_receive_skb (12 samples, 0.01%)</title><rect x="613.5" y="325" width="0.2" height="15.0" fill="rgb(215,34,44)" rx="2" ry="2" />
<text  x="616.55" y="335.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (130 samples, 0.12%)</title><rect x="945.6" y="421" width="1.4" height="15.0" fill="rgb(234,223,19)" rx="2" ry="2" />
<text  x="948.62" y="431.5" ></text>
</g>
<g >
<title>tcmalloc::SLL_TryPop (27 samples, 0.03%)</title><rect x="944.0" y="341" width="0.3" height="15.0" fill="rgb(237,115,4)" rx="2" ry="2" />
<text  x="946.99" y="351.5" ></text>
</g>
<g >
<title>x86_pmu_enable (40 samples, 0.04%)</title><rect x="320.7" y="229" width="0.4" height="15.0" fill="rgb(209,38,41)" rx="2" ry="2" />
<text  x="323.67" y="239.5" ></text>
</g>
<g >
<title>google::protobuf::io::CodedOutputStream::VarintSize32Fallback (45 samples, 0.04%)</title><rect x="706.5" y="517" width="0.5" height="15.0" fill="rgb(212,20,18)" rx="2" ry="2" />
<text  x="709.46" y="527.5" ></text>
</g>
<g >
<title>__do_softirq (16 samples, 0.01%)</title><rect x="613.5" y="421" width="0.2" height="15.0" fill="rgb(220,151,2)" rx="2" ry="2" />
<text  x="616.51" y="431.5" ></text>
</g>
<g >
<title>do_futex (16 samples, 0.01%)</title><rect x="892.1" y="437" width="0.2" height="15.0" fill="rgb(225,188,46)" rx="2" ry="2" />
<text  x="895.09" y="447.5" ></text>
</g>
<g >
<title>nmi (11 samples, 0.01%)</title><rect x="25.1" y="501" width="0.1" height="15.0" fill="rgb(214,26,16)" rx="2" ry="2" />
<text  x="28.11" y="511.5" ></text>
</g>
<g >
<title>bannerd::store::ActiveCampaignIndex::byPad (154 samples, 0.14%)</title><rect x="424.1" y="469" width="1.7" height="15.0" fill="rgb(245,18,24)" rx="2" ry="2" />
<text  x="427.10" y="479.5" ></text>
</g>
<g >
<title>irq_exit (13 samples, 0.01%)</title><rect x="277.2" y="469" width="0.1" height="15.0" fill="rgb(246,65,13)" rx="2" ry="2" />
<text  x="280.16" y="479.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (434 samples, 0.40%)</title><rect x="662.8" y="373" width="4.8" height="15.0" fill="rgb(234,133,38)" rx="2" ry="2" />
<text  x="665.80" y="383.5" ></text>
</g>
<g >
<title>binarySearch&lt;const (anonymous namespace)::ProcFunction*, (anonymous namespace)::ProcFunction, (anonymous namespace)::findFunction (51 samples, 0.05%)</title><rect x="330.9" y="453" width="0.6" height="15.0" fill="rgb(229,125,7)" rx="2" ry="2" />
<text  x="333.90" y="463.5" ></text>
</g>
<g >
<title>try_to_wake_up (20 samples, 0.02%)</title><rect x="290.8" y="421" width="0.2" height="15.0" fill="rgb(208,88,51)" rx="2" ry="2" />
<text  x="293.79" y="431.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (23 samples, 0.02%)</title><rect x="382.1" y="357" width="0.3" height="15.0" fill="rgb(217,44,47)" rx="2" ry="2" />
<text  x="385.13" y="367.5" ></text>
</g>
<g >
<title>futex_wait (13 samples, 0.01%)</title><rect x="891.9" y="421" width="0.1" height="15.0" fill="rgb(238,126,51)" rx="2" ry="2" />
<text  x="894.87" y="431.5" ></text>
</g>
<g >
<title>nmi (10 samples, 0.01%)</title><rect x="131.6" y="485" width="0.1" height="15.0" fill="rgb(251,214,46)" rx="2" ry="2" />
<text  x="134.59" y="495.5" ></text>
</g>
<g >
<title>wake_up_q (12 samples, 0.01%)</title><rect x="856.4" y="421" width="0.2" height="15.0" fill="rgb(231,18,27)" rx="2" ry="2" />
<text  x="859.42" y="431.5" ></text>
</g>
<g >
<title>system_call_fastpath (21 samples, 0.02%)</title><rect x="853.6" y="469" width="0.2" height="15.0" fill="rgb(219,209,35)" rx="2" ry="2" />
<text  x="856.58" y="479.5" ></text>
</g>
<g >
<title>call_softirq (15 samples, 0.01%)</title><rect x="598.0" y="437" width="0.2" height="15.0" fill="rgb(234,4,19)" rx="2" ry="2" />
<text  x="601.03" y="447.5" ></text>
</g>
<g >
<title>xfs_log_commit_cil (13 samples, 0.01%)</title><rect x="277.9" y="293" width="0.1" height="15.0" fill="rgb(235,153,16)" rx="2" ry="2" />
<text  x="280.85" y="303.5" ></text>
</g>
<g >
<title>std::string::_M_replace_safe (58 samples, 0.05%)</title><rect x="971.9" y="501" width="0.7" height="15.0" fill="rgb(250,36,54)" rx="2" ry="2" />
<text  x="974.95" y="511.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (10 samples, 0.01%)</title><rect x="128.3" y="373" width="0.1" height="15.0" fill="rgb(220,109,31)" rx="2" ry="2" />
<text  x="131.33" y="383.5" ></text>
</g>
<g >
<title>rb::stat::Histogram&lt;1ul, 5001ul, 100ul, 1ul, rb::stat::Tick&gt;::commit (68 samples, 0.06%)</title><rect x="324.6" y="453" width="0.8" height="15.0" fill="rgb(243,83,12)" rx="2" ry="2" />
<text  x="327.61" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, bannerd::engine::BannerProductsInfo&gt;, std::allocator&lt;std::pair&lt;unsigned int const, bannerd::engine::BannerProductsInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (25 samples, 0.02%)</title><rect x="689.1" y="485" width="0.3" height="15.0" fill="rgb(244,174,36)" rx="2" ry="2" />
<text  x="692.08" y="495.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::string*, std::string&gt; (18 samples, 0.02%)</title><rect x="931.1" y="405" width="0.2" height="15.0" fill="rgb(207,51,7)" rx="2" ry="2" />
<text  x="934.05" y="415.5" ></text>
</g>
<g >
<title>__GI___strndup (51 samples, 0.05%)</title><rect x="669.4" y="485" width="0.6" height="15.0" fill="rgb(246,122,45)" rx="2" ry="2" />
<text  x="672.41" y="495.5" ></text>
</g>
<g >
<title>bannerd::engine::Request::UserEvents (10 samples, 0.01%)</title><rect x="407.4" y="517" width="0.1" height="15.0" fill="rgb(217,103,12)" rx="2" ry="2" />
<text  x="410.42" y="527.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (60 samples, 0.06%)</title><rect x="928.2" y="373" width="0.6" height="15.0" fill="rgb(210,160,22)" rx="2" ry="2" />
<text  x="931.18" y="383.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt; &gt; (11 samples, 0.01%)</title><rect x="685.9" y="405" width="0.1" height="15.0" fill="rgb(244,121,37)" rx="2" ry="2" />
<text  x="688.86" y="415.5" ></text>
</g>
<g >
<title>bannerd::store::ActiveCampaignIndex::setPadFilters (97 samples, 0.09%)</title><rect x="440.7" y="421" width="1.1" height="15.0" fill="rgb(248,46,39)" rx="2" ry="2" />
<text  x="443.73" y="431.5" ></text>
</g>
<g >
<title>openssl_lock_function (1,486 samples, 1.38%)</title><rect x="900.6" y="501" width="16.3" height="15.0" fill="rgb(215,190,23)" rx="2" ry="2" />
<text  x="903.59" y="511.5" ></text>
</g>
<g >
<title>bannerd::engine::TargetMessagePacker::writeAppsInstalled (15 samples, 0.01%)</title><rect x="411.2" y="517" width="0.2" height="15.0" fill="rgb(254,147,25)" rx="2" ry="2" />
<text  x="414.20" y="527.5" ></text>
</g>
<g >
<title>rb::stat::CollectedStat&lt;bannerd::request_lifetime&gt;::commit (21 samples, 0.02%)</title><rect x="1189.8" y="485" width="0.2" height="15.0" fill="rgb(229,90,47)" rx="2" ry="2" />
<text  x="1192.76" y="495.5" ></text>
</g>
<g >
<title>copy_process (354 samples, 0.33%)</title><rect x="138.2" y="437" width="3.9" height="15.0" fill="rgb(244,40,35)" rx="2" ry="2" />
<text  x="141.21" y="447.5" ></text>
</g>
<g >
<title>std::fill_n&lt;unsigned char*, unsigned long, unsigned char&gt; (25 samples, 0.02%)</title><rect x="979.2" y="453" width="0.2" height="15.0" fill="rgb(250,80,45)" rx="2" ry="2" />
<text  x="982.16" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_M_move_data (38 samples, 0.04%)</title><rect x="925.3" y="501" width="0.4" height="15.0" fill="rgb(253,106,39)" rx="2" ry="2" />
<text  x="928.31" y="511.5" ></text>
</g>
<g >
<title>native_write_msr_safe (11 samples, 0.01%)</title><rect x="853.2" y="245" width="0.2" height="15.0" fill="rgb(226,174,27)" rx="2" ry="2" />
<text  x="856.23" y="255.5" ></text>
</g>
<g >
<title>perf_pmu_disable (10 samples, 0.01%)</title><rect x="298.7" y="341" width="0.1" height="15.0" fill="rgb(227,141,31)" rx="2" ry="2" />
<text  x="301.67" y="351.5" ></text>
</g>
<g >
<title>system_call_fastpath (20 samples, 0.02%)</title><rect x="893.7" y="469" width="0.2" height="15.0" fill="rgb(218,173,1)" rx="2" ry="2" />
<text  x="896.72" y="479.5" ></text>
</g>
<g >
<title>PackedCache&lt;35&gt;::TryGet (15 samples, 0.01%)</title><rect x="281.2" y="437" width="0.2" height="15.0" fill="rgb(216,84,50)" rx="2" ry="2" />
<text  x="284.23" y="447.5" ></text>
</g>
<g >
<title>schedule (182 samples, 0.17%)</title><rect x="145.3" y="405" width="2.0" height="15.0" fill="rgb(254,137,42)" rx="2" ry="2" />
<text  x="148.34" y="415.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (132 samples, 0.12%)</title><rect x="927.5" y="405" width="1.4" height="15.0" fill="rgb(253,139,34)" rx="2" ry="2" />
<text  x="930.45" y="415.5" ></text>
</g>
<g >
<title>tc_new (11 samples, 0.01%)</title><rect x="1152.5" y="501" width="0.1" height="15.0" fill="rgb(231,24,1)" rx="2" ry="2" />
<text  x="1155.49" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, std::string&gt;, std::_Select1st&lt;std::pair&lt;std::string const, std::string&gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::_M_lower_bound (640 samples, 0.59%)</title><rect x="843.7" y="453" width="7.0" height="15.0" fill="rgb(252,2,33)" rx="2" ry="2" />
<text  x="846.69" y="463.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (13 samples, 0.01%)</title><rect x="284.7" y="229" width="0.2" height="15.0" fill="rgb(208,7,49)" rx="2" ry="2" />
<text  x="287.71" y="239.5" ></text>
</g>
<g >
<title>TCMalloc_PageMap2&lt;35&gt;::get (14 samples, 0.01%)</title><rect x="642.4" y="405" width="0.2" height="15.0" fill="rgb(216,37,33)" rx="2" ry="2" />
<text  x="645.41" y="415.5" ></text>
</g>
<g >
<title>bannerd::engine::TargetMessagePacker::writePartnerCosts (11 samples, 0.01%)</title><rect x="412.6" y="517" width="0.1" height="15.0" fill="rgb(243,79,49)" rx="2" ry="2" />
<text  x="415.58" y="527.5" ></text>
</g>
<g >
<title>do_futex (12 samples, 0.01%)</title><rect x="891.6" y="437" width="0.2" height="15.0" fill="rgb(224,183,50)" rx="2" ry="2" />
<text  x="894.64" y="447.5" ></text>
</g>
<g >
<title>__GI__IO_default_xsputn (75 samples, 0.07%)</title><rect x="638.9" y="469" width="0.9" height="15.0" fill="rgb(248,9,42)" rx="2" ry="2" />
<text  x="641.95" y="479.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (26 samples, 0.02%)</title><rect x="681.1" y="453" width="0.3" height="15.0" fill="rgb(236,163,7)" rx="2" ry="2" />
<text  x="684.15" y="463.5" ></text>
</g>
<g >
<title>__memcpy_ssse3_back (384 samples, 0.36%)</title><rect x="122.6" y="501" width="4.2" height="15.0" fill="rgb(241,108,29)" rx="2" ry="2" />
<text  x="125.61" y="511.5" ></text>
</g>
<g >
<title>__strlen_sse2_pminub (76 samples, 0.07%)</title><rect x="941.9" y="485" width="0.9" height="15.0" fill="rgb(239,179,10)" rx="2" ry="2" />
<text  x="944.93" y="495.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::wideAndNot (84 samples, 0.08%)</title><rect x="430.2" y="437" width="1.0" height="15.0" fill="rgb(234,204,18)" rx="2" ry="2" />
<text  x="433.23" y="447.5" ></text>
</g>
<g >
<title>do_nanosleep (10 samples, 0.01%)</title><rect x="1146.7" y="437" width="0.1" height="15.0" fill="rgb(247,143,34)" rx="2" ry="2" />
<text  x="1149.71" y="447.5" ></text>
</g>
<g >
<title>inherit_event.isra.105 (214 samples, 0.20%)</title><rect x="139.4" y="389" width="2.3" height="15.0" fill="rgb(241,171,22)" rx="2" ry="2" />
<text  x="142.36" y="399.5" ></text>
</g>
<g >
<title>do_free (21 samples, 0.02%)</title><rect x="642.1" y="453" width="0.2" height="15.0" fill="rgb(219,142,45)" rx="2" ry="2" />
<text  x="645.10" y="463.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (12 samples, 0.01%)</title><rect x="381.7" y="421" width="0.1" height="15.0" fill="rgb(239,2,39)" rx="2" ry="2" />
<text  x="384.66" y="431.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;unsigned char const&amp;, std::string const&amp;&gt;, std::tuple&lt;unsigned char const&amp;, std::string const&amp;&gt;, 1ul, 2ul&gt;::__less (25 samples, 0.02%)</title><rect x="382.1" y="373" width="0.3" height="15.0" fill="rgb(219,189,40)" rx="2" ry="2" />
<text  x="385.11" y="383.5" ></text>
</g>
<g >
<title>__unqueue_futex (16 samples, 0.01%)</title><rect x="296.6" y="437" width="0.1" height="15.0" fill="rgb(251,107,10)" rx="2" ry="2" />
<text  x="299.55" y="447.5" ></text>
</g>
<g >
<title>get_futex_key (26 samples, 0.02%)</title><rect x="176.3" y="437" width="0.3" height="15.0" fill="rgb(239,49,52)" rx="2" ry="2" />
<text  x="179.27" y="447.5" ></text>
</g>
<g >
<title>extractStringSet (16 samples, 0.01%)</title><rect x="674.9" y="517" width="0.1" height="15.0" fill="rgb(253,142,12)" rx="2" ry="2" />
<text  x="677.87" y="527.5" ></text>
</g>
<g >
<title>bannerd::engine::pricePerEvent (22 samples, 0.02%)</title><rect x="414.5" y="517" width="0.2" height="15.0" fill="rgb(236,160,3)" rx="2" ry="2" />
<text  x="417.47" y="527.5" ></text>
</g>
<g >
<title>__schedule (119 samples, 0.11%)</title><rect x="320.1" y="293" width="1.3" height="15.0" fill="rgb(243,127,54)" rx="2" ry="2" />
<text  x="323.13" y="303.5" ></text>
</g>
<g >
<title>operator (589 samples, 0.55%)</title><rect x="661.1" y="421" width="6.5" height="15.0" fill="rgb(248,44,38)" rx="2" ry="2" />
<text  x="664.10" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (47 samples, 0.04%)</title><rect x="421.5" y="453" width="0.5" height="15.0" fill="rgb(242,218,44)" rx="2" ry="2" />
<text  x="424.47" y="463.5" ></text>
</g>
<g >
<title>std::string::size (21 samples, 0.02%)</title><rect x="964.6" y="501" width="0.2" height="15.0" fill="rgb(208,196,9)" rx="2" ry="2" />
<text  x="967.60" y="511.5" ></text>
</g>
<g >
<title>net_rx_action (12 samples, 0.01%)</title><rect x="806.2" y="405" width="0.2" height="15.0" fill="rgb(254,131,22)" rx="2" ry="2" />
<text  x="809.23" y="415.5" ></text>
</g>
<g >
<title>[unknown] (77 samples, 0.07%)</title><rect x="893.2" y="501" width="0.9" height="15.0" fill="rgb(213,65,18)" rx="2" ry="2" />
<text  x="896.23" y="511.5" ></text>
</g>
<g >
<title>RSA_eay_public_encrypt (161 samples, 0.15%)</title><rect x="112.1" y="517" width="1.7" height="15.0" fill="rgb(215,53,5)" rx="2" ry="2" />
<text  x="115.08" y="527.5" ></text>
</g>
<g >
<title>tcmalloc::SLL_Next (54 samples, 0.05%)</title><rect x="1147.4" y="469" width="0.6" height="15.0" fill="rgb(254,166,44)" rx="2" ry="2" />
<text  x="1150.42" y="479.5" ></text>
</g>
<g >
<title>__pthread_cond_timedwait (71 samples, 0.07%)</title><rect x="834.2" y="421" width="0.8" height="15.0" fill="rgb(243,186,21)" rx="2" ry="2" />
<text  x="837.20" y="431.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt; &gt; (72 samples, 0.07%)</title><rect x="656.0" y="389" width="0.8" height="15.0" fill="rgb(217,10,17)" rx="2" ry="2" />
<text  x="658.98" y="399.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (81 samples, 0.08%)</title><rect x="842.3" y="405" width="0.9" height="15.0" fill="rgb(221,51,23)" rx="2" ry="2" />
<text  x="845.28" y="415.5" ></text>
</g>
<g >
<title>ret_from_intr (12 samples, 0.01%)</title><rect x="806.2" y="501" width="0.2" height="15.0" fill="rgb(254,131,9)" rx="2" ry="2" />
<text  x="809.23" y="511.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_wrlock (116 samples, 0.11%)</title><rect x="632.0" y="437" width="1.3" height="15.0" fill="rgb(228,32,38)" rx="2" ry="2" />
<text  x="635.00" y="447.5" ></text>
</g>
<g >
<title>free_fast_path (212 samples, 0.20%)</title><rect x="1123.5" y="501" width="2.3" height="15.0" fill="rgb(210,212,20)" rx="2" ry="2" />
<text  x="1126.45" y="511.5" ></text>
</g>
<g >
<title>rapidjson::GenericReader&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::UTF8&lt;char&gt;, rapidjson::CrtAllocator&gt;::ParseStringToStream&lt;0u, rapidjson::UTF8&lt;char&gt;, rapidjson::UTF8&lt;char&gt;, rapidjson::GenericStringStream&lt;rapidjson::UTF8&lt;char&gt; &gt;, rapidjson::GenericReader&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::UTF8&lt;char&gt;, rapidjson::CrtAllocator&gt;::StackStream&lt;char&gt; &gt; (21 samples, 0.02%)</title><rect x="832.6" y="501" width="0.2" height="15.0" fill="rgb(238,23,37)" rx="2" ry="2" />
<text  x="835.61" y="511.5" ></text>
</g>
<g >
<title>@plt (18 samples, 0.02%)</title><rect x="669.4" y="469" width="0.2" height="15.0" fill="rgb(231,128,25)" rx="2" ry="2" />
<text  x="672.42" y="479.5" ></text>
</g>
<g >
<title>bannerd::store::ActiveCampaignIndex::byStringSet (12 samples, 0.01%)</title><rect x="425.8" y="517" width="0.1" height="15.0" fill="rgb(247,83,12)" rx="2" ry="2" />
<text  x="428.78" y="527.5" ></text>
</g>
<g >
<title>tcmalloc::DLL_Prepend (15 samples, 0.01%)</title><rect x="1146.0" y="517" width="0.2" height="15.0" fill="rgb(233,150,9)" rx="2" ry="2" />
<text  x="1149.01" y="527.5" ></text>
</g>
<g >
<title>system_call_fastpath (225 samples, 0.21%)</title><rect x="145.0" y="485" width="2.4" height="15.0" fill="rgb(246,126,33)" rx="2" ry="2" />
<text  x="147.95" y="495.5" ></text>
</g>
<g >
<title>bannerd::Store::rbMap (16 samples, 0.01%)</title><rect x="325.7" y="517" width="0.2" height="15.0" fill="rgb(208,221,31)" rx="2" ry="2" />
<text  x="328.72" y="527.5" ></text>
</g>
<g >
<title>std::set&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::count (29 samples, 0.03%)</title><rect x="701.5" y="501" width="0.4" height="15.0" fill="rgb(226,72,33)" rx="2" ry="2" />
<text  x="704.53" y="511.5" ></text>
</g>
<g >
<title>getprocSetVar (24 samples, 0.02%)</title><rect x="702.6" y="517" width="0.3" height="15.0" fill="rgb(227,40,18)" rx="2" ry="2" />
<text  x="705.60" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::UInt64Size (11 samples, 0.01%)</title><rect x="1154.0" y="501" width="0.2" height="15.0" fill="rgb(246,141,53)" rx="2" ry="2" />
<text  x="1157.04" y="511.5" ></text>
</g>
<g >
<title>vfs_write (68 samples, 0.06%)</title><rect x="129.5" y="469" width="0.7" height="15.0" fill="rgb(251,212,21)" rx="2" ry="2" />
<text  x="132.50" y="479.5" ></text>
</g>
<g >
<title>__nanosleep_nocancel (11 samples, 0.01%)</title><rect x="144.6" y="501" width="0.1" height="15.0" fill="rgb(213,199,3)" rx="2" ry="2" />
<text  x="147.58" y="511.5" ></text>
</g>
<g >
<title>openssl_lock_function (367 samples, 0.34%)</title><rect x="27.1" y="501" width="4.0" height="15.0" fill="rgb(222,70,7)" rx="2" ry="2" />
<text  x="30.11" y="511.5" ></text>
</g>
<g >
<title>do_futex (24 samples, 0.02%)</title><rect x="907.4" y="389" width="0.3" height="15.0" fill="rgb(205,18,25)" rx="2" ry="2" />
<text  x="910.39" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; &gt;::lower_bound (16 samples, 0.01%)</title><rect x="815.6" y="437" width="0.2" height="15.0" fill="rgb(254,191,17)" rx="2" ry="2" />
<text  x="818.65" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; (28 samples, 0.03%)</title><rect x="930.9" y="469" width="0.4" height="15.0" fill="rgb(247,226,38)" rx="2" ry="2" />
<text  x="933.94" y="479.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::operator|= (225 samples, 0.21%)</title><rect x="1105.8" y="501" width="2.5" height="15.0" fill="rgb(237,120,46)" rx="2" ry="2" />
<text  x="1108.79" y="511.5" ></text>
</g>
<g >
<title>xfs_file_aio_write_checks (31 samples, 0.03%)</title><rect x="277.7" y="389" width="0.4" height="15.0" fill="rgb(218,152,44)" rx="2" ry="2" />
<text  x="280.72" y="399.5" ></text>
</g>
<g >
<title>tcp_write_xmit (72 samples, 0.07%)</title><rect x="284.1" y="373" width="0.8" height="15.0" fill="rgb(236,145,32)" rx="2" ry="2" />
<text  x="287.14" y="383.5" ></text>
</g>
<g >
<title>base::internal::HookList&lt;void  (18 samples, 0.02%)</title><rect x="1132.9" y="485" width="0.2" height="15.0" fill="rgb(235,152,37)" rx="2" ry="2" />
<text  x="1135.87" y="495.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (10 samples, 0.01%)</title><rect x="930.9" y="405" width="0.2" height="15.0" fill="rgb(217,4,41)" rx="2" ry="2" />
<text  x="933.94" y="415.5" ></text>
</g>
<g >
<title>__netif_receive_skb (22 samples, 0.02%)</title><rect x="992.8" y="309" width="0.2" height="15.0" fill="rgb(242,96,37)" rx="2" ry="2" />
<text  x="995.81" y="319.5" ></text>
</g>
<g >
<title>findFunction (683 samples, 0.63%)</title><rect x="690.2" y="501" width="7.5" height="15.0" fill="rgb(215,11,14)" rx="2" ry="2" />
<text  x="693.22" y="511.5" ></text>
</g>
<g >
<title>SHA1_Update (835 samples, 0.78%)</title><rect x="117.8" y="517" width="9.2" height="15.0" fill="rgb(217,81,29)" rx="2" ry="2" />
<text  x="120.85" y="527.5" ></text>
</g>
<g >
<title>xfs_file_buffered_aio_write (14 samples, 0.01%)</title><rect x="133.8" y="405" width="0.2" height="15.0" fill="rgb(250,228,14)" rx="2" ry="2" />
<text  x="136.81" y="415.5" ></text>
</g>
<g >
<title>memory_allocate_copy (39 samples, 0.04%)</title><rect x="148.4" y="485" width="0.4" height="15.0" fill="rgb(242,198,54)" rx="2" ry="2" />
<text  x="151.39" y="495.5" ></text>
</g>
<g >
<title>irq_exit (16 samples, 0.01%)</title><rect x="613.5" y="469" width="0.2" height="15.0" fill="rgb(224,18,47)" rx="2" ry="2" />
<text  x="616.51" y="479.5" ></text>
</g>
<g >
<title>nmi (10 samples, 0.01%)</title><rect x="990.2" y="501" width="0.1" height="15.0" fill="rgb(243,83,27)" rx="2" ry="2" />
<text  x="993.15" y="511.5" ></text>
</g>
<g >
<title>sysret_audit (28 samples, 0.03%)</title><rect x="894.9" y="469" width="0.4" height="15.0" fill="rgb(227,187,21)" rx="2" ry="2" />
<text  x="897.95" y="479.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (14 samples, 0.01%)</title><rect x="189.6" y="389" width="0.2" height="15.0" fill="rgb(235,2,34)" rx="2" ry="2" />
<text  x="192.64" y="399.5" ></text>
</g>
<g >
<title>std::map&lt;std::string, std::string, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (96 samples, 0.09%)</title><rect x="684.9" y="469" width="1.1" height="15.0" fill="rgb(227,165,30)" rx="2" ry="2" />
<text  x="687.95" y="479.5" ></text>
</g>
<g >
<title>operator (24 samples, 0.02%)</title><rect x="331.1" y="389" width="0.3" height="15.0" fill="rgb(219,71,35)" rx="2" ry="2" />
<text  x="334.14" y="399.5" ></text>
</g>
<g >
<title>neigh_connected_output (19 samples, 0.02%)</title><rect x="284.7" y="277" width="0.2" height="15.0" fill="rgb(249,65,2)" rx="2" ry="2" />
<text  x="287.68" y="287.5" ></text>
</g>
<g >
<title>bannerd::store::ActiveCampaignIndex::setPadFilters (226 samples, 0.21%)</title><rect x="436.7" y="437" width="2.5" height="15.0" fill="rgb(233,216,18)" rx="2" ry="2" />
<text  x="439.72" y="447.5" ></text>
</g>
<g >
<title>sys_nanosleep (79 samples, 0.07%)</title><rect x="128.6" y="485" width="0.9" height="15.0" fill="rgb(226,42,15)" rx="2" ry="2" />
<text  x="131.61" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;char const*, std::allocator&lt;char const*&gt; &gt;::_M_realloc_insert&lt;char const* const&amp;&gt; (14 samples, 0.01%)</title><rect x="977.4" y="517" width="0.2" height="15.0" fill="rgb(218,113,43)" rx="2" ry="2" />
<text  x="980.44" y="527.5" ></text>
</g>
<g >
<title>local_bh_enable (18 samples, 0.02%)</title><rect x="284.5" y="277" width="0.2" height="15.0" fill="rgb(250,23,14)" rx="2" ry="2" />
<text  x="287.48" y="287.5" ></text>
</g>
<g >
<title>bannerd::store::ActiveCampaignIndex::byPad (31 samples, 0.03%)</title><rect x="421.6" y="421" width="0.3" height="15.0" fill="rgb(231,82,13)" rx="2" ry="2" />
<text  x="424.55" y="431.5" ></text>
</g>
<g >
<title>target::ev2pt (16 samples, 0.01%)</title><rect x="1112.4" y="517" width="0.2" height="15.0" fill="rgb(250,137,39)" rx="2" ry="2" />
<text  x="1115.38" y="527.5" ></text>
</g>
<g >
<title>_IO_old_init (34 samples, 0.03%)</title><rect x="634.2" y="469" width="0.4" height="15.0" fill="rgb(225,32,3)" rx="2" ry="2" />
<text  x="637.25" y="479.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_wrlock (810 samples, 0.75%)</title><rect x="907.9" y="437" width="8.9" height="15.0" fill="rgb(236,161,42)" rx="2" ry="2" />
<text  x="910.92" y="447.5" ></text>
</g>
<g >
<title>group_sched_in (15 samples, 0.01%)</title><rect x="146.1" y="277" width="0.2" height="15.0" fill="rgb(215,150,40)" rx="2" ry="2" />
<text  x="149.10" y="287.5" ></text>
</g>
<g >
<title>__schedule (13 samples, 0.01%)</title><rect x="834.8" y="309" width="0.2" height="15.0" fill="rgb(233,128,9)" rx="2" ry="2" />
<text  x="837.82" y="319.5" ></text>
</g>
<g >
<title>ip_local_out_sk (11 samples, 0.01%)</title><rect x="285.0" y="341" width="0.1" height="15.0" fill="rgb(225,147,37)" rx="2" ry="2" />
<text  x="287.95" y="351.5" ></text>
</g>
<g >
<title>__exchange_and_add (77 samples, 0.07%)</title><rect x="975.3" y="469" width="0.9" height="15.0" fill="rgb(249,94,52)" rx="2" ry="2" />
<text  x="978.32" y="479.5" ></text>
</g>
<g >
<title>bannerd::engine::gp_param::isFlagSet (96 samples, 0.09%)</title><rect x="684.9" y="501" width="1.1" height="15.0" fill="rgb(249,179,12)" rx="2" ry="2" />
<text  x="687.95" y="511.5" ></text>
</g>
<g >
<title>deactivate_task (18 samples, 0.02%)</title><rect x="899.3" y="357" width="0.2" height="15.0" fill="rgb(254,103,9)" rx="2" ry="2" />
<text  x="902.28" y="367.5" ></text>
</g>
<g >
<title>bannerd::engine::gp_param::var (96 samples, 0.09%)</title><rect x="684.9" y="485" width="1.1" height="15.0" fill="rgb(250,90,52)" rx="2" ry="2" />
<text  x="687.95" y="495.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::operator-= (20 samples, 0.02%)</title><rect x="1098.6" y="485" width="0.3" height="15.0" fill="rgb(235,83,29)" rx="2" ry="2" />
<text  x="1101.65" y="495.5" ></text>
</g>
<g >
<title>futex_wake (641 samples, 0.60%)</title><rect x="174.9" y="453" width="7.0" height="15.0" fill="rgb(227,22,22)" rx="2" ry="2" />
<text  x="177.90" y="463.5" ></text>
</g>
<g >
<title>bannerd::store::ActiveCampaignIndex::ConstIterator::operator++ (11 samples, 0.01%)</title><rect x="417.3" y="517" width="0.1" height="15.0" fill="rgb(223,54,25)" rx="2" ry="2" />
<text  x="420.27" y="527.5" ></text>
</g>
<g >
<title>sys_futex (21 samples, 0.02%)</title><rect x="834.8" y="389" width="0.2" height="15.0" fill="rgb(216,83,32)" rx="2" ry="2" />
<text  x="837.75" y="399.5" ></text>
</g>
<g >
<title>tick_sched_timer (20 samples, 0.02%)</title><rect x="265.5" y="421" width="0.2" height="15.0" fill="rgb(230,69,45)" rx="2" ry="2" />
<text  x="268.51" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::clear (41 samples, 0.04%)</title><rect x="163.9" y="485" width="0.4" height="15.0" fill="rgb(219,79,17)" rx="2" ry="2" />
<text  x="166.87" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, std::string&gt;, std::_Select1st&lt;std::pair&lt;std::string const, std::string&gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::_M_lower_bound_tr&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, void&gt; (79 samples, 0.07%)</title><rect x="685.0" y="437" width="0.9" height="15.0" fill="rgb(231,6,37)" rx="2" ry="2" />
<text  x="687.99" y="447.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (49 samples, 0.05%)</title><rect x="930.2" y="469" width="0.5" height="15.0" fill="rgb(206,79,21)" rx="2" ry="2" />
<text  x="933.18" y="479.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (17 samples, 0.02%)</title><rect x="285.4" y="485" width="0.2" height="15.0" fill="rgb(225,203,6)" rx="2" ry="2" />
<text  x="288.42" y="495.5" ></text>
</g>
<g >
<title>bn_sqr8x_mont (1,134 samples, 1.05%)</title><rect x="613.8" y="517" width="12.4" height="15.0" fill="rgb(251,38,42)" rx="2" ry="2" />
<text  x="616.76" y="527.5" ></text>
</g>
<g >
<title>igb_poll (26 samples, 0.02%)</title><rect x="992.8" y="373" width="0.3" height="15.0" fill="rgb(206,138,38)" rx="2" ry="2" />
<text  x="995.77" y="383.5" ></text>
</g>
<g >
<title>std::string::empty (36 samples, 0.03%)</title><rect x="104.4" y="485" width="0.4" height="15.0" fill="rgb(229,163,2)" rx="2" ry="2" />
<text  x="107.43" y="495.5" ></text>
</g>
<g >
<title>__strchr_sse42 (13 samples, 0.01%)</title><rect x="677.5" y="501" width="0.2" height="15.0" fill="rgb(206,228,47)" rx="2" ry="2" />
<text  x="680.52" y="511.5" ></text>
</g>
<g >
<title>do_futex (12 samples, 0.01%)</title><rect x="977.5" y="405" width="0.1" height="15.0" fill="rgb(245,150,25)" rx="2" ry="2" />
<text  x="980.46" y="415.5" ></text>
</g>
<g >
<title>_M_find_before_node (10 samples, 0.01%)</title><rect x="167.9" y="517" width="0.1" height="15.0" fill="rgb(212,48,8)" rx="2" ry="2" />
<text  x="170.89" y="527.5" ></text>
</g>
<g >
<title>nmi (30 samples, 0.03%)</title><rect x="421.1" y="485" width="0.3" height="15.0" fill="rgb(237,49,36)" rx="2" ry="2" />
<text  x="424.08" y="495.5" ></text>
</g>
<g >
<title>igb_clean_rx_irq (10 samples, 0.01%)</title><rect x="806.2" y="373" width="0.1" height="15.0" fill="rgb(225,169,34)" rx="2" ry="2" />
<text  x="809.24" y="383.5" ></text>
</g>
<g >
<title>getprocTextblock (30 samples, 0.03%)</title><rect x="702.9" y="517" width="0.3" height="15.0" fill="rgb(236,73,24)" rx="2" ry="2" />
<text  x="705.86" y="527.5" ></text>
</g>
<g >
<title>_IO_vfprintf_internal (12 samples, 0.01%)</title><rect x="833.7" y="453" width="0.2" height="15.0" fill="rgb(254,52,48)" rx="2" ry="2" />
<text  x="836.74" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::UnknownFieldSet::~UnknownFieldSet (15 samples, 0.01%)</title><rect x="705.8" y="517" width="0.2" height="15.0" fill="rgb(207,125,32)" rx="2" ry="2" />
<text  x="708.82" y="527.5" ></text>
</g>
<g >
<title>CRYPTO_malloc (359 samples, 0.33%)</title><rect x="95.0" y="517" width="3.9" height="15.0" fill="rgb(249,6,23)" rx="2" ry="2" />
<text  x="97.99" y="527.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, bannerd::TemplateIncludeEx&gt;, std::allocator&lt;std::pair&lt;unsigned int const, bannerd::TemplateIncludeEx&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (16 samples, 0.01%)</title><rect x="699.9" y="437" width="0.2" height="15.0" fill="rgb(212,61,47)" rx="2" ry="2" />
<text  x="702.93" y="447.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (26 samples, 0.02%)</title><rect x="169.0" y="517" width="0.3" height="15.0" fill="rgb(236,116,20)" rx="2" ry="2" />
<text  x="171.97" y="527.5" ></text>
</g>
<g >
<title>native_rw_unlock (16 samples, 0.01%)</title><rect x="91.1" y="437" width="0.2" height="15.0" fill="rgb(237,108,37)" rx="2" ry="2" />
<text  x="94.11" y="447.5" ></text>
</g>
<g >
<title>perf_event_sched_in (142 samples, 0.13%)</title><rect x="300.2" y="357" width="1.6" height="15.0" fill="rgb(214,48,20)" rx="2" ry="2" />
<text  x="303.24" y="367.5" ></text>
</g>
<g >
<title>x86_pmu_disable (10 samples, 0.01%)</title><rect x="298.7" y="325" width="0.1" height="15.0" fill="rgb(226,148,36)" rx="2" ry="2" />
<text  x="301.67" y="335.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::_S_cmp&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const&amp;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const&amp;&gt; (29 samples, 0.03%)</title><rect x="922.5" y="485" width="0.3" height="15.0" fill="rgb(248,141,14)" rx="2" ry="2" />
<text  x="925.52" y="495.5" ></text>
</g>
<g >
<title>__libc_send (37 samples, 0.03%)</title><rect x="1164.3" y="501" width="0.4" height="15.0" fill="rgb(220,171,40)" rx="2" ry="2" />
<text  x="1167.26" y="511.5" ></text>
</g>
<g >
<title>iomap_file_buffered_write (18 samples, 0.02%)</title><rect x="277.5" y="389" width="0.2" height="15.0" fill="rgb(253,54,42)" rx="2" ry="2" />
<text  x="280.50" y="399.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (110 samples, 0.10%)</title><rect x="388.4" y="341" width="1.2" height="15.0" fill="rgb(247,84,18)" rx="2" ry="2" />
<text  x="391.36" y="351.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (169 samples, 0.16%)</title><rect x="682.5" y="389" width="1.9" height="15.0" fill="rgb(231,204,48)" rx="2" ry="2" />
<text  x="685.50" y="399.5" ></text>
</g>
<g >
<title>~PushLocal (11 samples, 0.01%)</title><rect x="698.0" y="501" width="0.1" height="15.0" fill="rgb(250,141,20)" rx="2" ry="2" />
<text  x="700.99" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;::_M_drop_node (29 samples, 0.03%)</title><rect x="930.9" y="501" width="0.4" height="15.0" fill="rgb(251,65,52)" rx="2" ry="2" />
<text  x="933.94" y="511.5" ></text>
</g>
<g >
<title>trg::http::ServiceCommon::operator (60 samples, 0.06%)</title><rect x="1148.9" y="517" width="0.7" height="15.0" fill="rgb(252,126,7)" rx="2" ry="2" />
<text  x="1151.91" y="527.5" ></text>
</g>
<g >
<title>std::map&lt;std::string, std::string, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::operator[] (271 samples, 0.25%)</title><rect x="681.4" y="485" width="3.0" height="15.0" fill="rgb(230,68,2)" rx="2" ry="2" />
<text  x="684.44" y="495.5" ></text>
</g>
<g >
<title>BN_mod_exp_mont (301 samples, 0.28%)</title><rect x="61.2" y="517" width="3.3" height="15.0" fill="rgb(210,50,44)" rx="2" ry="2" />
<text  x="64.19" y="527.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (17 samples, 0.02%)</title><rect x="284.7" y="245" width="0.2" height="15.0" fill="rgb(215,24,33)" rx="2" ry="2" />
<text  x="287.68" y="255.5" ></text>
</g>
<g >
<title>perf_pmu_sched_task (20 samples, 0.02%)</title><rect x="137.0" y="357" width="0.2" height="15.0" fill="rgb(254,72,3)" rx="2" ry="2" />
<text  x="139.96" y="367.5" ></text>
</g>
<g >
<title>call_softirq (13 samples, 0.01%)</title><rect x="1164.4" y="213" width="0.2" height="15.0" fill="rgb(249,6,28)" rx="2" ry="2" />
<text  x="1167.43" y="223.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::set (9,053 samples, 8.40%)</title><rect x="994.9" y="485" width="99.2" height="15.0" fill="rgb(254,101,17)" rx="2" ry="2" />
<text  x="997.94" y="495.5" >target::dyna..</text>
</g>
<g >
<title>compareCommaSeparatedArgs&lt;bannerd::commonFunc (123 samples, 0.11%)</title><rect x="330.4" y="501" width="1.3" height="15.0" fill="rgb(238,112,12)" rx="2" ry="2" />
<text  x="333.37" y="511.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;bannerd::details::InternalStorage::Record const*, std::vector&lt;bannerd::details::InternalStorage::Record, std::allocator&lt;bannerd::details::InternalStorage::Record&gt; &gt; &gt; &gt; (24 samples, 0.02%)</title><rect x="392.5" y="469" width="0.3" height="15.0" fill="rgb(243,52,39)" rx="2" ry="2" />
<text  x="395.54" y="479.5" ></text>
</g>
<g >
<title>_IO_vfprintf_internal (631 samples, 0.59%)</title><rect x="635.1" y="485" width="6.9" height="15.0" fill="rgb(222,204,6)" rx="2" ry="2" />
<text  x="638.13" y="495.5" ></text>
</g>
<g >
<title>htonl (64 samples, 0.06%)</title><rect x="670.6" y="501" width="0.7" height="15.0" fill="rgb(221,226,42)" rx="2" ry="2" />
<text  x="673.55" y="511.5" ></text>
</g>
<g >
<title>local_bh_enable (13 samples, 0.01%)</title><rect x="1164.4" y="261" width="0.2" height="15.0" fill="rgb(234,204,11)" rx="2" ry="2" />
<text  x="1167.43" y="271.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (273 samples, 0.25%)</title><rect x="694.0" y="373" width="3.0" height="15.0" fill="rgb(227,133,42)" rx="2" ry="2" />
<text  x="696.97" y="383.5" ></text>
</g>
<g >
<title>tcmalloc::SLL_Next (37 samples, 0.03%)</title><rect x="1141.7" y="389" width="0.4" height="15.0" fill="rgb(223,135,27)" rx="2" ry="2" />
<text  x="1144.71" y="399.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (12 samples, 0.01%)</title><rect x="315.2" y="469" width="0.1" height="15.0" fill="rgb(239,78,36)" rx="2" ry="2" />
<text  x="318.22" y="479.5" ></text>
</g>
<g >
<title>std::string::size (24 samples, 0.02%)</title><rect x="688.1" y="373" width="0.2" height="15.0" fill="rgb(228,105,8)" rx="2" ry="2" />
<text  x="691.08" y="383.5" ></text>
</g>
<g >
<title>sys_futex (17 samples, 0.02%)</title><rect x="988.1" y="469" width="0.2" height="15.0" fill="rgb(225,65,7)" rx="2" ry="2" />
<text  x="991.12" y="479.5" ></text>
</g>
<g >
<title>google::dense_hash_set&lt;unsigned int, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, google::libc_allocator_with_realloc&lt;unsigned int&gt; &gt;::insert&lt;__gnu_cxx::__normal_iterator&lt;unsigned int*, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt; &gt; &gt; (36 samples, 0.03%)</title><rect x="436.3" y="501" width="0.4" height="15.0" fill="rgb(208,201,42)" rx="2" ry="2" />
<text  x="439.29" y="511.5" ></text>
</g>
<g >
<title>system_call_fastpath (13 samples, 0.01%)</title><rect x="977.4" y="437" width="0.2" height="15.0" fill="rgb(215,188,49)" rx="2" ry="2" />
<text  x="980.45" y="447.5" ></text>
</g>
<g >
<title>flexible_sched_in (18 samples, 0.02%)</title><rect x="146.1" y="293" width="0.2" height="15.0" fill="rgb(213,192,37)" rx="2" ry="2" />
<text  x="149.07" y="303.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (21 samples, 0.02%)</title><rect x="318.9" y="309" width="0.2" height="15.0" fill="rgb(222,103,41)" rx="2" ry="2" />
<text  x="321.87" y="319.5" ></text>
</g>
<g >
<title>visit_groups_merge (22 samples, 0.02%)</title><rect x="320.4" y="213" width="0.3" height="15.0" fill="rgb(252,229,5)" rx="2" ry="2" />
<text  x="323.43" y="223.5" ></text>
</g>
<g >
<title>__memcpy_ssse3_back (287 samples, 0.27%)</title><rect x="959.6" y="469" width="3.2" height="15.0" fill="rgb(241,49,32)" rx="2" ry="2" />
<text  x="962.61" y="479.5" ></text>
</g>
<g >
<title>sk_page_frag_refill (13 samples, 0.01%)</title><rect x="283.6" y="405" width="0.1" height="15.0" fill="rgb(207,207,32)" rx="2" ry="2" />
<text  x="286.58" y="415.5" ></text>
</g>
<g >
<title>nmi (11 samples, 0.01%)</title><rect x="133.5" y="485" width="0.1" height="15.0" fill="rgb(241,137,29)" rx="2" ry="2" />
<text  x="136.47" y="495.5" ></text>
</g>
<g >
<title>__strncmp_sse42 (658 samples, 0.61%)</title><rect x="794.7" y="501" width="7.2" height="15.0" fill="rgb(233,121,42)" rx="2" ry="2" />
<text  x="797.71" y="511.5" ></text>
</g>
<g >
<title>operator (47 samples, 0.04%)</title><rect x="697.0" y="453" width="0.6" height="15.0" fill="rgb(237,197,22)" rx="2" ry="2" />
<text  x="700.04" y="463.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_is_shared (12 samples, 0.01%)</title><rect x="962.9" y="501" width="0.2" height="15.0" fill="rgb(242,57,21)" rx="2" ry="2" />
<text  x="965.92" y="511.5" ></text>
</g>
<g >
<title>finish_task_switch (67 samples, 0.06%)</title><rect x="128.7" y="405" width="0.7" height="15.0" fill="rgb(250,162,34)" rx="2" ry="2" />
<text  x="131.72" y="415.5" ></text>
</g>
<g >
<title>inline_mysql_rwlock_unlock (549 samples, 0.51%)</title><rect x="901.7" y="469" width="6.0" height="15.0" fill="rgb(249,85,37)" rx="2" ry="2" />
<text  x="904.72" y="479.5" ></text>
</g>
<g >
<title>__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;const bannerd::details::InternalStorage::Record*, std::vector&lt;bannerd::details::InternalStorage::Record&gt; &gt;, bannerd::details::InternalStorage::Record, __gnu_cxx::__ops::_Iter_comp_val&lt;(anonymous namespace)::CompareByClass&gt; &gt; (67 samples, 0.06%)</title><rect x="378.8" y="469" width="0.8" height="15.0" fill="rgb(238,130,23)" rx="2" ry="2" />
<text  x="381.83" y="479.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (10 samples, 0.01%)</title><rect x="388.0" y="389" width="0.2" height="15.0" fill="rgb(215,77,11)" rx="2" ry="2" />
<text  x="391.04" y="399.5" ></text>
</g>
<g >
<title>__schedule (10 samples, 0.01%)</title><rect x="1146.7" y="405" width="0.1" height="15.0" fill="rgb(230,183,27)" rx="2" ry="2" />
<text  x="1149.71" y="415.5" ></text>
</g>
<g >
<title>do_futex (19 samples, 0.02%)</title><rect x="834.8" y="373" width="0.2" height="15.0" fill="rgb(212,108,42)" rx="2" ry="2" />
<text  x="837.77" y="383.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::~unique_lock (15 samples, 0.01%)</title><rect x="835.0" y="501" width="0.2" height="15.0" fill="rgb(247,0,26)" rx="2" ry="2" />
<text  x="837.99" y="511.5" ></text>
</g>
<g >
<title>__memset_sse2 (26 samples, 0.02%)</title><rect x="781.2" y="501" width="0.3" height="15.0" fill="rgb(211,92,48)" rx="2" ry="2" />
<text  x="784.24" y="511.5" ></text>
</g>
<g >
<title>bannerd::store::ActiveCampaignIndex::build (17 samples, 0.02%)</title><rect x="417.8" y="485" width="0.2" height="15.0" fill="rgb(231,83,41)" rx="2" ry="2" />
<text  x="420.81" y="495.5" ></text>
</g>
<g >
<title>do_softirq (28 samples, 0.03%)</title><rect x="992.8" y="437" width="0.3" height="15.0" fill="rgb(208,174,33)" rx="2" ry="2" />
<text  x="995.75" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;::_M_erase (45 samples, 0.04%)</title><rect x="930.8" y="517" width="0.5" height="15.0" fill="rgb(220,176,43)" rx="2" ry="2" />
<text  x="933.77" y="527.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::operator (10 samples, 0.01%)</title><rect x="688.9" y="469" width="0.1" height="15.0" fill="rgb(224,82,12)" rx="2" ry="2" />
<text  x="691.90" y="479.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::set (53 samples, 0.05%)</title><rect x="1111.8" y="501" width="0.6" height="15.0" fill="rgb(233,72,9)" rx="2" ry="2" />
<text  x="1114.77" y="511.5" ></text>
</g>
<g >
<title>finish_task_switch (15 samples, 0.01%)</title><rect x="137.3" y="373" width="0.2" height="15.0" fill="rgb(231,135,10)" rx="2" ry="2" />
<text  x="140.29" y="383.5" ></text>
</g>
<g >
<title>findFunction (939 samples, 0.87%)</title><rect x="658.1" y="485" width="10.3" height="15.0" fill="rgb(241,121,30)" rx="2" ry="2" />
<text  x="661.14" y="495.5" ></text>
</g>
<g >
<title>tcmalloc::CentralFreeList::ReleaseToSpans (99 samples, 0.09%)</title><rect x="1142.3" y="485" width="1.1" height="15.0" fill="rgb(216,179,40)" rx="2" ry="2" />
<text  x="1145.34" y="495.5" ></text>
</g>
<g >
<title>system_call_fastpath (10 samples, 0.01%)</title><rect x="894.5" y="485" width="0.1" height="15.0" fill="rgb(247,50,45)" rx="2" ry="2" />
<text  x="897.50" y="495.5" ></text>
</g>
<g >
<title>bannerd::TStoreBase&lt;bannerd::TemplateIncludeEx&gt;::get (19 samples, 0.02%)</title><rect x="699.9" y="501" width="0.2" height="15.0" fill="rgb(209,171,5)" rx="2" ry="2" />
<text  x="702.90" y="511.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;bannerd::UrlObjectLimitEx const* const*, std::vector&lt;bannerd::UrlObjectLimitEx const*, std::allocator&lt;bannerd::UrlObjectLimitEx const*&gt; &gt; &gt; &gt; (10 samples, 0.01%)</title><rect x="329.3" y="469" width="0.1" height="15.0" fill="rgb(231,221,46)" rx="2" ry="2" />
<text  x="332.27" y="479.5" ></text>
</g>
<g >
<title>local_apic_timer_interrupt (31 samples, 0.03%)</title><rect x="598.2" y="469" width="0.3" height="15.0" fill="rgb(226,222,21)" rx="2" ry="2" />
<text  x="601.20" y="479.5" ></text>
</g>
<g >
<title>nmi (21 samples, 0.02%)</title><rect x="78.9" y="501" width="0.2" height="15.0" fill="rgb(239,28,51)" rx="2" ry="2" />
<text  x="81.86" y="511.5" ></text>
</g>
<g >
<title>tick_sched_handle (15 samples, 0.01%)</title><rect x="802.1" y="405" width="0.1" height="15.0" fill="rgb(217,170,21)" rx="2" ry="2" />
<text  x="805.07" y="415.5" ></text>
</g>
<g >
<title>SYSC_accept4 (60 samples, 0.06%)</title><rect x="194.8" y="453" width="0.6" height="15.0" fill="rgb(240,13,38)" rx="2" ry="2" />
<text  x="197.78" y="463.5" ></text>
</g>
<g >
<title>__do_softirq (10 samples, 0.01%)</title><rect x="381.0" y="389" width="0.1" height="15.0" fill="rgb(244,164,10)" rx="2" ry="2" />
<text  x="384.02" y="399.5" ></text>
</g>
<g >
<title>getproc (99 samples, 0.09%)</title><rect x="330.4" y="485" width="1.1" height="15.0" fill="rgb(254,182,29)" rx="2" ry="2" />
<text  x="333.43" y="495.5" ></text>
</g>
<g >
<title>futex_wake (165 samples, 0.15%)</title><rect x="896.0" y="421" width="1.8" height="15.0" fill="rgb(208,170,11)" rx="2" ry="2" />
<text  x="899.03" y="431.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::wideAndNot (26 samples, 0.02%)</title><rect x="431.6" y="405" width="0.3" height="15.0" fill="rgb(243,223,28)" rx="2" ry="2" />
<text  x="434.64" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;void&gt;, true&gt;::_Rb_tree_impl (10 samples, 0.01%)</title><rect x="690.1" y="453" width="0.1" height="15.0" fill="rgb(220,214,46)" rx="2" ry="2" />
<text  x="693.06" y="463.5" ></text>
</g>
<g >
<title>system_call_after_swapgs (27 samples, 0.03%)</title><rect x="295.4" y="501" width="0.3" height="15.0" fill="rgb(241,214,29)" rx="2" ry="2" />
<text  x="298.42" y="511.5" ></text>
</g>
<g >
<title>sysret_check (20 samples, 0.02%)</title><rect x="916.4" y="421" width="0.3" height="15.0" fill="rgb(217,163,33)" rx="2" ry="2" />
<text  x="919.44" y="431.5" ></text>
</g>
<g >
<title>__strchrnul (12 samples, 0.01%)</title><rect x="986.8" y="453" width="0.1" height="15.0" fill="rgb(209,29,8)" rx="2" ry="2" />
<text  x="989.81" y="463.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (62 samples, 0.06%)</title><rect x="29.9" y="437" width="0.7" height="15.0" fill="rgb(254,1,5)" rx="2" ry="2" />
<text  x="32.89" y="447.5" ></text>
</g>
<g >
<title>bannerd::Engine::parseRequest (13 samples, 0.01%)</title><rect x="323.2" y="517" width="0.1" height="15.0" fill="rgb(227,218,4)" rx="2" ry="2" />
<text  x="326.20" y="527.5" ></text>
</g>
<g >
<title>schedule (10 samples, 0.01%)</title><rect x="977.5" y="357" width="0.1" height="15.0" fill="rgb(216,165,23)" rx="2" ry="2" />
<text  x="980.48" y="367.5" ></text>
</g>
<g >
<title>sys_futex (12 samples, 0.01%)</title><rect x="142.8" y="469" width="0.1" height="15.0" fill="rgb(240,81,15)" rx="2" ry="2" />
<text  x="145.78" y="479.5" ></text>
</g>
<g >
<title>cpumask_next_and (10 samples, 0.01%)</title><rect x="305.9" y="341" width="0.1" height="15.0" fill="rgb(241,74,50)" rx="2" ry="2" />
<text  x="308.93" y="351.5" ></text>
</g>
<g >
<title>event_sched_in.isra.101 (20 samples, 0.02%)</title><rect x="188.1" y="277" width="0.2" height="15.0" fill="rgb(208,138,20)" rx="2" ry="2" />
<text  x="191.07" y="287.5" ></text>
</g>
<g >
<title>__schedule (74 samples, 0.07%)</title><rect x="128.7" y="421" width="0.8" height="15.0" fill="rgb(243,61,29)" rx="2" ry="2" />
<text  x="131.66" y="431.5" ></text>
</g>
<g >
<title>native_rw_unlock (17 samples, 0.02%)</title><rect x="807.9" y="453" width="0.2" height="15.0" fill="rgb(250,155,3)" rx="2" ry="2" />
<text  x="810.91" y="463.5" ></text>
</g>
<g >
<title>system_call_fastpath (60 samples, 0.06%)</title><rect x="194.8" y="501" width="0.6" height="15.0" fill="rgb(253,224,37)" rx="2" ry="2" />
<text  x="197.78" y="511.5" ></text>
</g>
<g >
<title>openssl_lock_function (42 samples, 0.04%)</title><rect x="806.9" y="501" width="0.4" height="15.0" fill="rgb(229,32,29)" rx="2" ry="2" />
<text  x="809.88" y="511.5" ></text>
</g>
<g >
<title>RSA_eay_init (15 samples, 0.01%)</title><rect x="111.9" y="517" width="0.2" height="15.0" fill="rgb(220,49,3)" rx="2" ry="2" />
<text  x="114.91" y="527.5" ></text>
</g>
<g >
<title>xfs_file_aio_write (65 samples, 0.06%)</title><rect x="129.5" y="437" width="0.7" height="15.0" fill="rgb(218,45,13)" rx="2" ry="2" />
<text  x="132.52" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; &gt;::find (118 samples, 0.11%)</title><rect x="923.9" y="517" width="1.3" height="15.0" fill="rgb(213,204,16)" rx="2" ry="2" />
<text  x="926.90" y="527.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (358 samples, 0.33%)</title><rect x="663.6" y="357" width="3.9" height="15.0" fill="rgb(223,44,3)" rx="2" ry="2" />
<text  x="666.62" y="367.5" ></text>
</g>
<g >
<title>bannerd::TargetingCollection::Range&lt;bannerd::TargetingStringSetEx&gt;::Range (191 samples, 0.18%)</title><rect x="326.1" y="517" width="2.1" height="15.0" fill="rgb(220,163,49)" rx="2" ry="2" />
<text  x="329.13" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (15 samples, 0.01%)</title><rect x="950.5" y="501" width="0.2" height="15.0" fill="rgb(217,90,41)" rx="2" ry="2" />
<text  x="953.50" y="511.5" ></text>
</g>
<g >
<title>ip_finish_output (11 samples, 0.01%)</title><rect x="285.0" y="309" width="0.1" height="15.0" fill="rgb(237,27,40)" rx="2" ry="2" />
<text  x="287.95" y="319.5" ></text>
</g>
<g >
<title>sk_stream_wait_memory (15 samples, 0.01%)</title><rect x="283.9" y="405" width="0.2" height="15.0" fill="rgb(215,205,18)" rx="2" ry="2" />
<text  x="286.93" y="415.5" ></text>
</g>
<g >
<title>protobuf_c_message_get_packed_size (24 samples, 0.02%)</title><rect x="831.9" y="517" width="0.2" height="15.0" fill="rgb(225,122,18)" rx="2" ry="2" />
<text  x="834.87" y="527.5" ></text>
</g>
<g >
<title>dequeue_task_fair (51 samples, 0.05%)</title><rect x="298.9" y="373" width="0.6" height="15.0" fill="rgb(205,116,52)" rx="2" ry="2" />
<text  x="301.94" y="383.5" ></text>
</g>
<g >
<title>system_call_after_swapgs (37 samples, 0.03%)</title><rect x="895.5" y="469" width="0.4" height="15.0" fill="rgb(238,59,35)" rx="2" ry="2" />
<text  x="898.48" y="479.5" ></text>
</g>
<g >
<title>__audit_syscall_entry (57 samples, 0.05%)</title><rect x="169.5" y="485" width="0.7" height="15.0" fill="rgb(237,210,13)" rx="2" ry="2" />
<text  x="172.54" y="495.5" ></text>
</g>
<g >
<title>tcmalloc::ThreadCache::FreeList::TryPop (37 samples, 0.03%)</title><rect x="1141.7" y="421" width="0.4" height="15.0" fill="rgb(222,157,9)" rx="2" ry="2" />
<text  x="1144.71" y="431.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (67 samples, 0.06%)</title><rect x="945.8" y="373" width="0.7" height="15.0" fill="rgb(242,86,52)" rx="2" ry="2" />
<text  x="948.77" y="383.5" ></text>
</g>
<g >
<title>bannerd::engine::CNStat::tick (733 samples, 0.68%)</title><rect x="820.4" y="501" width="8.0" height="15.0" fill="rgb(244,114,30)" rx="2" ry="2" />
<text  x="823.36" y="511.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (18 samples, 0.02%)</title><rect x="802.0" y="437" width="0.2" height="15.0" fill="rgb(218,174,0)" rx="2" ry="2" />
<text  x="805.04" y="447.5" ></text>
</g>
<g >
<title>__GI_strtoll (12 samples, 0.01%)</title><rect x="699.5" y="501" width="0.1" height="15.0" fill="rgb(232,185,37)" rx="2" ry="2" />
<text  x="702.46" y="511.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (17 samples, 0.02%)</title><rect x="667.6" y="405" width="0.2" height="15.0" fill="rgb(233,160,36)" rx="2" ry="2" />
<text  x="670.63" y="415.5" ></text>
</g>
<g >
<title>activate_task (27 samples, 0.03%)</title><rect x="181.5" y="389" width="0.3" height="15.0" fill="rgb(249,181,11)" rx="2" ry="2" />
<text  x="184.49" y="399.5" ></text>
</g>
<g >
<title>_L_unlock_738 (12 samples, 0.01%)</title><rect x="321.8" y="405" width="0.1" height="15.0" fill="rgb(223,219,0)" rx="2" ry="2" />
<text  x="324.79" y="415.5" ></text>
</g>
<g >
<title>tcmalloc::PageHeap::Carve (10 samples, 0.01%)</title><rect x="1146.5" y="517" width="0.1" height="15.0" fill="rgb(214,216,24)" rx="2" ry="2" />
<text  x="1149.50" y="527.5" ></text>
</g>
<g >
<title>__GI__IO_setb (17 samples, 0.02%)</title><rect x="634.9" y="469" width="0.2" height="15.0" fill="rgb(222,117,28)" rx="2" ry="2" />
<text  x="637.90" y="479.5" ></text>
</g>
<g >
<title>[unknown] (3,361 samples, 3.12%)</title><rect x="130.2" y="517" width="36.9" height="15.0" fill="rgb(217,225,20)" rx="2" ry="2" />
<text  x="133.25" y="527.5" >[un..</text>
</g>
<g >
<title>smp_apic_timer_interrupt (31 samples, 0.03%)</title><rect x="801.9" y="485" width="0.4" height="15.0" fill="rgb(224,127,29)" rx="2" ry="2" />
<text  x="804.92" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, std::string&gt;, std::_Select1st&lt;std::pair&lt;std::string const, std::string&gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::_M_lower_bound_tr&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, void&gt; (26 samples, 0.02%)</title><rect x="330.6" y="421" width="0.3" height="15.0" fill="rgb(214,81,9)" rx="2" ry="2" />
<text  x="333.59" y="431.5" ></text>
</g>
<g >
<title>target::bitmap::Index&lt;unsigned int, unsigned int, std::unordered_map&lt;unsigned int, unsigned int, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, unsigned int&gt; &gt; &gt; &gt;::findKnown (49 samples, 0.05%)</title><rect x="421.4" y="501" width="0.6" height="15.0" fill="rgb(205,159,13)" rx="2" ry="2" />
<text  x="424.44" y="511.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::operator (11 samples, 0.01%)</title><rect x="688.3" y="437" width="0.2" height="15.0" fill="rgb(233,55,27)" rx="2" ry="2" />
<text  x="691.34" y="447.5" ></text>
</g>
<g >
<title>napi_gro_receive (13 samples, 0.01%)</title><rect x="613.5" y="357" width="0.2" height="15.0" fill="rgb(233,191,5)" rx="2" ry="2" />
<text  x="616.53" y="367.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (30 samples, 0.03%)</title><rect x="681.1" y="485" width="0.3" height="15.0" fill="rgb(237,7,18)" rx="2" ry="2" />
<text  x="684.11" y="495.5" ></text>
</g>
<g >
<title>inline_mysql_rwlock_unlock (15 samples, 0.01%)</title><rect x="807.2" y="469" width="0.1" height="15.0" fill="rgb(218,18,9)" rx="2" ry="2" />
<text  x="810.18" y="479.5" ></text>
</g>
<g >
<title>trg::json::member (108 samples, 0.10%)</title><rect x="1149.6" y="517" width="1.1" height="15.0" fill="rgb(216,136,20)" rx="2" ry="2" />
<text  x="1152.57" y="527.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt; &gt; (35 samples, 0.03%)</title><rect x="685.0" y="389" width="0.4" height="15.0" fill="rgb(238,76,8)" rx="2" ry="2" />
<text  x="688.00" y="399.5" ></text>
</g>
<g >
<title>std::map&lt;std::string, std::string, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (74 samples, 0.07%)</title><rect x="675.1" y="485" width="0.8" height="15.0" fill="rgb(253,62,17)" rx="2" ry="2" />
<text  x="678.06" y="495.5" ></text>
</g>
<g >
<title>perf_pmu_enable (40 samples, 0.04%)</title><rect x="320.7" y="245" width="0.4" height="15.0" fill="rgb(247,10,18)" rx="2" ry="2" />
<text  x="323.67" y="255.5" ></text>
</g>
<g >
<title>do_futex (31 samples, 0.03%)</title><rect x="143.3" y="453" width="0.4" height="15.0" fill="rgb(233,138,54)" rx="2" ry="2" />
<text  x="146.33" y="463.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (18 samples, 0.02%)</title><rect x="284.5" y="261" width="0.2" height="15.0" fill="rgb(214,146,51)" rx="2" ry="2" />
<text  x="287.48" y="271.5" ></text>
</g>
<g >
<title>native_rw_rdlock (225 samples, 0.21%)</title><rect x="27.4" y="453" width="2.5" height="15.0" fill="rgb(224,96,1)" rx="2" ry="2" />
<text  x="30.40" y="463.5" ></text>
</g>
<g >
<title>__strchr_sse42 (11 samples, 0.01%)</title><rect x="147.5" y="501" width="0.1" height="15.0" fill="rgb(225,80,44)" rx="2" ry="2" />
<text  x="150.48" y="511.5" ></text>
</g>
<g >
<title>sysret_audit (10 samples, 0.01%)</title><rect x="319.8" y="389" width="0.1" height="15.0" fill="rgb(248,90,43)" rx="2" ry="2" />
<text  x="322.81" y="399.5" ></text>
</g>
<g >
<title>nmi (16 samples, 0.01%)</title><rect x="64.3" y="501" width="0.2" height="15.0" fill="rgb(251,201,3)" rx="2" ry="2" />
<text  x="67.31" y="511.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::get_pos (35 samples, 0.03%)</title><rect x="829.3" y="469" width="0.3" height="15.0" fill="rgb(251,122,38)" rx="2" ry="2" />
<text  x="832.26" y="479.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (10 samples, 0.01%)</title><rect x="181.1" y="405" width="0.1" height="15.0" fill="rgb(215,212,14)" rx="2" ry="2" />
<text  x="184.10" y="415.5" ></text>
</g>
<g >
<title>std::condition_variable::wait_until&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, bool rb::SafeQueueBase&lt;rb::queue_wrapper&lt;bannerd::Engine::MinerTask&gt; &gt;::timedPop&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt; (74 samples, 0.07%)</title><rect x="834.2" y="485" width="0.8" height="15.0" fill="rgb(229,199,23)" rx="2" ry="2" />
<text  x="837.18" y="495.5" ></text>
</g>
<g >
<title>BN_CTX_get (260 samples, 0.24%)</title><rect x="22.4" y="517" width="2.8" height="15.0" fill="rgb(213,31,30)" rx="2" ry="2" />
<text  x="25.39" y="527.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (13 samples, 0.01%)</title><rect x="947.2" y="501" width="0.2" height="15.0" fill="rgb(247,102,53)" rx="2" ry="2" />
<text  x="950.25" y="511.5" ></text>
</g>
<g >
<title>openssl_lock (37 samples, 0.03%)</title><rect x="807.7" y="485" width="0.4" height="15.0" fill="rgb(238,129,31)" rx="2" ry="2" />
<text  x="810.69" y="495.5" ></text>
</g>
<g >
<title>nmi (100 samples, 0.09%)</title><rect x="44.6" y="501" width="1.1" height="15.0" fill="rgb(247,128,10)" rx="2" ry="2" />
<text  x="47.57" y="511.5" ></text>
</g>
<g >
<title>bannerd::store::ActiveCampaignIndex::setPadFilters (26 samples, 0.02%)</title><rect x="431.6" y="389" width="0.3" height="15.0" fill="rgb(246,57,8)" rx="2" ry="2" />
<text  x="434.64" y="399.5" ></text>
</g>
<g >
<title>bannerd::ModelsProxy::tickStatistics (69 samples, 0.06%)</title><rect x="324.6" y="517" width="0.8" height="15.0" fill="rgb(228,43,18)" rx="2" ry="2" />
<text  x="327.60" y="527.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::operator (16 samples, 0.01%)</title><rect x="689.5" y="437" width="0.1" height="15.0" fill="rgb(225,58,34)" rx="2" ry="2" />
<text  x="692.45" y="447.5" ></text>
</g>
<g >
<title>__irqentry_text_start (12 samples, 0.01%)</title><rect x="806.2" y="485" width="0.2" height="15.0" fill="rgb(233,207,39)" rx="2" ry="2" />
<text  x="809.23" y="495.5" ></text>
</g>
<g >
<title>sys_futex (13 samples, 0.01%)</title><rect x="891.6" y="453" width="0.2" height="15.0" fill="rgb(213,68,8)" rx="2" ry="2" />
<text  x="894.63" y="463.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;unsigned char const&amp;, std::string const&amp;&gt;, std::tuple&lt;unsigned char const&amp;, std::string const&amp;&gt;, 0ul, 2ul&gt;::__less (34 samples, 0.03%)</title><rect x="382.0" y="405" width="0.4" height="15.0" fill="rgb(244,216,41)" rx="2" ry="2" />
<text  x="385.01" y="415.5" ></text>
</g>
<g >
<title>std::string::_M_assign (44 samples, 0.04%)</title><rect x="976.5" y="485" width="0.5" height="15.0" fill="rgb(240,85,40)" rx="2" ry="2" />
<text  x="979.54" y="495.5" ></text>
</g>
<g >
<title>tcmalloc::ThreadCache::GetFastPathCache (41 samples, 0.04%)</title><rect x="1138.1" y="485" width="0.4" height="15.0" fill="rgb(229,197,48)" rx="2" ry="2" />
<text  x="1141.09" y="495.5" ></text>
</g>
<g >
<title>nmi (10 samples, 0.01%)</title><rect x="1116.6" y="421" width="0.1" height="15.0" fill="rgb(219,51,43)" rx="2" ry="2" />
<text  x="1119.61" y="431.5" ></text>
</g>
<g >
<title>google::dense_hashtable&lt;unsigned int, unsigned int, std::hash&lt;unsigned int&gt;, google::dense_hash_set&lt;unsigned int, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, google::libc_allocator_with_realloc&lt;unsigned int&gt; &gt;::Identity, google::dense_hash_set&lt;unsigned int, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, google::libc_allocator_with_realloc&lt;unsigned int&gt; &gt;::SetKey, std::equal_to&lt;unsigned int&gt;, google::libc_allocator_with_realloc&lt;unsigned int&gt; &gt;::insert_noresize (36 samples, 0.03%)</title><rect x="436.3" y="453" width="0.4" height="15.0" fill="rgb(209,52,54)" rx="2" ry="2" />
<text  x="439.29" y="463.5" ></text>
</g>
<g >
<title>system_call_after_swapgs (10 samples, 0.01%)</title><rect x="856.1" y="485" width="0.1" height="15.0" fill="rgb(213,25,34)" rx="2" ry="2" />
<text  x="859.12" y="495.5" ></text>
</g>
<g >
<title>ip_local_deliver (11 samples, 0.01%)</title><rect x="613.5" y="261" width="0.2" height="15.0" fill="rgb(230,70,3)" rx="2" ry="2" />
<text  x="616.55" y="271.5" ></text>
</g>
<g >
<title>perf_pmu_enable (240 samples, 0.22%)</title><rect x="301.8" y="357" width="2.6" height="15.0" fill="rgb(210,102,22)" rx="2" ry="2" />
<text  x="304.81" y="367.5" ></text>
</g>
<g >
<title>sys_futex (153 samples, 0.14%)</title><rect x="898.7" y="453" width="1.7" height="15.0" fill="rgb(243,143,22)" rx="2" ry="2" />
<text  x="901.71" y="463.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (12 samples, 0.01%)</title><rect x="613.5" y="309" width="0.2" height="15.0" fill="rgb(227,181,36)" rx="2" ry="2" />
<text  x="616.55" y="319.5" ></text>
</g>
<g >
<title>[libpthread-2.17.so] (17 samples, 0.02%)</title><rect x="133.8" y="501" width="0.2" height="15.0" fill="rgb(207,6,20)" rx="2" ry="2" />
<text  x="136.78" y="511.5" ></text>
</g>
<g >
<title>asn1_check_tlen (71 samples, 0.07%)</title><rect x="311.0" y="517" width="0.7" height="15.0" fill="rgb(209,199,2)" rx="2" ry="2" />
<text  x="313.97" y="527.5" ></text>
</g>
<g >
<title>bannerd::store::ActiveCampaignIndex::setPadFilters (18 samples, 0.02%)</title><rect x="431.3" y="421" width="0.2" height="15.0" fill="rgb(225,127,21)" rx="2" ry="2" />
<text  x="434.33" y="431.5" ></text>
</g>
<g >
<title>native_rw_rdlock (16 samples, 0.01%)</title><rect x="807.0" y="453" width="0.2" height="15.0" fill="rgb(228,74,52)" rx="2" ry="2" />
<text  x="810.00" y="463.5" ></text>
</g>
<g >
<title>native_rw_wrlock (51 samples, 0.05%)</title><rect x="30.6" y="453" width="0.5" height="15.0" fill="rgb(246,110,47)" rx="2" ry="2" />
<text  x="33.57" y="463.5" ></text>
</g>
<g >
<title>bannerd::engine::TargetMessagePacker::fillTargetData (227 samples, 0.21%)</title><rect x="408.4" y="517" width="2.5" height="15.0" fill="rgb(223,157,4)" rx="2" ry="2" />
<text  x="411.43" y="527.5" ></text>
</g>
<g >
<title>memcmp@plt (90 samples, 0.08%)</title><rect x="808.3" y="517" width="0.9" height="15.0" fill="rgb(212,182,20)" rx="2" ry="2" />
<text  x="811.25" y="527.5" ></text>
</g>
<g >
<title>__memchr (11 samples, 0.01%)</title><rect x="815.5" y="453" width="0.1" height="15.0" fill="rgb(206,219,20)" rx="2" ry="2" />
<text  x="818.48" y="463.5" ></text>
</g>
<g >
<title>clock_gettime@plt (15 samples, 0.01%)</title><rect x="630.4" y="517" width="0.2" height="15.0" fill="rgb(211,48,7)" rx="2" ry="2" />
<text  x="633.45" y="527.5" ></text>
</g>
<g >
<title>system_call_fastpath (52 samples, 0.05%)</title><rect x="293.5" y="501" width="0.5" height="15.0" fill="rgb(226,15,48)" rx="2" ry="2" />
<text  x="296.45" y="511.5" ></text>
</g>
<g >
<title>cctz::detail::impl::n_sec (11 samples, 0.01%)</title><rect x="629.6" y="517" width="0.2" height="15.0" fill="rgb(220,111,5)" rx="2" ry="2" />
<text  x="632.65" y="527.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (11 samples, 0.01%)</title><rect x="685.9" y="389" width="0.1" height="15.0" fill="rgb(217,123,47)" rx="2" ry="2" />
<text  x="688.86" y="399.5" ></text>
</g>
<g >
<title>__GI___vsnprintf_chk (37 samples, 0.03%)</title><rect x="191.6" y="517" width="0.5" height="15.0" fill="rgb(241,63,24)" rx="2" ry="2" />
<text  x="194.65" y="527.5" ></text>
</g>
<g >
<title>schedule (292 samples, 0.27%)</title><rect x="185.7" y="421" width="3.2" height="15.0" fill="rgb(240,202,12)" rx="2" ry="2" />
<text  x="188.68" y="431.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;bannerd::TargetingCollection::Record&lt;bannerd::TargetingCollection::CheckParams const&amp;, bannerd::TargetingCollection::CheckRemarketingParams const&amp;, bannerd::TargetingCollection::CheckResults&amp;&gt; const*, std::vector&lt;bannerd::TargetingCollection::Record&lt;bannerd::TargetingCollection::CheckParams const&amp;, bannerd::TargetingCollection::CheckRemarketingParams const&amp;, bannerd::TargetingCollection::CheckResults&amp;&gt;, std::allocator&lt;bannerd::TargetingCollection::Record&lt;bannerd::TargetingCollection::CheckParams const&amp;, bannerd::TargetingCollection::CheckRemarketingParams const&amp;, bannerd::TargetingCollection::CheckResults&amp;&gt; &gt; &gt; &gt;, bannerd::TargetingCollection::Record&lt;bannerd::TargetingCollection::CheckParams const&amp;, bannerd::TargetingCollection::CheckRemarketingParams const&amp;, bannerd::TargetingCollection::CheckResults&amp;&gt;, __gnu_cxx::__ops::_Iter_less_val&gt; (11 samples, 0.01%)</title><rect x="161.4" y="501" width="0.1" height="15.0" fill="rgb(250,150,23)" rx="2" ry="2" />
<text  x="164.43" y="511.5" ></text>
</g>
<g >
<title>tcmalloc::ThreadCache::Deallocate (71 samples, 0.07%)</title><rect x="1125.0" y="453" width="0.8" height="15.0" fill="rgb(205,85,47)" rx="2" ry="2" />
<text  x="1128.00" y="463.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (323 samples, 0.30%)</title><rect x="845.6" y="357" width="3.5" height="15.0" fill="rgb(225,71,27)" rx="2" ry="2" />
<text  x="848.60" y="367.5" ></text>
</g>
<g >
<title>__libc_free (21 samples, 0.02%)</title><rect x="642.1" y="469" width="0.2" height="15.0" fill="rgb(237,8,44)" rx="2" ry="2" />
<text  x="645.10" y="479.5" ></text>
</g>
<g >
<title>tcmalloc::ThreadCache::FreeList::TryPop (12 samples, 0.01%)</title><rect x="166.2" y="453" width="0.1" height="15.0" fill="rgb(213,95,46)" rx="2" ry="2" />
<text  x="169.20" y="463.5" ></text>
</g>
<g >
<title>sysret_check (10 samples, 0.01%)</title><rect x="898.2" y="469" width="0.1" height="15.0" fill="rgb(246,67,48)" rx="2" ry="2" />
<text  x="901.16" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, std::string&gt;, std::_Select1st&lt;std::pair&lt;std::string const, std::string&gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::_M_find_tr&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, void&gt; (18 samples, 0.02%)</title><rect x="689.5" y="469" width="0.1" height="15.0" fill="rgb(226,9,40)" rx="2" ry="2" />
<text  x="692.45" y="479.5" ></text>
</g>
<g >
<title>__nanosleep_nocancel (43 samples, 0.04%)</title><rect x="308.2" y="501" width="0.5" height="15.0" fill="rgb(239,190,51)" rx="2" ry="2" />
<text  x="311.20" y="511.5" ></text>
</g>
<g >
<title>trg::protobuf::bannerd::BannerLimitMsg::SerializeWithCachedSizesToArray (30 samples, 0.03%)</title><rect x="1151.7" y="517" width="0.3" height="15.0" fill="rgb(239,159,35)" rx="2" ry="2" />
<text  x="1154.71" y="527.5" ></text>
</g>
<g >
<title>try_to_wake_up (14 samples, 0.01%)</title><rect x="113.5" y="405" width="0.1" height="15.0" fill="rgb(247,202,36)" rx="2" ry="2" />
<text  x="116.47" y="415.5" ></text>
</g>
<g >
<title>xfs_log_commit_cil (11 samples, 0.01%)</title><rect x="130.1" y="309" width="0.1" height="15.0" fill="rgb(228,180,53)" rx="2" ry="2" />
<text  x="133.08" y="319.5" ></text>
</g>
<g >
<title>system_call_fastpath (13 samples, 0.01%)</title><rect x="142.8" y="485" width="0.1" height="15.0" fill="rgb(253,50,38)" rx="2" ry="2" />
<text  x="145.77" y="495.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (11 samples, 0.01%)</title><rect x="329.1" y="437" width="0.1" height="15.0" fill="rgb(227,25,30)" rx="2" ry="2" />
<text  x="332.12" y="447.5" ></text>
</g>
<g >
<title>futex_wake (16 samples, 0.01%)</title><rect x="893.4" y="421" width="0.2" height="15.0" fill="rgb(238,76,40)" rx="2" ry="2" />
<text  x="896.45" y="431.5" ></text>
</g>
<g >
<title>__memcpy_ssse3_back (13 samples, 0.01%)</title><rect x="144.4" y="501" width="0.2" height="15.0" fill="rgb(244,31,21)" rx="2" ry="2" />
<text  x="147.42" y="511.5" ></text>
</g>
<g >
<title>std::string::_M_copy (57 samples, 0.05%)</title><rect x="972.0" y="485" width="0.6" height="15.0" fill="rgb(253,186,23)" rx="2" ry="2" />
<text  x="974.96" y="495.5" ></text>
</g>
<g >
<title>futex_wait_setup (26 samples, 0.02%)</title><rect x="137.5" y="421" width="0.3" height="15.0" fill="rgb(216,28,40)" rx="2" ry="2" />
<text  x="140.52" y="431.5" ></text>
</g>
<g >
<title>system_call_fastpath (29 samples, 0.03%)</title><rect x="856.2" y="485" width="0.4" height="15.0" fill="rgb(236,148,16)" rx="2" ry="2" />
<text  x="859.23" y="495.5" ></text>
</g>
<g >
<title>futex_wait_setup (44 samples, 0.04%)</title><rect x="286.4" y="437" width="0.5" height="15.0" fill="rgb(249,87,29)" rx="2" ry="2" />
<text  x="289.40" y="447.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::_S_cmp&lt;std::string const&amp;, std::string const&amp;&gt; (130 samples, 0.12%)</title><rect x="945.6" y="437" width="1.4" height="15.0" fill="rgb(223,88,50)" rx="2" ry="2" />
<text  x="948.62" y="447.5" ></text>
</g>
<g >
<title>trg::tarantool_client::epoll_loop::switch_to_recv (82 samples, 0.08%)</title><rect x="1167.3" y="517" width="0.9" height="15.0" fill="rgb(213,21,29)" rx="2" ry="2" />
<text  x="1170.33" y="527.5" ></text>
</g>
<g >
<title>system_call_fastpath (46 samples, 0.04%)</title><rect x="128.0" y="501" width="0.5" height="15.0" fill="rgb(253,33,31)" rx="2" ry="2" />
<text  x="131.04" y="511.5" ></text>
</g>
<g >
<title>std::string::swap (18 samples, 0.02%)</title><rect x="977.1" y="517" width="0.2" height="15.0" fill="rgb(210,175,40)" rx="2" ry="2" />
<text  x="980.12" y="527.5" ></text>
</g>
<g >
<title>__pthread_cond_timedwait (298 samples, 0.28%)</title><rect x="318.3" y="405" width="3.2" height="15.0" fill="rgb(241,12,14)" rx="2" ry="2" />
<text  x="321.25" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::io::CodedOutputStream::WriteVarint64ToArray (18 samples, 0.02%)</title><rect x="708.3" y="517" width="0.2" height="15.0" fill="rgb(242,18,9)" rx="2" ry="2" />
<text  x="711.26" y="527.5" ></text>
</g>
<g >
<title>[bannerd] (68 samples, 0.06%)</title><rect x="127.0" y="517" width="0.8" height="15.0" fill="rgb(220,43,14)" rx="2" ry="2" />
<text  x="130.04" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, std::string&gt;, std::_Select1st&lt;std::pair&lt;std::string const, std::string&gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::_M_find_tr&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, void&gt; (45 samples, 0.04%)</title><rect x="688.5" y="485" width="0.5" height="15.0" fill="rgb(214,17,14)" rx="2" ry="2" />
<text  x="691.52" y="495.5" ></text>
</g>
<g >
<title>neigh_connected_output (10 samples, 0.01%)</title><rect x="285.0" y="293" width="0.1" height="15.0" fill="rgb(218,194,21)" rx="2" ry="2" />
<text  x="287.96" y="303.5" ></text>
</g>
<g >
<title>base::subtle::NoBarrier_CompareAndSwap (11 samples, 0.01%)</title><rect x="1143.8" y="469" width="0.2" height="15.0" fill="rgb(241,200,25)" rx="2" ry="2" />
<text  x="1146.84" y="479.5" ></text>
</g>
<g >
<title>__GI__IO_default_xsputn (13 samples, 0.01%)</title><rect x="986.7" y="453" width="0.1" height="15.0" fill="rgb(247,206,32)" rx="2" ry="2" />
<text  x="989.67" y="463.5" ></text>
</g>
<g >
<title>bannerd::engine::gp_param::var (74 samples, 0.07%)</title><rect x="675.1" y="501" width="0.8" height="15.0" fill="rgb(241,52,23)" rx="2" ry="2" />
<text  x="678.06" y="511.5" ></text>
</g>
<g >
<title>PushLocal (14 samples, 0.01%)</title><rect x="655.4" y="485" width="0.1" height="15.0" fill="rgb(220,31,12)" rx="2" ry="2" />
<text  x="658.37" y="495.5" ></text>
</g>
<g >
<title>tc_free (16 samples, 0.01%)</title><rect x="164.3" y="501" width="0.2" height="15.0" fill="rgb(221,147,42)" rx="2" ry="2" />
<text  x="167.32" y="511.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.isra.13 (49 samples, 0.05%)</title><rect x="146.3" y="293" width="0.5" height="15.0" fill="rgb(228,36,46)" rx="2" ry="2" />
<text  x="149.28" y="303.5" ></text>
</g>
<g >
<title>bannerd::engine::TargetMessagePacker::writeContents (26 samples, 0.02%)</title><rect x="411.5" y="517" width="0.3" height="15.0" fill="rgb(238,169,14)" rx="2" ry="2" />
<text  x="414.53" y="527.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (11 samples, 0.01%)</title><rect x="931.1" y="277" width="0.1" height="15.0" fill="rgb(242,31,21)" rx="2" ry="2" />
<text  x="934.12" y="287.5" ></text>
</g>
<g >
<title>futex_wait (18 samples, 0.02%)</title><rect x="834.8" y="357" width="0.2" height="15.0" fill="rgb(221,141,5)" rx="2" ry="2" />
<text  x="837.79" y="367.5" ></text>
</g>
<g >
<title>bannerd::details::InternalStorage::hasAny (156 samples, 0.14%)</title><rect x="405.3" y="517" width="1.7" height="15.0" fill="rgb(221,7,26)" rx="2" ry="2" />
<text  x="408.25" y="527.5" ></text>
</g>
<g >
<title>bannerd::store::ActiveCampaignIndex::setPadFilters (11 samples, 0.01%)</title><rect x="426.8" y="453" width="0.1" height="15.0" fill="rgb(238,209,12)" rx="2" ry="2" />
<text  x="429.80" y="463.5" ></text>
</g>
<g >
<title>do_futex (26 samples, 0.02%)</title><rect x="856.7" y="453" width="0.3" height="15.0" fill="rgb(220,110,0)" rx="2" ry="2" />
<text  x="859.71" y="463.5" ></text>
</g>
<g >
<title>__equal_range&lt;__gnu_cxx::__normal_iterator&lt;const bannerd::details::InternalStorage::Record*, std::vector&lt;bannerd::details::InternalStorage::Record&gt; &gt;, bannerd::details::InternalStorage::Record, __gnu_cxx::__ops::_Iter_comp_val&lt;(anonymous namespace)::CompareByClass&gt;, __gnu_cxx::__ops::_Val_comp_iter&lt;(anonymous namespace)::CompareByClass&gt; &gt; (2,335 samples, 2.17%)</title><rect x="356.3" y="485" width="25.6" height="15.0" fill="rgb(225,225,7)" rx="2" ry="2" />
<text  x="359.28" y="495.5" >_..</text>
</g>
<g >
<title>banner_raw_msg__iter_unpack_merge (40 samples, 0.04%)</title><rect x="148.4" y="501" width="0.4" height="15.0" fill="rgb(209,169,24)" rx="2" ry="2" />
<text  x="151.38" y="511.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;unsigned char const&amp;, std::string const&amp;&gt;, std::tuple&lt;unsigned char const&amp;, std::string const&amp;&gt;, 1ul, 2ul&gt;::__less (378 samples, 0.35%)</title><rect x="388.2" y="389" width="4.1" height="15.0" fill="rgb(237,2,15)" rx="2" ry="2" />
<text  x="391.19" y="399.5" ></text>
</g>
<g >
<title>bn_mul_add_words (885 samples, 0.82%)</title><rect x="495.1" y="517" width="9.7" height="15.0" fill="rgb(253,136,50)" rx="2" ry="2" />
<text  x="498.11" y="527.5" ></text>
</g>
<g >
<title>std::string::operator std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; (89 samples, 0.08%)</title><rect x="656.8" y="389" width="0.9" height="15.0" fill="rgb(239,200,46)" rx="2" ry="2" />
<text  x="659.77" y="399.5" ></text>
</g>
<g >
<title>system_call_fastpath (17 samples, 0.02%)</title><rect x="893.4" y="469" width="0.2" height="15.0" fill="rgb(234,102,14)" rx="2" ry="2" />
<text  x="896.44" y="479.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;unsigned char const&amp;, std::string const&amp;, unsigned char const&amp;, std::string const&amp;&gt; (907 samples, 0.84%)</title><rect x="382.4" y="437" width="9.9" height="15.0" fill="rgb(235,126,21)" rx="2" ry="2" />
<text  x="385.39" y="447.5" ></text>
</g>
<g >
<title>openssl_lock_function (180 samples, 0.17%)</title><rect x="631.3" y="501" width="2.0" height="15.0" fill="rgb(253,189,20)" rx="2" ry="2" />
<text  x="634.31" y="511.5" ></text>
</g>
<g >
<title>____fput (13 samples, 0.01%)</title><rect x="630.3" y="437" width="0.1" height="15.0" fill="rgb(214,35,48)" rx="2" ry="2" />
<text  x="633.26" y="447.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (12 samples, 0.01%)</title><rect x="643.9" y="469" width="0.1" height="15.0" fill="rgb(208,105,35)" rx="2" ry="2" />
<text  x="646.88" y="479.5" ></text>
</g>
<g >
<title>rapidjson::Transcoder&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::UTF8&lt;char&gt; &gt;::Transcode&lt;rapidjson::GenericStringStream&lt;rapidjson::UTF8&lt;char&gt; &gt;, rapidjson::GenericReader&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::UTF8&lt;char&gt;, rapidjson::CrtAllocator&gt;::StackStream&lt;char&gt; &gt; (14 samples, 0.01%)</title><rect x="832.7" y="485" width="0.1" height="15.0" fill="rgb(219,49,27)" rx="2" ry="2" />
<text  x="835.68" y="495.5" ></text>
</g>
<g >
<title>nmi (14 samples, 0.01%)</title><rect x="68.0" y="501" width="0.2" height="15.0" fill="rgb(243,110,1)" rx="2" ry="2" />
<text  x="71.03" y="511.5" ></text>
</g>
<g >
<title>rb_next (24 samples, 0.02%)</title><rect x="141.8" y="405" width="0.2" height="15.0" fill="rgb(209,66,10)" rx="2" ry="2" />
<text  x="144.76" y="415.5" ></text>
</g>
<g >
<title>enqueue_entity (15 samples, 0.01%)</title><rect x="181.6" y="357" width="0.1" height="15.0" fill="rgb(234,170,31)" rx="2" ry="2" />
<text  x="184.57" y="367.5" ></text>
</g>
<g >
<title>do_free (913 samples, 0.85%)</title><rect x="1113.4" y="485" width="10.1" height="15.0" fill="rgb(235,175,28)" rx="2" ry="2" />
<text  x="1116.45" y="495.5" ></text>
</g>
<g >
<title>std::string::compare (368 samples, 0.34%)</title><rect x="388.3" y="357" width="4.0" height="15.0" fill="rgb(207,71,21)" rx="2" ry="2" />
<text  x="391.30" y="367.5" ></text>
</g>
<g >
<title>lower_bound&lt;const (anonymous namespace)::ProcFunction*, (anonymous namespace)::ProcFunction, (anonymous namespace)::findFunction (828 samples, 0.77%)</title><rect x="658.5" y="453" width="9.1" height="15.0" fill="rgb(229,208,45)" rx="2" ry="2" />
<text  x="661.49" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;::~vector (13 samples, 0.01%)</title><rect x="978.8" y="517" width="0.1" height="15.0" fill="rgb(212,23,14)" rx="2" ry="2" />
<text  x="981.75" y="527.5" ></text>
</g>
<g >
<title>perf_init_event (102 samples, 0.09%)</title><rect x="140.5" y="357" width="1.2" height="15.0" fill="rgb(205,71,24)" rx="2" ry="2" />
<text  x="143.54" y="367.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (19 samples, 0.02%)</title><rect x="489.1" y="501" width="0.2" height="15.0" fill="rgb(253,122,51)" rx="2" ry="2" />
<text  x="492.10" y="511.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (199 samples, 0.18%)</title><rect x="159.0" y="453" width="2.2" height="15.0" fill="rgb(234,43,27)" rx="2" ry="2" />
<text  x="162.02" y="463.5" ></text>
</g>
<g >
<title>native_rw_wrlock (831 samples, 0.77%)</title><rect x="907.7" y="453" width="9.1" height="15.0" fill="rgb(212,24,15)" rx="2" ry="2" />
<text  x="910.73" y="463.5" ></text>
</g>
<g >
<title>bannerd::BannerEx::hasUrl (36 samples, 0.03%)</title><rect x="104.4" y="501" width="0.4" height="15.0" fill="rgb(205,88,5)" rx="2" ry="2" />
<text  x="107.43" y="511.5" ></text>
</g>
<g >
<title>tick_sched_timer (24 samples, 0.02%)</title><rect x="598.2" y="421" width="0.3" height="15.0" fill="rgb(221,150,8)" rx="2" ry="2" />
<text  x="601.24" y="431.5" ></text>
</g>
<g >
<title>ip_queue_xmit (53 samples, 0.05%)</title><rect x="284.3" y="341" width="0.6" height="15.0" fill="rgb(205,153,22)" rx="2" ry="2" />
<text  x="287.31" y="351.5" ></text>
</g>
<g >
<title>std::string::_M_rep (10 samples, 0.01%)</title><rect x="962.8" y="501" width="0.1" height="15.0" fill="rgb(250,123,6)" rx="2" ry="2" />
<text  x="965.81" y="511.5" ></text>
</g>
<g >
<title>file_update_time (35 samples, 0.03%)</title><rect x="129.8" y="389" width="0.4" height="15.0" fill="rgb(212,117,44)" rx="2" ry="2" />
<text  x="132.83" y="399.5" ></text>
</g>
<g >
<title>RSA_size (12 samples, 0.01%)</title><rect x="116.3" y="517" width="0.1" height="15.0" fill="rgb(234,181,14)" rx="2" ry="2" />
<text  x="119.26" y="527.5" ></text>
</g>
<g >
<title>std::string::operator std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; (37 samples, 0.03%)</title><rect x="675.4" y="405" width="0.4" height="15.0" fill="rgb(232,166,26)" rx="2" ry="2" />
<text  x="678.42" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, rb::Logger&gt;, std::_Select1st&lt;std::pair&lt;std::string const, rb::Logger&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, rb::Logger&gt; &gt; &gt;::find (11 samples, 0.01%)</title><rect x="925.7" y="517" width="0.2" height="15.0" fill="rgb(254,84,13)" rx="2" ry="2" />
<text  x="928.73" y="527.5" ></text>
</g>
<g >
<title>rb::SafeQueueBase&lt;rb::queue_wrapper&lt;std::list&lt;bannerd::engine::DebugCookieTask, std::allocator&lt;bannerd::engine::DebugCookieTask&gt; &gt; &gt; &gt;::tryPop (18 samples, 0.02%)</title><rect x="322.0" y="501" width="0.2" height="15.0" fill="rgb(248,128,1)" rx="2" ry="2" />
<text  x="324.96" y="511.5" ></text>
</g>
<g >
<title>std::map&lt;std::string, std::string, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (202 samples, 0.19%)</title><rect x="655.8" y="469" width="2.2" height="15.0" fill="rgb(209,135,31)" rx="2" ry="2" />
<text  x="658.78" y="479.5" ></text>
</g>
<g >
<title>d2i_RSAPublicKey (12 samples, 0.01%)</title><rect x="630.6" y="517" width="0.2" height="15.0" fill="rgb(248,151,53)" rx="2" ry="2" />
<text  x="633.65" y="527.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_set_length_and_sharable (26 samples, 0.02%)</title><rect x="951.9" y="501" width="0.3" height="15.0" fill="rgb(249,153,26)" rx="2" ry="2" />
<text  x="954.90" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;&amp;&amp;&gt;, std::tuple&lt;&gt; &gt; (37 samples, 0.03%)</title><rect x="923.0" y="517" width="0.4" height="15.0" fill="rgb(240,119,2)" rx="2" ry="2" />
<text  x="926.00" y="527.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (30 samples, 0.03%)</title><rect x="1164.3" y="373" width="0.3" height="15.0" fill="rgb(227,181,26)" rx="2" ry="2" />
<text  x="1167.31" y="383.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (31 samples, 0.03%)</title><rect x="598.2" y="453" width="0.3" height="15.0" fill="rgb(219,18,34)" rx="2" ry="2" />
<text  x="601.20" y="463.5" ></text>
</g>
<g >
<title>openssl_lock (1,402 samples, 1.30%)</title><rect x="901.5" y="485" width="15.4" height="15.0" fill="rgb(228,63,32)" rx="2" ry="2" />
<text  x="904.50" y="495.5" ></text>
</g>
<g >
<title>ctx_sched_in (140 samples, 0.13%)</title><rect x="300.3" y="341" width="1.5" height="15.0" fill="rgb(224,112,33)" rx="2" ry="2" />
<text  x="303.25" y="351.5" ></text>
</g>
<g >
<title>std::string::_M_disjunct (22 samples, 0.02%)</title><rect x="965.8" y="501" width="0.2" height="15.0" fill="rgb(243,91,27)" rx="2" ry="2" />
<text  x="968.76" y="511.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (11 samples, 0.01%)</title><rect x="195.0" y="341" width="0.2" height="15.0" fill="rgb(218,76,16)" rx="2" ry="2" />
<text  x="198.03" y="351.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (71 samples, 0.07%)</title><rect x="282.2" y="421" width="0.8" height="15.0" fill="rgb(238,88,30)" rx="2" ry="2" />
<text  x="285.18" y="431.5" ></text>
</g>
<g >
<title>tcmalloc::ThreadCache::FreeList::TryPop (391 samples, 0.36%)</title><rect x="1128.0" y="469" width="4.3" height="15.0" fill="rgb(236,4,28)" rx="2" ry="2" />
<text  x="1130.99" y="479.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (107 samples, 0.10%)</title><rect x="159.5" y="405" width="1.1" height="15.0" fill="rgb(244,47,2)" rx="2" ry="2" />
<text  x="162.45" y="415.5" ></text>
</g>
<g >
<title>bn_expand2 (16 samples, 0.01%)</title><rect x="36.6" y="501" width="0.2" height="15.0" fill="rgb(253,142,17)" rx="2" ry="2" />
<text  x="39.63" y="511.5" ></text>
</g>
<g >
<title>engine_table_select (74 samples, 0.07%)</title><rect x="642.9" y="517" width="0.9" height="15.0" fill="rgb(216,128,42)" rx="2" ry="2" />
<text  x="645.95" y="527.5" ></text>
</g>
<g >
<title>__exchange_and_add (10 samples, 0.01%)</title><rect x="329.1" y="421" width="0.1" height="15.0" fill="rgb(210,48,52)" rx="2" ry="2" />
<text  x="332.13" y="431.5" ></text>
</g>
<g >
<title>__perf_event_enable (18 samples, 0.02%)</title><rect x="802.3" y="405" width="0.2" height="15.0" fill="rgb(210,42,51)" rx="2" ry="2" />
<text  x="805.26" y="415.5" ></text>
</g>
<g >
<title>futex_wake (16 samples, 0.01%)</title><rect x="113.4" y="437" width="0.2" height="15.0" fill="rgb(246,216,52)" rx="2" ry="2" />
<text  x="116.44" y="447.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::operator (161 samples, 0.15%)</title><rect x="656.0" y="421" width="1.7" height="15.0" fill="rgb(231,13,38)" rx="2" ry="2" />
<text  x="658.98" y="431.5" ></text>
</g>
<g >
<title>operator (10 samples, 0.01%)</title><rect x="322.8" y="405" width="0.1" height="15.0" fill="rgb(244,168,31)" rx="2" ry="2" />
<text  x="325.77" y="415.5" ></text>
</g>
<g >
<title>futex_wait (971 samples, 0.90%)</title><rect x="296.4" y="453" width="10.6" height="15.0" fill="rgb(246,5,18)" rx="2" ry="2" />
<text  x="299.40" y="463.5" ></text>
</g>
<g >
<title>add_string (97 samples, 0.09%)</title><rect x="309.9" y="517" width="1.0" height="15.0" fill="rgb(211,76,42)" rx="2" ry="2" />
<text  x="312.87" y="527.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (22 samples, 0.02%)</title><rect x="992.8" y="293" width="0.2" height="15.0" fill="rgb(220,30,32)" rx="2" ry="2" />
<text  x="995.81" y="303.5" ></text>
</g>
<g >
<title>call_softirq (12 samples, 0.01%)</title><rect x="806.2" y="437" width="0.2" height="15.0" fill="rgb(215,207,7)" rx="2" ry="2" />
<text  x="809.23" y="447.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::wideAnd (34 samples, 0.03%)</title><rect x="1097.1" y="501" width="0.4" height="15.0" fill="rgb(253,208,25)" rx="2" ry="2" />
<text  x="1100.14" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::_Identity&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::find (29 samples, 0.03%)</title><rect x="701.5" y="485" width="0.4" height="15.0" fill="rgb(231,214,1)" rx="2" ry="2" />
<text  x="704.53" y="495.5" ></text>
</g>
<g >
<title>bannerd::engine::TargetMessagePacker::writeYoulaCategories (13 samples, 0.01%)</title><rect x="413.0" y="517" width="0.2" height="15.0" fill="rgb(206,85,19)" rx="2" ry="2" />
<text  x="416.03" y="527.5" ></text>
</g>
<g >
<title>std::string::size (734 samples, 0.68%)</title><rect x="397.2" y="405" width="8.0" height="15.0" fill="rgb(216,40,21)" rx="2" ry="2" />
<text  x="400.18" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::io::CodedOutputStream::WriteTagToArray (12 samples, 0.01%)</title><rect x="1155.3" y="469" width="0.1" height="15.0" fill="rgb(229,87,18)" rx="2" ry="2" />
<text  x="1158.26" y="479.5" ></text>
</g>
<g >
<title>nmi (67 samples, 0.06%)</title><rect x="504.1" y="501" width="0.7" height="15.0" fill="rgb(220,29,14)" rx="2" ry="2" />
<text  x="507.06" y="511.5" ></text>
</g>
<g >
<title>___snprintf_chk (12 samples, 0.01%)</title><rect x="833.7" y="485" width="0.2" height="15.0" fill="rgb(242,198,2)" rx="2" ry="2" />
<text  x="836.74" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, unsigned int&gt;, std::_Select1st&lt;std::pair&lt;std::string const, unsigned int&gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, unsigned int&gt; &gt; &gt;::_M_lower_bound_tr&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, void&gt; (100 samples, 0.09%)</title><rect x="700.3" y="469" width="1.1" height="15.0" fill="rgb(242,0,45)" rx="2" ry="2" />
<text  x="703.35" y="479.5" ></text>
</g>
<g >
<title>std::__fill_a&lt;unsigned char&gt; (25 samples, 0.02%)</title><rect x="979.2" y="421" width="0.2" height="15.0" fill="rgb(205,31,33)" rx="2" ry="2" />
<text  x="982.16" y="431.5" ></text>
</g>
<g >
<title>bannerd::store::ActiveCampaignIndex::ConstIterator::operator (29 samples, 0.03%)</title><rect x="416.9" y="517" width="0.3" height="15.0" fill="rgb(213,26,46)" rx="2" ry="2" />
<text  x="419.88" y="527.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (34 samples, 0.03%)</title><rect x="917.4" y="517" width="0.4" height="15.0" fill="rgb(239,57,8)" rx="2" ry="2" />
<text  x="920.42" y="527.5" ></text>
</g>
<g >
<title>system_call_after_swapgs (67 samples, 0.06%)</title><rect x="288.9" y="501" width="0.8" height="15.0" fill="rgb(236,19,21)" rx="2" ry="2" />
<text  x="291.94" y="511.5" ></text>
</g>
<g >
<title>bn_mul4x_mont (4,436 samples, 4.12%)</title><rect x="446.5" y="517" width="48.6" height="15.0" fill="rgb(208,37,53)" rx="2" ry="2" />
<text  x="449.52" y="527.5" >bn_m..</text>
</g>
<g >
<title>system_call_fastpath (20 samples, 0.02%)</title><rect x="169.0" y="501" width="0.2" height="15.0" fill="rgb(211,134,3)" rx="2" ry="2" />
<text  x="172.03" y="511.5" ></text>
</g>
<g >
<title>sys_futex (29 samples, 0.03%)</title><rect x="856.2" y="469" width="0.4" height="15.0" fill="rgb(232,119,36)" rx="2" ry="2" />
<text  x="859.23" y="479.5" ></text>
</g>
<g >
<title>do_free (212 samples, 0.20%)</title><rect x="1123.5" y="485" width="2.3" height="15.0" fill="rgb(248,135,23)" rx="2" ry="2" />
<text  x="1126.45" y="495.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (290 samples, 0.27%)</title><rect x="894.8" y="485" width="3.2" height="15.0" fill="rgb(226,177,35)" rx="2" ry="2" />
<text  x="897.79" y="495.5" ></text>
</g>
<g >
<title>system_call_fastpath (27 samples, 0.03%)</title><rect x="318.8" y="373" width="0.3" height="15.0" fill="rgb(229,60,3)" rx="2" ry="2" />
<text  x="321.80" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, std::string&gt;, std::_Select1st&lt;std::pair&lt;std::string const, std::string&gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::_M_lower_bound_tr&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, void&gt; (69 samples, 0.06%)</title><rect x="675.1" y="453" width="0.7" height="15.0" fill="rgb(246,115,49)" rx="2" ry="2" />
<text  x="678.07" y="463.5" ></text>
</g>
<g >
<title>_raw_qspin_lock (10 samples, 0.01%)</title><rect x="290.4" y="437" width="0.1" height="15.0" fill="rgb(241,112,12)" rx="2" ry="2" />
<text  x="293.44" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, std::string&gt;, std::_Select1st&lt;std::pair&lt;std::string const, std::string&gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::_M_find_tr&lt;char const*, void&gt; (12 samples, 0.01%)</title><rect x="699.0" y="485" width="0.2" height="15.0" fill="rgb(220,82,34)" rx="2" ry="2" />
<text  x="702.02" y="495.5" ></text>
</g>
<g >
<title>net_rx_action (16 samples, 0.01%)</title><rect x="613.5" y="405" width="0.2" height="15.0" fill="rgb(207,153,52)" rx="2" ry="2" />
<text  x="616.51" y="415.5" ></text>
</g>
<g >
<title>perf_event_update_userpage (10 samples, 0.01%)</title><rect x="188.2" y="245" width="0.1" height="15.0" fill="rgb(244,0,46)" rx="2" ry="2" />
<text  x="191.18" y="255.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::operator (169 samples, 0.16%)</title><rect x="682.5" y="421" width="1.9" height="15.0" fill="rgb(221,125,41)" rx="2" ry="2" />
<text  x="685.50" y="431.5" ></text>
</g>
<g >
<title>dequeue_task_fair (15 samples, 0.01%)</title><rect x="899.3" y="341" width="0.2" height="15.0" fill="rgb(209,154,15)" rx="2" ry="2" />
<text  x="902.29" y="351.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::_S_cmp&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const&amp;, std::string const&amp;&gt; (22 samples, 0.02%)</title><rect x="657.7" y="421" width="0.3" height="15.0" fill="rgb(229,132,29)" rx="2" ry="2" />
<text  x="660.75" y="431.5" ></text>
</g>
<g >
<title>native_write_msr_safe (25 samples, 0.02%)</title><rect x="320.8" y="181" width="0.3" height="15.0" fill="rgb(206,2,36)" rx="2" ry="2" />
<text  x="323.80" y="191.5" ></text>
</g>
<g >
<title>do_futex (17 samples, 0.02%)</title><rect x="988.1" y="453" width="0.2" height="15.0" fill="rgb(213,111,50)" rx="2" ry="2" />
<text  x="991.12" y="463.5" ></text>
</g>
<g >
<title>__audit_syscall_entry (15 samples, 0.01%)</title><rect x="134.4" y="469" width="0.1" height="15.0" fill="rgb(239,12,45)" rx="2" ry="2" />
<text  x="137.37" y="479.5" ></text>
</g>
<g >
<title>__pthread_cond_timedwait (1,174 samples, 1.09%)</title><rect x="294.3" y="517" width="12.9" height="15.0" fill="rgb(219,159,38)" rx="2" ry="2" />
<text  x="297.32" y="527.5" ></text>
</g>
<g >
<title>_M_bucket_index (10 samples, 0.01%)</title><rect x="167.9" y="485" width="0.1" height="15.0" fill="rgb(224,144,9)" rx="2" ry="2" />
<text  x="170.89" y="495.5" ></text>
</g>
<g >
<title>deactivate_task (61 samples, 0.06%)</title><rect x="187.0" y="389" width="0.6" height="15.0" fill="rgb(254,83,18)" rx="2" ry="2" />
<text  x="189.96" y="399.5" ></text>
</g>
<g >
<title>perf_event_fork (29 samples, 0.03%)</title><rect x="138.8" y="421" width="0.3" height="15.0" fill="rgb(249,140,45)" rx="2" ry="2" />
<text  x="141.76" y="431.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (14 samples, 0.01%)</title><rect x="1150.1" y="453" width="0.1" height="15.0" fill="rgb(208,220,25)" rx="2" ry="2" />
<text  x="1153.09" y="463.5" ></text>
</g>
<g >
<title>httpd::responder::send (11 samples, 0.01%)</title><rect x="710.6" y="517" width="0.2" height="15.0" fill="rgb(227,174,29)" rx="2" ry="2" />
<text  x="713.65" y="527.5" ></text>
</g>
<g >
<title>sys_epoll_ctl (106 samples, 0.10%)</title><rect x="316.1" y="469" width="1.1" height="15.0" fill="rgb(209,203,13)" rx="2" ry="2" />
<text  x="319.07" y="479.5" ></text>
</g>
<g >
<title>bannerd::UserEventsFiltered::begin (10 samples, 0.01%)</title><rect x="409.7" y="501" width="0.1" height="15.0" fill="rgb(230,217,5)" rx="2" ry="2" />
<text  x="412.67" y="511.5" ></text>
</g>
<g >
<title>bannerd::UserEventsFiltered::iterator::iterator (10 samples, 0.01%)</title><rect x="409.7" y="485" width="0.1" height="15.0" fill="rgb(232,94,3)" rx="2" ry="2" />
<text  x="412.67" y="495.5" ></text>
</g>
<g >
<title>system_call_fastpath (86 samples, 0.08%)</title><rect x="193.3" y="501" width="1.0" height="15.0" fill="rgb(206,26,46)" rx="2" ry="2" />
<text  x="196.31" y="511.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (49 samples, 0.05%)</title><rect x="924.5" y="421" width="0.6" height="15.0" fill="rgb(213,143,20)" rx="2" ry="2" />
<text  x="927.55" y="431.5" ></text>
</g>
<g >
<title>ENGINE_get_default_RSA (10 samples, 0.01%)</title><rect x="99.2" y="517" width="0.1" height="15.0" fill="rgb(225,115,43)" rx="2" ry="2" />
<text  x="102.17" y="527.5" ></text>
</g>
<g >
<title>sysret_check (35 samples, 0.03%)</title><rect x="295.0" y="501" width="0.4" height="15.0" fill="rgb(220,115,22)" rx="2" ry="2" />
<text  x="298.03" y="511.5" ></text>
</g>
<g >
<title>__shutdown (12 samples, 0.01%)</title><rect x="308.1" y="517" width="0.1" height="15.0" fill="rgb(208,120,51)" rx="2" ry="2" />
<text  x="311.06" y="527.5" ></text>
</g>
<g >
<title>__do_softirq (18 samples, 0.02%)</title><rect x="284.5" y="213" width="0.2" height="15.0" fill="rgb(226,58,21)" rx="2" ry="2" />
<text  x="287.48" y="223.5" ></text>
</g>
<g >
<title>tnt_reply (14 samples, 0.01%)</title><rect x="1170.1" y="485" width="0.2" height="15.0" fill="rgb(219,204,40)" rx="2" ry="2" />
<text  x="1173.13" y="495.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (14 samples, 0.01%)</title><rect x="1156.6" y="485" width="0.2" height="15.0" fill="rgb(217,108,6)" rx="2" ry="2" />
<text  x="1159.63" y="495.5" ></text>
</g>
<g >
<title>perf_swevent_add (16 samples, 0.01%)</title><rect x="188.1" y="261" width="0.2" height="15.0" fill="rgb(206,27,42)" rx="2" ry="2" />
<text  x="191.11" y="271.5" ></text>
</g>
<g >
<title>tcmalloc::ThreadCache::FetchFromCentralCache (12 samples, 0.01%)</title><rect x="1147.1" y="517" width="0.1" height="15.0" fill="rgb(250,199,2)" rx="2" ry="2" />
<text  x="1150.08" y="527.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (12 samples, 0.01%)</title><rect x="284.7" y="181" width="0.2" height="15.0" fill="rgb(248,27,8)" rx="2" ry="2" />
<text  x="287.72" y="191.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (20 samples, 0.02%)</title><rect x="802.0" y="453" width="0.3" height="15.0" fill="rgb(240,157,47)" rx="2" ry="2" />
<text  x="805.04" y="463.5" ></text>
</g>
<g >
<title>check_preempt_curr (11 samples, 0.01%)</title><rect x="181.8" y="373" width="0.1" height="15.0" fill="rgb(222,6,49)" rx="2" ry="2" />
<text  x="184.79" y="383.5" ></text>
</g>
<g >
<title>ctx_sched_in (24 samples, 0.02%)</title><rect x="320.4" y="229" width="0.3" height="15.0" fill="rgb(235,24,54)" rx="2" ry="2" />
<text  x="323.41" y="239.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.isra.13 (237 samples, 0.22%)</title><rect x="301.8" y="309" width="2.6" height="15.0" fill="rgb(212,5,26)" rx="2" ry="2" />
<text  x="304.84" y="319.5" ></text>
</g>
<g >
<title>bannerd::store::ActiveCampaignIndex::setPadFilters (142 samples, 0.13%)</title><rect x="434.3" y="501" width="1.6" height="15.0" fill="rgb(254,212,15)" rx="2" ry="2" />
<text  x="437.29" y="511.5" ></text>
</g>
<g >
<title>schedule (89 samples, 0.08%)</title><rect x="898.9" y="389" width="1.0" height="15.0" fill="rgb(236,67,10)" rx="2" ry="2" />
<text  x="901.89" y="399.5" ></text>
</g>
<g >
<title>operator (419 samples, 0.39%)</title><rect x="692.4" y="437" width="4.6" height="15.0" fill="rgb(252,180,36)" rx="2" ry="2" />
<text  x="695.39" y="447.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (1,198 samples, 1.11%)</title><rect x="169.3" y="517" width="13.1" height="15.0" fill="rgb(242,60,37)" rx="2" ry="2" />
<text  x="172.26" y="527.5" ></text>
</g>
<g >
<title>nmi (16 samples, 0.01%)</title><rect x="126.8" y="501" width="0.2" height="15.0" fill="rgb(211,10,31)" rx="2" ry="2" />
<text  x="129.82" y="511.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (73 samples, 0.07%)</title><rect x="284.1" y="389" width="0.8" height="15.0" fill="rgb(215,72,15)" rx="2" ry="2" />
<text  x="287.13" y="399.5" ></text>
</g>
<g >
<title>tcp_write_xmit (12 samples, 0.01%)</title><rect x="284.9" y="389" width="0.2" height="15.0" fill="rgb(210,127,10)" rx="2" ry="2" />
<text  x="287.94" y="399.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.isra.13 (18 samples, 0.02%)</title><rect x="802.3" y="325" width="0.2" height="15.0" fill="rgb(235,143,42)" rx="2" ry="2" />
<text  x="805.26" y="335.5" ></text>
</g>
<g >
<title>do_softirq (10 samples, 0.01%)</title><rect x="381.0" y="421" width="0.1" height="15.0" fill="rgb(224,86,13)" rx="2" ry="2" />
<text  x="384.02" y="431.5" ></text>
</g>
<g >
<title>tcmalloc::CentralFreeList::RemoveRange (205 samples, 0.19%)</title><rect x="1143.8" y="517" width="2.2" height="15.0" fill="rgb(253,164,27)" rx="2" ry="2" />
<text  x="1146.76" y="527.5" ></text>
</g>
<g >
<title>idle_balance (88 samples, 0.08%)</title><rect x="305.4" y="389" width="1.0" height="15.0" fill="rgb(254,132,32)" rx="2" ry="2" />
<text  x="308.39" y="399.5" ></text>
</g>
<g >
<title>__audit_syscall_entry (12 samples, 0.01%)</title><rect x="315.1" y="469" width="0.1" height="15.0" fill="rgb(225,82,38)" rx="2" ry="2" />
<text  x="318.08" y="479.5" ></text>
</g>
<g >
<title>net_rx_action (10 samples, 0.01%)</title><rect x="381.0" y="373" width="0.1" height="15.0" fill="rgb(223,194,6)" rx="2" ry="2" />
<text  x="384.02" y="383.5" ></text>
</g>
<g >
<title>getproc (25 samples, 0.02%)</title><rect x="322.6" y="501" width="0.3" height="15.0" fill="rgb(220,91,45)" rx="2" ry="2" />
<text  x="325.65" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long long, target::dynamic_bitset::AlignedAllocator&lt;unsigned long long&gt; &gt;::vector (24 samples, 0.02%)</title><rect x="831.4" y="469" width="0.3" height="15.0" fill="rgb(238,49,3)" rx="2" ry="2" />
<text  x="834.40" y="479.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (13 samples, 0.01%)</title><rect x="945.3" y="437" width="0.1" height="15.0" fill="rgb(232,149,52)" rx="2" ry="2" />
<text  x="948.26" y="447.5" ></text>
</g>
<g >
<title>do_futex (94 samples, 0.09%)</title><rect x="135.2" y="453" width="1.0" height="15.0" fill="rgb(220,137,27)" rx="2" ry="2" />
<text  x="138.19" y="463.5" ></text>
</g>
<g >
<title>getprocProductUrl (53 samples, 0.05%)</title><rect x="702.0" y="517" width="0.5" height="15.0" fill="rgb(242,220,30)" rx="2" ry="2" />
<text  x="704.96" y="527.5" ></text>
</g>
<g >
<title>processTargeting (1,051 samples, 0.98%)</title><rect x="820.4" y="517" width="11.5" height="15.0" fill="rgb(235,184,16)" rx="2" ry="2" />
<text  x="823.36" y="527.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (134 samples, 0.12%)</title><rect x="927.4" y="421" width="1.5" height="15.0" fill="rgb(235,27,47)" rx="2" ry="2" />
<text  x="930.43" y="431.5" ></text>
</g>
<g >
<title>strlen@plt (169 samples, 0.16%)</title><rect x="988.4" y="517" width="1.9" height="15.0" fill="rgb(222,32,20)" rx="2" ry="2" />
<text  x="991.41" y="527.5" ></text>
</g>
<g >
<title>BN_div (388 samples, 0.36%)</title><rect x="47.6" y="517" width="4.2" height="15.0" fill="rgb(224,203,8)" rx="2" ry="2" />
<text  x="50.55" y="527.5" ></text>
</g>
<g >
<title>flexible_sched_in (60 samples, 0.06%)</title><rect x="301.1" y="309" width="0.7" height="15.0" fill="rgb(228,184,2)" rx="2" ry="2" />
<text  x="304.11" y="319.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::operator|= (77 samples, 0.07%)</title><rect x="1104.9" y="485" width="0.9" height="15.0" fill="rgb(225,170,27)" rx="2" ry="2" />
<text  x="1107.95" y="495.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::_S_cmp&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const&amp;, std::string const&amp;&gt; (11 samples, 0.01%)</title><rect x="688.3" y="421" width="0.2" height="15.0" fill="rgb(252,216,5)" rx="2" ry="2" />
<text  x="691.34" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::MessageLite::~MessageLite (16 samples, 0.01%)</title><rect x="705.5" y="517" width="0.1" height="15.0" fill="rgb(208,77,47)" rx="2" ry="2" />
<text  x="708.47" y="527.5" ></text>
</g>
<g >
<title>futex_wake_op (17 samples, 0.02%)</title><rect x="294.1" y="453" width="0.2" height="15.0" fill="rgb(217,6,17)" rx="2" ry="2" />
<text  x="297.12" y="463.5" ></text>
</g>
<g >
<title>tcmalloc::ThreadCache::IncreaseCacheLimit (12 samples, 0.01%)</title><rect x="1148.1" y="501" width="0.1" height="15.0" fill="rgb(244,11,12)" rx="2" ry="2" />
<text  x="1151.10" y="511.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (44 samples, 0.04%)</title><rect x="976.5" y="469" width="0.5" height="15.0" fill="rgb(231,39,27)" rx="2" ry="2" />
<text  x="979.54" y="479.5" ></text>
</g>
<g >
<title>ip_output (11 samples, 0.01%)</title><rect x="285.0" y="325" width="0.1" height="15.0" fill="rgb(242,170,33)" rx="2" ry="2" />
<text  x="287.95" y="335.5" ></text>
</g>
<g >
<title>iomap_write_actor (16 samples, 0.01%)</title><rect x="129.6" y="373" width="0.2" height="15.0" fill="rgb(254,125,10)" rx="2" ry="2" />
<text  x="132.58" y="383.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::operator (10 samples, 0.01%)</title><rect x="925.1" y="501" width="0.1" height="15.0" fill="rgb(225,207,13)" rx="2" ry="2" />
<text  x="928.08" y="511.5" ></text>
</g>
<g >
<title>finish_task_switch (11 samples, 0.01%)</title><rect x="195.0" y="357" width="0.2" height="15.0" fill="rgb(245,200,44)" rx="2" ry="2" />
<text  x="198.03" y="367.5" ></text>
</g>
<g >
<title>SpinLock::Lock (11 samples, 0.01%)</title><rect x="1143.8" y="501" width="0.2" height="15.0" fill="rgb(217,208,26)" rx="2" ry="2" />
<text  x="1146.84" y="511.5" ></text>
</g>
<g >
<title>tcmalloc::PageHeap::GetDescriptor (24 samples, 0.02%)</title><rect x="1113.6" y="453" width="0.3" height="15.0" fill="rgb(214,73,54)" rx="2" ry="2" />
<text  x="1116.59" y="463.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (25 samples, 0.02%)</title><rect x="681.2" y="421" width="0.2" height="15.0" fill="rgb(237,217,13)" rx="2" ry="2" />
<text  x="684.16" y="431.5" ></text>
</g>
<g >
<title>std::string::reserve (342 samples, 0.32%)</title><rect x="972.6" y="517" width="3.7" height="15.0" fill="rgb(217,121,42)" rx="2" ry="2" />
<text  x="975.58" y="527.5" ></text>
</g>
<g >
<title>auditsys (13 samples, 0.01%)</title><rect x="192.1" y="501" width="0.1" height="15.0" fill="rgb(226,139,25)" rx="2" ry="2" />
<text  x="195.09" y="511.5" ></text>
</g>
<g >
<title>std::string::swap (17 samples, 0.02%)</title><rect x="977.1" y="501" width="0.2" height="15.0" fill="rgb(245,115,30)" rx="2" ry="2" />
<text  x="980.13" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::destroy&lt;std::pair&lt;std::string const, std::string&gt; &gt; (134 samples, 0.12%)</title><rect x="927.4" y="453" width="1.5" height="15.0" fill="rgb(225,7,38)" rx="2" ry="2" />
<text  x="930.43" y="463.5" ></text>
</g>
<g >
<title>update_time (32 samples, 0.03%)</title><rect x="129.9" y="373" width="0.3" height="15.0" fill="rgb(211,20,14)" rx="2" ry="2" />
<text  x="132.87" y="383.5" ></text>
</g>
<g >
<title>system_call_fastpath (750 samples, 0.70%)</title><rect x="174.1" y="501" width="8.3" height="15.0" fill="rgb(210,65,1)" rx="2" ry="2" />
<text  x="177.14" y="511.5" ></text>
</g>
<g >
<title>std::string::operator+= (110 samples, 0.10%)</title><rect x="415.6" y="501" width="1.2" height="15.0" fill="rgb(239,183,6)" rx="2" ry="2" />
<text  x="418.62" y="511.5" ></text>
</g>
<g >
<title>setCampaign (53 samples, 0.05%)</title><rect x="427.2" y="469" width="0.5" height="15.0" fill="rgb(247,180,11)" rx="2" ry="2" />
<text  x="430.15" y="479.5" ></text>
</g>
<g >
<title>BN_bn2bin (734 samples, 0.68%)</title><rect x="37.6" y="517" width="8.1" height="15.0" fill="rgb(222,190,5)" rx="2" ry="2" />
<text  x="40.63" y="527.5" ></text>
</g>
<g >
<title>reset&lt;profile::build_negative_string_set, std::vector&lt;const bannerd::store::ActiveCampaign*&gt;, bannerd::store::ActiveCampaignIndex::build (22 samples, 0.02%)</title><rect x="417.6" y="501" width="0.2" height="15.0" fill="rgb(212,211,5)" rx="2" ry="2" />
<text  x="420.57" y="511.5" ></text>
</g>
<g >
<title>sys_clone (367 samples, 0.34%)</title><rect x="138.2" y="469" width="4.0" height="15.0" fill="rgb(212,126,53)" rx="2" ry="2" />
<text  x="141.21" y="479.5" ></text>
</g>
<g >
<title>__schedule (282 samples, 0.26%)</title><rect x="185.8" y="405" width="3.0" height="15.0" fill="rgb(250,187,7)" rx="2" ry="2" />
<text  x="188.76" y="415.5" ></text>
</g>
<g >
<title>printbuffer (414 samples, 0.38%)</title><rect x="815.8" y="517" width="4.6" height="15.0" fill="rgb(221,100,40)" rx="2" ry="2" />
<text  x="818.82" y="527.5" ></text>
</g>
<g >
<title>tcmalloc::ThreadCache::Allocate (38 samples, 0.04%)</title><rect x="1125.9" y="485" width="0.4" height="15.0" fill="rgb(237,9,45)" rx="2" ry="2" />
<text  x="1128.86" y="495.5" ></text>
</g>
<g >
<title>sys_futex (109 samples, 0.10%)</title><rect x="136.7" y="469" width="1.2" height="15.0" fill="rgb(212,75,9)" rx="2" ry="2" />
<text  x="139.68" y="479.5" ></text>
</g>
<g >
<title>bannerd::store::ActiveCampaignIndex::ConstIterator::operator++ (113 samples, 0.10%)</title><rect x="828.4" y="501" width="1.2" height="15.0" fill="rgb(248,145,36)" rx="2" ry="2" />
<text  x="831.41" y="511.5" ></text>
</g>
<g >
<title>nmi (43 samples, 0.04%)</title><rect x="111.1" y="501" width="0.4" height="15.0" fill="rgb(225,158,36)" rx="2" ry="2" />
<text  x="114.06" y="511.5" ></text>
</g>
<g >
<title>CRYPTO_new_ex_data (23 samples, 0.02%)</title><rect x="98.9" y="517" width="0.3" height="15.0" fill="rgb(228,189,8)" rx="2" ry="2" />
<text  x="101.92" y="527.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock (13 samples, 0.01%)</title><rect x="322.0" y="437" width="0.1" height="15.0" fill="rgb(223,23,4)" rx="2" ry="2" />
<text  x="324.96" y="447.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (23 samples, 0.02%)</title><rect x="331.1" y="357" width="0.3" height="15.0" fill="rgb(224,68,0)" rx="2" ry="2" />
<text  x="334.15" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, std::string&gt;, std::_Select1st&lt;std::pair&lt;std::string const, std::string&gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::_M_drop_node (145 samples, 0.13%)</title><rect x="927.4" y="501" width="1.6" height="15.0" fill="rgb(254,133,0)" rx="2" ry="2" />
<text  x="930.43" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; &gt;::_M_get_insert_unique_pos (14 samples, 0.01%)</title><rect x="923.7" y="517" width="0.2" height="15.0" fill="rgb(228,30,43)" rx="2" ry="2" />
<text  x="926.75" y="527.5" ></text>
</g>
<g >
<title>BN_clear_free (114 samples, 0.11%)</title><rect x="45.7" y="517" width="1.2" height="15.0" fill="rgb(245,211,22)" rx="2" ry="2" />
<text  x="48.67" y="527.5" ></text>
</g>
<g >
<title>bannerd::TargetingCollection::Range&lt;bannerd::FilterPatternsEx&gt;::Range (25 samples, 0.02%)</title><rect x="149.4" y="501" width="0.3" height="15.0" fill="rgb(217,88,39)" rx="2" ry="2" />
<text  x="152.44" y="511.5" ></text>
</g>
<g >
<title>sys_futex (16 samples, 0.01%)</title><rect x="892.1" y="453" width="0.2" height="15.0" fill="rgb(244,219,44)" rx="2" ry="2" />
<text  x="895.09" y="463.5" ></text>
</g>
<g >
<title>rsa_cb (14 samples, 0.01%)</title><rect x="155.6" y="501" width="0.2" height="15.0" fill="rgb(233,12,5)" rx="2" ry="2" />
<text  x="158.60" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, std::string&gt;, std::_Select1st&lt;std::pair&lt;std::string const, std::string&gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::string const&amp;&gt;, std::tuple&lt;&gt; &gt; (55 samples, 0.05%)</title><rect x="157.2" y="501" width="0.6" height="15.0" fill="rgb(206,97,50)" rx="2" ry="2" />
<text  x="160.20" y="511.5" ></text>
</g>
<g >
<title>trg::tnt::v15::Reply::feed (14 samples, 0.01%)</title><rect x="1170.1" y="501" width="0.2" height="15.0" fill="rgb(214,202,42)" rx="2" ry="2" />
<text  x="1173.13" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;::~vector (18 samples, 0.02%)</title><rect x="931.1" y="421" width="0.2" height="15.0" fill="rgb(217,195,5)" rx="2" ry="2" />
<text  x="934.05" y="431.5" ></text>
</g>
<g >
<title>base::subtle::NoBarrier_Load (18 samples, 0.02%)</title><rect x="1132.9" y="469" width="0.2" height="15.0" fill="rgb(207,35,35)" rx="2" ry="2" />
<text  x="1135.87" y="479.5" ></text>
</g>
<g >
<title>do_free_with_callback (25 samples, 0.02%)</title><rect x="642.4" y="437" width="0.3" height="15.0" fill="rgb(210,65,0)" rx="2" ry="2" />
<text  x="645.41" y="447.5" ></text>
</g>
<g >
<title>tcp_rcv_established (10 samples, 0.01%)</title><rect x="284.5" y="37" width="0.1" height="15.0" fill="rgb(223,84,33)" rx="2" ry="2" />
<text  x="287.53" y="47.5" ></text>
</g>
<g >
<title>strchr (172 samples, 0.16%)</title><rect x="850.8" y="501" width="1.9" height="15.0" fill="rgb(236,169,38)" rx="2" ry="2" />
<text  x="853.77" y="511.5" ></text>
</g>
<g >
<title>__do_softirq (12 samples, 0.01%)</title><rect x="806.2" y="421" width="0.2" height="15.0" fill="rgb(223,53,42)" rx="2" ry="2" />
<text  x="809.23" y="431.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (12 samples, 0.01%)</title><rect x="657.8" y="373" width="0.1" height="15.0" fill="rgb(213,201,47)" rx="2" ry="2" />
<text  x="660.80" y="383.5" ></text>
</g>
<g >
<title>binarySearch&lt;const (anonymous namespace)::ProcFunction*, (anonymous namespace)::ProcFunction, (anonymous namespace)::findFunction (925 samples, 0.86%)</title><rect x="658.3" y="469" width="10.1" height="15.0" fill="rgb(217,23,53)" rx="2" ry="2" />
<text  x="661.30" y="479.5" ></text>
</g>
<g >
<title>ctx_sched_out (19 samples, 0.02%)</title><rect x="298.6" y="357" width="0.2" height="15.0" fill="rgb(230,47,27)" rx="2" ry="2" />
<text  x="301.57" y="367.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::string*&gt; (18 samples, 0.02%)</title><rect x="931.1" y="389" width="0.2" height="15.0" fill="rgb(252,58,49)" rx="2" ry="2" />
<text  x="934.05" y="399.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (34 samples, 0.03%)</title><rect x="697.2" y="421" width="0.4" height="15.0" fill="rgb(236,178,34)" rx="2" ry="2" />
<text  x="700.18" y="431.5" ></text>
</g>
<g >
<title>std::advance&lt;__gnu_cxx::__normal_iterator&lt;bannerd::details::InternalStorage::Record const*, std::vector&lt;bannerd::details::InternalStorage::Record, std::allocator&lt;bannerd::details::InternalStorage::Record&gt; &gt; &gt;, long&gt; (19 samples, 0.02%)</title><rect x="392.3" y="469" width="0.2" height="15.0" fill="rgb(229,201,48)" rx="2" ry="2" />
<text  x="395.33" y="479.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, bannerd::targeting::ShowsClicks, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, bannerd::targeting::ShowsClicks&gt; &gt; &gt;::find (15 samples, 0.01%)</title><rect x="410.0" y="501" width="0.1" height="15.0" fill="rgb(230,164,51)" rx="2" ry="2" />
<text  x="412.96" y="511.5" ></text>
</g>
<g >
<title>do_futex (18 samples, 0.02%)</title><rect x="169.1" y="469" width="0.1" height="15.0" fill="rgb(231,139,2)" rx="2" ry="2" />
<text  x="172.05" y="479.5" ></text>
</g>
<g >
<title>sys_futex (90 samples, 0.08%)</title><rect x="286.0" y="485" width="1.0" height="15.0" fill="rgb(217,117,51)" rx="2" ry="2" />
<text  x="289.01" y="495.5" ></text>
</g>
<g >
<title>rapidjson::GenericValue&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::CrtAllocator&gt;::GetStringLength (27 samples, 0.03%)</title><rect x="1150.3" y="453" width="0.3" height="15.0" fill="rgb(244,215,38)" rx="2" ry="2" />
<text  x="1153.31" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::string, std::pair&lt;std::string const, unsigned int&gt;, std::allocator&lt;std::pair&lt;std::string const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::string&gt;, std::hash&lt;std::string&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (50 samples, 0.05%)</title><rect x="920.5" y="517" width="0.5" height="15.0" fill="rgb(235,58,15)" rx="2" ry="2" />
<text  x="923.46" y="527.5" ></text>
</g>
<g >
<title>target::bitmap::Index&lt;std::string, unsigned int, std::unordered_map&lt;std::string, unsigned int, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, unsigned int&gt; &gt; &gt; &gt;::map (44 samples, 0.04%)</title><rect x="163.8" y="501" width="0.5" height="15.0" fill="rgb(215,61,32)" rx="2" ry="2" />
<text  x="166.84" y="511.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (41 samples, 0.04%)</title><rect x="924.6" y="405" width="0.5" height="15.0" fill="rgb(241,10,12)" rx="2" ry="2" />
<text  x="927.64" y="415.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (12 samples, 0.01%)</title><rect x="329.1" y="469" width="0.1" height="15.0" fill="rgb(230,225,35)" rx="2" ry="2" />
<text  x="332.11" y="479.5" ></text>
</g>
<g >
<title>schedule (28 samples, 0.03%)</title><rect x="307.2" y="421" width="0.3" height="15.0" fill="rgb(251,117,31)" rx="2" ry="2" />
<text  x="310.22" y="431.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (21 samples, 0.02%)</title><rect x="1156.6" y="501" width="0.2" height="15.0" fill="rgb(249,212,5)" rx="2" ry="2" />
<text  x="1159.56" y="511.5" ></text>
</g>
<g >
<title>tc_newarray (34 samples, 0.03%)</title><rect x="1139.5" y="517" width="0.4" height="15.0" fill="rgb(226,215,39)" rx="2" ry="2" />
<text  x="1142.52" y="527.5" ></text>
</g>
<g >
<title>bannerd::engine::gp_param::var (216 samples, 0.20%)</title><rect x="655.8" y="485" width="2.3" height="15.0" fill="rgb(216,5,17)" rx="2" ry="2" />
<text  x="658.78" y="495.5" ></text>
</g>
<g >
<title>update (16 samples, 0.01%)</title><rect x="1170.3" y="517" width="0.2" height="15.0" fill="rgb(228,130,49)" rx="2" ry="2" />
<text  x="1173.34" y="527.5" ></text>
</g>
<g >
<title>do_nanosleep (51 samples, 0.05%)</title><rect x="293.5" y="453" width="0.5" height="15.0" fill="rgb(211,48,53)" rx="2" ry="2" />
<text  x="296.46" y="463.5" ></text>
</g>
<g >
<title>tcmalloc::ThreadCache::Allocate (14 samples, 0.01%)</title><rect x="280.7" y="469" width="0.2" height="15.0" fill="rgb(205,139,9)" rx="2" ry="2" />
<text  x="283.74" y="479.5" ></text>
</g>
<g >
<title>CRYPTO_malloc (14 samples, 0.01%)</title><rect x="892.4" y="501" width="0.2" height="15.0" fill="rgb(248,184,24)" rx="2" ry="2" />
<text  x="895.42" y="511.5" ></text>
</g>
<g >
<title>xfs_file_buffered_aio_write (63 samples, 0.06%)</title><rect x="129.5" y="421" width="0.7" height="15.0" fill="rgb(230,77,41)" rx="2" ry="2" />
<text  x="132.54" y="431.5" ></text>
</g>
<g >
<title>tcmalloc::PageHeap::Delete (12 samples, 0.01%)</title><rect x="1146.7" y="517" width="0.1" height="15.0" fill="rgb(211,66,43)" rx="2" ry="2" />
<text  x="1149.69" y="527.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::operator (25 samples, 0.02%)</title><rect x="688.6" y="453" width="0.3" height="15.0" fill="rgb(242,183,49)" rx="2" ry="2" />
<text  x="691.63" y="463.5" ></text>
</g>
<g >
<title>do_futex (10 samples, 0.01%)</title><rect x="916.7" y="389" width="0.1" height="15.0" fill="rgb(250,93,17)" rx="2" ry="2" />
<text  x="919.68" y="399.5" ></text>
</g>
<g >
<title>advance&lt;const (anonymous namespace)::ProcFunction*, long int&gt; (94 samples, 0.09%)</title><rect x="691.4" y="437" width="1.0" height="15.0" fill="rgb(208,51,35)" rx="2" ry="2" />
<text  x="694.36" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;bannerd::UrlObjectLimitEx const*, bannerd::UrlObjectLimitEx const*, std::allocator&lt;bannerd::UrlObjectLimitEx const*&gt;, std::__detail::_Identity, std::equal_to&lt;bannerd::UrlObjectLimitEx const*&gt;, std::hash&lt;bannerd::UrlObjectLimitEx const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::clear (19 samples, 0.02%)</title><rect x="920.2" y="501" width="0.2" height="15.0" fill="rgb(218,86,41)" rx="2" ry="2" />
<text  x="923.17" y="511.5" ></text>
</g>
<g >
<title>tcmalloc::ThreadCache::GetFastPathCache (48 samples, 0.04%)</title><rect x="1132.3" y="485" width="0.5" height="15.0" fill="rgb(233,201,44)" rx="2" ry="2" />
<text  x="1135.27" y="495.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::wideAnd (12 samples, 0.01%)</title><rect x="422.0" y="485" width="0.2" height="15.0" fill="rgb(240,165,27)" rx="2" ry="2" />
<text  x="425.04" y="495.5" ></text>
</g>
<g >
<title>std::string::_M_leak_hard (18 samples, 0.02%)</title><rect x="948.2" y="517" width="0.2" height="15.0" fill="rgb(207,99,5)" rx="2" ry="2" />
<text  x="951.15" y="527.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (72 samples, 0.07%)</title><rect x="945.7" y="389" width="0.8" height="15.0" fill="rgb(252,167,38)" rx="2" ry="2" />
<text  x="948.71" y="399.5" ></text>
</g>
<g >
<title>tcmalloc::SLL_TryPop (10 samples, 0.01%)</title><rect x="166.2" y="437" width="0.1" height="15.0" fill="rgb(225,187,51)" rx="2" ry="2" />
<text  x="169.22" y="447.5" ></text>
</g>
<g >
<title>native_write_msr_safe (25 samples, 0.02%)</title><rect x="293.7" y="309" width="0.3" height="15.0" fill="rgb(254,2,45)" rx="2" ry="2" />
<text  x="296.68" y="319.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (10 samples, 0.01%)</title><rect x="880.8" y="453" width="0.1" height="15.0" fill="rgb(246,108,26)" rx="2" ry="2" />
<text  x="883.75" y="463.5" ></text>
</g>
<g >
<title>__schedule (12 samples, 0.01%)</title><rect x="988.2" y="389" width="0.1" height="15.0" fill="rgb(239,77,54)" rx="2" ry="2" />
<text  x="991.17" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, std::string&gt;, std::_Select1st&lt;std::pair&lt;std::string const, std::string&gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::_M_lower_bound_tr&lt;char [23], void&gt; (13 samples, 0.01%)</title><rect x="409.8" y="469" width="0.1" height="15.0" fill="rgb(213,51,34)" rx="2" ry="2" />
<text  x="412.80" y="479.5" ></text>
</g>
<g >
<title>operator (23 samples, 0.02%)</title><rect x="314.4" y="469" width="0.2" height="15.0" fill="rgb(234,187,6)" rx="2" ry="2" />
<text  x="317.40" y="479.5" ></text>
</g>
<g >
<title>schedule (121 samples, 0.11%)</title><rect x="320.1" y="309" width="1.4" height="15.0" fill="rgb(205,153,0)" rx="2" ry="2" />
<text  x="323.13" y="319.5" ></text>
</g>
<g >
<title>xfs_file_aio_write (55 samples, 0.05%)</title><rect x="277.5" y="421" width="0.6" height="15.0" fill="rgb(243,11,8)" rx="2" ry="2" />
<text  x="280.46" y="431.5" ></text>
</g>
<g >
<title>_IO_vsnprintf (12 samples, 0.01%)</title><rect x="127.1" y="501" width="0.1" height="15.0" fill="rgb(214,226,44)" rx="2" ry="2" />
<text  x="130.05" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; (28 samples, 0.03%)</title><rect x="930.9" y="453" width="0.4" height="15.0" fill="rgb(233,59,13)" rx="2" ry="2" />
<text  x="933.94" y="463.5" ></text>
</g>
<g >
<title>__GI_epoll_ctl (199 samples, 0.18%)</title><rect x="315.1" y="501" width="2.1" height="15.0" fill="rgb(241,183,41)" rx="2" ry="2" />
<text  x="318.06" y="511.5" ></text>
</g>
<g >
<title>unknownStringSet (33 samples, 0.03%)</title><rect x="418.0" y="469" width="0.4" height="15.0" fill="rgb(237,141,30)" rx="2" ry="2" />
<text  x="421.03" y="479.5" ></text>
</g>
<g >
<title>sys_nanosleep (42 samples, 0.04%)</title><rect x="308.2" y="469" width="0.5" height="15.0" fill="rgb(249,58,7)" rx="2" ry="2" />
<text  x="311.21" y="479.5" ></text>
</g>
<g >
<title>operator (1,045 samples, 0.97%)</title><rect x="393.8" y="453" width="11.4" height="15.0" fill="rgb(216,222,4)" rx="2" ry="2" />
<text  x="396.77" y="463.5" ></text>
</g>
<g >
<title>do_softirq (16 samples, 0.01%)</title><rect x="613.5" y="453" width="0.2" height="15.0" fill="rgb(207,177,45)" rx="2" ry="2" />
<text  x="616.51" y="463.5" ></text>
</g>
<g >
<title>do_free (25 samples, 0.02%)</title><rect x="642.4" y="453" width="0.3" height="15.0" fill="rgb(225,158,14)" rx="2" ry="2" />
<text  x="645.41" y="463.5" ></text>
</g>
<g >
<title>trg::protobuf::bannerd::EventMsg::ByteSize (17 samples, 0.02%)</title><rect x="166.5" y="501" width="0.2" height="15.0" fill="rgb(247,64,6)" rx="2" ry="2" />
<text  x="169.46" y="511.5" ></text>
</g>
<g >
<title>enqueue_task_fair (22 samples, 0.02%)</title><rect x="181.5" y="373" width="0.2" height="15.0" fill="rgb(207,174,45)" rx="2" ry="2" />
<text  x="184.51" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char const*&gt;::allocate (14 samples, 0.01%)</title><rect x="977.4" y="469" width="0.2" height="15.0" fill="rgb(236,66,9)" rx="2" ry="2" />
<text  x="980.44" y="479.5" ></text>
</g>
<g >
<title>bannerd (107,717 samples, 100.00%)</title><rect x="10.0" y="533" width="1180.0" height="15.0" fill="rgb(229,81,9)" rx="2" ry="2" />
<text  x="13.00" y="543.5" >bannerd</text>
</g>
<g >
<title>target::dynamic_bitset::operator|= (275 samples, 0.26%)</title><rect x="1108.3" y="485" width="3.0" height="15.0" fill="rgb(236,130,19)" rx="2" ry="2" />
<text  x="1111.26" y="495.5" ></text>
</g>
<g >
<title>tcmalloc::SLL_Next (283 samples, 0.26%)</title><rect x="1135.0" y="437" width="3.1" height="15.0" fill="rgb(236,183,41)" rx="2" ry="2" />
<text  x="1137.99" y="447.5" ></text>
</g>
<g >
<title>ASN1_item_d2i (119 samples, 0.11%)</title><rect x="18.4" y="517" width="1.3" height="15.0" fill="rgb(216,49,18)" rx="2" ry="2" />
<text  x="21.38" y="527.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (92 samples, 0.09%)</title><rect x="975.3" y="501" width="1.0" height="15.0" fill="rgb(214,137,22)" rx="2" ry="2" />
<text  x="978.27" y="511.5" ></text>
</g>
<g >
<title>__memcpy_ssse3_back (34 samples, 0.03%)</title><rect x="707.1" y="469" width="0.3" height="15.0" fill="rgb(242,11,31)" rx="2" ry="2" />
<text  x="710.05" y="479.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_wrlock (73 samples, 0.07%)</title><rect x="91.3" y="421" width="0.8" height="15.0" fill="rgb(214,24,0)" rx="2" ry="2" />
<text  x="94.31" y="431.5" ></text>
</g>
<g >
<title>SHA1_Final (55 samples, 0.05%)</title><rect x="116.4" y="517" width="0.6" height="15.0" fill="rgb(243,72,13)" rx="2" ry="2" />
<text  x="119.39" y="527.5" ></text>
</g>
<g >
<title>do_futex (31 samples, 0.03%)</title><rect x="307.2" y="469" width="0.3" height="15.0" fill="rgb(206,51,8)" rx="2" ry="2" />
<text  x="310.21" y="479.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (22 samples, 0.02%)</title><rect x="892.0" y="485" width="0.3" height="15.0" fill="rgb(249,47,6)" rx="2" ry="2" />
<text  x="895.02" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;(anonymous namespace)::FilterMobileCategoryIndex::FilterKey, std::pair&lt;(anonymous namespace)::FilterMobileCategoryIndex::FilterKey const, (anonymous namespace)::BannerBitset&gt;, std::allocator&lt;std::pair&lt;(anonymous namespace)::FilterMobileCategoryIndex::FilterKey const, (anonymous namespace)::BannerBitset&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;(anonymous namespace)::FilterMobileCategoryIndex::FilterKey&gt;, (anonymous namespace)::FilterMobileCategoryIndex::FilterKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (10 samples, 0.01%)</title><rect x="167.9" y="469" width="0.1" height="15.0" fill="rgb(247,195,2)" rx="2" ry="2" />
<text  x="170.89" y="479.5" ></text>
</g>
<g >
<title>asn1_item_ex_combine_new (11 samples, 0.01%)</title><rect x="130.5" y="485" width="0.1" height="15.0" fill="rgb(227,110,27)" rx="2" ry="2" />
<text  x="133.49" y="495.5" ></text>
</g>
<g >
<title>__gthread_cond_timedwait (71 samples, 0.07%)</title><rect x="834.2" y="437" width="0.8" height="15.0" fill="rgb(209,194,5)" rx="2" ry="2" />
<text  x="837.20" y="447.5" ></text>
</g>
<g >
<title>__memset_sse2 (10 samples, 0.01%)</title><rect x="56.3" y="501" width="0.1" height="15.0" fill="rgb(222,76,2)" rx="2" ry="2" />
<text  x="59.29" y="511.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_clone (179 samples, 0.17%)</title><rect x="973.3" y="501" width="2.0" height="15.0" fill="rgb(241,66,6)" rx="2" ry="2" />
<text  x="976.31" y="511.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (12 samples, 0.01%)</title><rect x="381.7" y="373" width="0.1" height="15.0" fill="rgb(245,200,49)" rx="2" ry="2" />
<text  x="384.66" y="383.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (40 samples, 0.04%)</title><rect x="320.7" y="213" width="0.4" height="15.0" fill="rgb(223,180,38)" rx="2" ry="2" />
<text  x="323.67" y="223.5" ></text>
</g>
<g >
<title>_IO_no_init (39 samples, 0.04%)</title><rect x="167.1" y="517" width="0.4" height="15.0" fill="rgb(248,32,36)" rx="2" ry="2" />
<text  x="170.07" y="527.5" ></text>
</g>
<g >
<title>__GI__IO_setb (15 samples, 0.01%)</title><rect x="168.7" y="517" width="0.1" height="15.0" fill="rgb(208,214,12)" rx="2" ry="2" />
<text  x="171.67" y="527.5" ></text>
</g>
<g >
<title>sys_futex (96 samples, 0.09%)</title><rect x="135.2" y="469" width="1.0" height="15.0" fill="rgb(236,183,26)" rx="2" ry="2" />
<text  x="138.17" y="479.5" ></text>
</g>
<g >
<title>std::string::_M_mutate (46 samples, 0.04%)</title><rect x="948.4" y="517" width="0.5" height="15.0" fill="rgb(229,59,2)" rx="2" ry="2" />
<text  x="951.35" y="527.5" ></text>
</g>
<g >
<title>do_sync_write (55 samples, 0.05%)</title><rect x="277.5" y="437" width="0.6" height="15.0" fill="rgb(230,44,33)" rx="2" ry="2" />
<text  x="280.46" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; &gt;::_M_get_insert_hint_unique_pos (24 samples, 0.02%)</title><rect x="923.5" y="517" width="0.2" height="15.0" fill="rgb(254,77,33)" rx="2" ry="2" />
<text  x="926.48" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_M_move_data (20 samples, 0.02%)</title><rect x="673.5" y="485" width="0.2" height="15.0" fill="rgb(228,143,45)" rx="2" ry="2" />
<text  x="676.47" y="495.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (17 samples, 0.02%)</title><rect x="330.6" y="357" width="0.2" height="15.0" fill="rgb(241,180,22)" rx="2" ry="2" />
<text  x="333.62" y="367.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (51 samples, 0.05%)</title><rect x="667.9" y="421" width="0.5" height="15.0" fill="rgb(249,87,37)" rx="2" ry="2" />
<text  x="670.87" y="431.5" ></text>
</g>
<g >
<title>getrn (88 samples, 0.08%)</title><rect x="703.9" y="517" width="0.9" height="15.0" fill="rgb(250,171,36)" rx="2" ry="2" />
<text  x="706.88" y="527.5" ></text>
</g>
<g >
<title>igb_clean_rx_irq (24 samples, 0.02%)</title><rect x="992.8" y="357" width="0.3" height="15.0" fill="rgb(211,171,50)" rx="2" ry="2" />
<text  x="995.79" y="367.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.isra.7 (12 samples, 0.01%)</title><rect x="128.1" y="453" width="0.1" height="15.0" fill="rgb(253,147,51)" rx="2" ry="2" />
<text  x="131.08" y="463.5" ></text>
</g>
<g >
<title>std::string::size (15 samples, 0.01%)</title><rect x="685.7" y="373" width="0.2" height="15.0" fill="rgb(222,111,48)" rx="2" ry="2" />
<text  x="688.69" y="383.5" ></text>
</g>
<g >
<title>__schedule (179 samples, 0.17%)</title><rect x="145.3" y="389" width="2.0" height="15.0" fill="rgb(251,19,3)" rx="2" ry="2" />
<text  x="148.34" y="399.5" ></text>
</g>
<g >
<title>__pthread_mutex_cond_lock (16 samples, 0.01%)</title><rect x="319.6" y="389" width="0.1" height="15.0" fill="rgb(221,189,50)" rx="2" ry="2" />
<text  x="322.56" y="399.5" ></text>
</g>
<g >
<title>__schedule (11 samples, 0.01%)</title><rect x="169.1" y="405" width="0.1" height="15.0" fill="rgb(220,110,33)" rx="2" ry="2" />
<text  x="172.08" y="415.5" ></text>
</g>
<g >
<title>SpinLockHolder::~SpinLockHolder (13 samples, 0.01%)</title><rect x="1143.6" y="501" width="0.2" height="15.0" fill="rgb(243,123,34)" rx="2" ry="2" />
<text  x="1146.62" y="511.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (30 samples, 0.03%)</title><rect x="297.0" y="405" width="0.3" height="15.0" fill="rgb(215,110,42)" rx="2" ry="2" />
<text  x="300.01" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;unsigned int, std::pair&lt;unsigned int const, target::dynamic_bitset const*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, target::dynamic_bitset const*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (13 samples, 0.01%)</title><rect x="439.4" y="485" width="0.1" height="15.0" fill="rgb(212,36,18)" rx="2" ry="2" />
<text  x="442.40" y="495.5" ></text>
</g>
<g >
<title>sysret_audit (58 samples, 0.05%)</title><rect x="182.8" y="501" width="0.6" height="15.0" fill="rgb(215,22,10)" rx="2" ry="2" />
<text  x="185.79" y="511.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (10 samples, 0.01%)</title><rect x="320.1" y="277" width="0.2" height="15.0" fill="rgb(232,130,25)" rx="2" ry="2" />
<text  x="323.15" y="287.5" ></text>
</g>
<g >
<title>PackedCache&lt;35&gt;::TryGet (263 samples, 0.24%)</title><rect x="1113.9" y="437" width="2.8" height="15.0" fill="rgb(221,42,16)" rx="2" ry="2" />
<text  x="1116.85" y="447.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::_S_cmp&lt;std::string const&amp;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const&amp;&gt; (24 samples, 0.02%)</title><rect x="330.6" y="389" width="0.3" height="15.0" fill="rgb(219,147,28)" rx="2" ry="2" />
<text  x="333.61" y="399.5" ></text>
</g>
<g >
<title>ip_rcv_finish (15 samples, 0.01%)</title><rect x="284.5" y="117" width="0.2" height="15.0" fill="rgb(235,137,24)" rx="2" ry="2" />
<text  x="287.50" y="127.5" ></text>
</g>
<g >
<title>__pthread_cond_timedwait (248 samples, 0.23%)</title><rect x="144.7" y="501" width="2.7" height="15.0" fill="rgb(208,34,24)" rx="2" ry="2" />
<text  x="147.70" y="511.5" ></text>
</g>
<g >
<title>std::string::operator std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; (14 samples, 0.01%)</title><rect x="658.0" y="469" width="0.1" height="15.0" fill="rgb(235,11,54)" rx="2" ry="2" />
<text  x="660.99" y="479.5" ></text>
</g>
<g >
<title>__memcpy_ssse3_back (12 samples, 0.01%)</title><rect x="987.5" y="485" width="0.2" height="15.0" fill="rgb(218,189,2)" rx="2" ry="2" />
<text  x="990.54" y="495.5" ></text>
</g>
<g >
<title>std::string::_M_rep (26 samples, 0.02%)</title><rect x="946.8" y="373" width="0.2" height="15.0" fill="rgb(245,143,5)" rx="2" ry="2" />
<text  x="949.76" y="383.5" ></text>
</g>
<g >
<title>system_call_fastpath (143 samples, 0.13%)</title><rect x="289.7" y="501" width="1.5" height="15.0" fill="rgb(237,189,18)" rx="2" ry="2" />
<text  x="292.67" y="511.5" ></text>
</g>
<g >
<title>igb_poll (10 samples, 0.01%)</title><rect x="381.0" y="357" width="0.1" height="15.0" fill="rgb(249,107,11)" rx="2" ry="2" />
<text  x="384.02" y="367.5" ></text>
</g>
<g >
<title>all&lt;std::tuple&lt;bannerd::Content, bannerd::Setting, bannerd::Textblock, bannerd::Url&gt;, bannerd::BannerPatternEx::isCompliant (30 samples, 0.03%)</title><rect x="314.3" y="501" width="0.3" height="15.0" fill="rgb(240,41,48)" rx="2" ry="2" />
<text  x="317.32" y="511.5" ></text>
</g>
<g >
<title>std::map&lt;std::string, std::string, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::lower_bound (217 samples, 0.20%)</title><rect x="682.0" y="469" width="2.4" height="15.0" fill="rgb(242,145,46)" rx="2" ry="2" />
<text  x="684.98" y="479.5" ></text>
</g>
<g >
<title>__memset_sse2 (10 samples, 0.01%)</title><rect x="79.4" y="501" width="0.1" height="15.0" fill="rgb(222,121,42)" rx="2" ry="2" />
<text  x="82.38" y="511.5" ></text>
</g>
<g >
<title>tcmalloc::SizeMap::GetSizeClass (20 samples, 0.02%)</title><rect x="1133.1" y="485" width="0.2" height="15.0" fill="rgb(221,50,10)" rx="2" ry="2" />
<text  x="1136.07" y="495.5" ></text>
</g>
<g >
<title>tcmalloc::PageHeap::TryGetSizeClass (15 samples, 0.01%)</title><rect x="281.2" y="453" width="0.2" height="15.0" fill="rgb(220,41,10)" rx="2" ry="2" />
<text  x="284.23" y="463.5" ></text>
</g>
<g >
<title>futex_wait (80 samples, 0.07%)</title><rect x="286.1" y="453" width="0.9" height="15.0" fill="rgb(216,149,45)" rx="2" ry="2" />
<text  x="289.10" y="463.5" ></text>
</g>
<g >
<title>tcmalloc::ThreadCache::Deallocate (71 samples, 0.07%)</title><rect x="279.4" y="453" width="0.8" height="15.0" fill="rgb(223,74,34)" rx="2" ry="2" />
<text  x="282.40" y="463.5" ></text>
</g>
<g >
<title>__GI_epoll_ctl (201 samples, 0.19%)</title><rect x="192.1" y="517" width="2.2" height="15.0" fill="rgb(247,30,20)" rx="2" ry="2" />
<text  x="195.06" y="527.5" ></text>
</g>
<g >
<title>do_futex (26 samples, 0.02%)</title><rect x="856.3" y="453" width="0.3" height="15.0" fill="rgb(248,126,8)" rx="2" ry="2" />
<text  x="859.27" y="463.5" ></text>
</g>
<g >
<title>std::string::_M_rep (12 samples, 0.01%)</title><rect x="967.9" y="469" width="0.1" height="15.0" fill="rgb(231,57,2)" rx="2" ry="2" />
<text  x="970.86" y="479.5" ></text>
</g>
<g >
<title>nmi (179 samples, 0.17%)</title><rect x="624.2" y="501" width="2.0" height="15.0" fill="rgb(218,88,23)" rx="2" ry="2" />
<text  x="627.22" y="511.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::_S_cmp&lt;std::string&amp;, std::string const&amp;&gt; (17 samples, 0.02%)</title><rect x="945.3" y="485" width="0.1" height="15.0" fill="rgb(215,187,44)" rx="2" ry="2" />
<text  x="948.26" y="495.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (16 samples, 0.01%)</title><rect x="489.1" y="453" width="0.2" height="15.0" fill="rgb(221,204,9)" rx="2" ry="2" />
<text  x="492.13" y="463.5" ></text>
</g>
<g >
<title>__libc_send (10 samples, 0.01%)</title><rect x="127.4" y="501" width="0.2" height="15.0" fill="rgb(238,59,36)" rx="2" ry="2" />
<text  x="130.44" y="511.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (15 samples, 0.01%)</title><rect x="91.1" y="421" width="0.2" height="15.0" fill="rgb(229,100,16)" rx="2" ry="2" />
<text  x="94.11" y="431.5" ></text>
</g>
<g >
<title>bannerd::Engine::getproc (29 samples, 0.03%)</title><rect x="322.6" y="517" width="0.3" height="15.0" fill="rgb(216,23,17)" rx="2" ry="2" />
<text  x="325.60" y="527.5" ></text>
</g>
<g >
<title>try_to_wake_up (12 samples, 0.01%)</title><rect x="893.5" y="389" width="0.1" height="15.0" fill="rgb(230,205,5)" rx="2" ry="2" />
<text  x="896.49" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; &gt;::_M_insert_node (26 samples, 0.02%)</title><rect x="923.1" y="501" width="0.3" height="15.0" fill="rgb(241,215,7)" rx="2" ry="2" />
<text  x="926.11" y="511.5" ></text>
</g>
<g >
<title>_raw_qspin_lock (28 samples, 0.03%)</title><rect x="897.4" y="373" width="0.3" height="15.0" fill="rgb(219,105,26)" rx="2" ry="2" />
<text  x="900.41" y="383.5" ></text>
</g>
<g >
<title>snprintf (15 samples, 0.01%)</title><rect x="833.7" y="501" width="0.2" height="15.0" fill="rgb(213,162,51)" rx="2" ry="2" />
<text  x="836.71" y="511.5" ></text>
</g>
<g >
<title>str_vprintf (276 samples, 0.26%)</title><rect x="984.8" y="517" width="3.0" height="15.0" fill="rgb(223,149,1)" rx="2" ry="2" />
<text  x="987.78" y="527.5" ></text>
</g>
<g >
<title>all (107,717 samples, 100%)</title><rect x="10.0" y="549" width="1180.0" height="15.0" fill="rgb(221,146,33)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;::_M_destroy_node (28 samples, 0.03%)</title><rect x="930.9" y="485" width="0.4" height="15.0" fill="rgb(216,161,46)" rx="2" ry="2" />
<text  x="933.94" y="495.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (36 samples, 0.03%)</title><rect x="947.7" y="517" width="0.4" height="15.0" fill="rgb(211,18,45)" rx="2" ry="2" />
<text  x="950.67" y="527.5" ></text>
</g>
<g >
<title>xfs_trans_commit (18 samples, 0.02%)</title><rect x="277.8" y="325" width="0.2" height="15.0" fill="rgb(211,210,53)" rx="2" ry="2" />
<text  x="280.83" y="335.5" ></text>
</g>
<g >
<title>BN_POOL_release (68 samples, 0.06%)</title><rect x="20.7" y="501" width="0.7" height="15.0" fill="rgb(241,148,51)" rx="2" ry="2" />
<text  x="23.70" y="511.5" ></text>
</g>
<g >
<title>bn_mul_mont (61 samples, 0.06%)</title><rect x="504.8" y="517" width="0.7" height="15.0" fill="rgb(242,163,14)" rx="2" ry="2" />
<text  x="507.81" y="527.5" ></text>
</g>
<g >
<title>BN_CTX_new (18 samples, 0.02%)</title><rect x="25.2" y="517" width="0.2" height="15.0" fill="rgb(230,15,32)" rx="2" ry="2" />
<text  x="28.24" y="527.5" ></text>
</g>
<g >
<title>nmi (10 samples, 0.01%)</title><rect x="1098.5" y="501" width="0.1" height="15.0" fill="rgb(234,219,40)" rx="2" ry="2" />
<text  x="1101.53" y="511.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::reset (200 samples, 0.19%)</title><rect x="432.1" y="453" width="2.2" height="15.0" fill="rgb(206,6,2)" rx="2" ry="2" />
<text  x="435.06" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;bannerd::UrlObjectLimitEx const* const*, std::vector&lt;bannerd::UrlObjectLimitEx const*, std::allocator&lt;bannerd::UrlObjectLimitEx const*&gt; &gt; &gt; (10 samples, 0.01%)</title><rect x="329.3" y="437" width="0.1" height="15.0" fill="rgb(241,50,33)" rx="2" ry="2" />
<text  x="332.27" y="447.5" ></text>
</g>
<g >
<title>std::string::size (46 samples, 0.04%)</title><rect x="946.5" y="389" width="0.5" height="15.0" fill="rgb(235,189,49)" rx="2" ry="2" />
<text  x="949.54" y="399.5" ></text>
</g>
<g >
<title>tcmalloc::ThreadCache::Allocate (37 samples, 0.03%)</title><rect x="1141.7" y="437" width="0.4" height="15.0" fill="rgb(233,144,43)" rx="2" ry="2" />
<text  x="1144.71" y="447.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::operator (10 samples, 0.01%)</title><rect x="923.6" y="501" width="0.1" height="15.0" fill="rgb(210,212,23)" rx="2" ry="2" />
<text  x="926.64" y="511.5" ></text>
</g>
<g >
<title>rb_event_encrypt_data (27 samples, 0.03%)</title><rect x="854.2" y="517" width="0.2" height="15.0" fill="rgb(236,219,41)" rx="2" ry="2" />
<text  x="857.15" y="527.5" ></text>
</g>
<g >
<title>_IO_vfprintf_internal (14 samples, 0.01%)</title><rect x="1169.9" y="453" width="0.2" height="15.0" fill="rgb(234,216,15)" rx="2" ry="2" />
<text  x="1172.92" y="463.5" ></text>
</g>
<g >
<title>do_softirq (16 samples, 0.01%)</title><rect x="598.0" y="453" width="0.2" height="15.0" fill="rgb(239,145,37)" rx="2" ry="2" />
<text  x="601.02" y="463.5" ></text>
</g>
<g >
<title>futex_wait (16 samples, 0.01%)</title><rect x="169.1" y="453" width="0.1" height="15.0" fill="rgb(205,117,39)" rx="2" ry="2" />
<text  x="172.07" y="463.5" ></text>
</g>
<g >
<title>target::bitmap::Index&lt;std::string, unsigned int, std::unordered_map&lt;std::string, unsigned int, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, unsigned int&gt; &gt; &gt; &gt;::Mapping::operator (10 samples, 0.01%)</title><rect x="991.5" y="501" width="0.1" height="15.0" fill="rgb(245,62,38)" rx="2" ry="2" />
<text  x="994.53" y="511.5" ></text>
</g>
<g >
<title>__lll_lock_wait (162 samples, 0.15%)</title><rect x="285.2" y="517" width="1.8" height="15.0" fill="rgb(251,29,21)" rx="2" ry="2" />
<text  x="288.22" y="527.5" ></text>
</g>
<g >
<title>do_futex (14 samples, 0.01%)</title><rect x="891.9" y="437" width="0.1" height="15.0" fill="rgb(246,140,25)" rx="2" ry="2" />
<text  x="894.86" y="447.5" ></text>
</g>
<g >
<title>do_free_with_callback (108 samples, 0.10%)</title><rect x="279.0" y="469" width="1.2" height="15.0" fill="rgb(253,29,25)" rx="2" ry="2" />
<text  x="281.99" y="479.5" ></text>
</g>
<g >
<title>xfs_file_buffered_aio_write (52 samples, 0.05%)</title><rect x="277.5" y="405" width="0.6" height="15.0" fill="rgb(245,98,7)" rx="2" ry="2" />
<text  x="280.49" y="415.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::basic_string_view (72 samples, 0.07%)</title><rect x="668.4" y="485" width="0.8" height="15.0" fill="rgb(252,211,27)" rx="2" ry="2" />
<text  x="671.43" y="495.5" ></text>
</g>
<g >
<title>TCMalloc_PageMap2&lt;35&gt;::get (13 samples, 0.01%)</title><rect x="642.2" y="405" width="0.1" height="15.0" fill="rgb(225,16,2)" rx="2" ry="2" />
<text  x="645.19" y="415.5" ></text>
</g>
<g >
<title>std::string::_S_construct&lt;char const*&gt; (139 samples, 0.13%)</title><rect x="942.9" y="469" width="1.5" height="15.0" fill="rgb(226,39,17)" rx="2" ry="2" />
<text  x="945.85" y="479.5" ></text>
</g>
<g >
<title>sysret_audit (18 samples, 0.02%)</title><rect x="285.4" y="501" width="0.2" height="15.0" fill="rgb(231,28,26)" rx="2" ry="2" />
<text  x="288.42" y="511.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::set (6,779 samples, 6.29%)</title><rect x="1019.9" y="469" width="74.2" height="15.0" fill="rgb(248,20,46)" rx="2" ry="2" />
<text  x="1022.85" y="479.5" >target::..</text>
</g>
<g >
<title>visit_groups_merge (41 samples, 0.04%)</title><rect x="187.9" y="325" width="0.4" height="15.0" fill="rgb(218,160,41)" rx="2" ry="2" />
<text  x="190.86" y="335.5" ></text>
</g>
<g >
<title>asn1_template_ex_d2i (20 samples, 0.02%)</title><rect x="312.7" y="517" width="0.2" height="15.0" fill="rgb(238,120,45)" rx="2" ry="2" />
<text  x="315.70" y="527.5" ></text>
</g>
<g >
<title>bannerd::FilterImageTypesEx::key_t::checkFilter (31 samples, 0.03%)</title><rect x="324.3" y="517" width="0.3" height="15.0" fill="rgb(216,19,38)" rx="2" ry="2" />
<text  x="327.26" y="527.5" ></text>
</g>
<g >
<title>audit_filter_syscall (12 samples, 0.01%)</title><rect x="183.1" y="469" width="0.1" height="15.0" fill="rgb(227,5,54)" rx="2" ry="2" />
<text  x="186.06" y="479.5" ></text>
</g>
<g >
<title>__strlen_sse2_pminub (95 samples, 0.09%)</title><rect x="415.8" y="453" width="1.0" height="15.0" fill="rgb(209,201,45)" rx="2" ry="2" />
<text  x="418.78" y="463.5" ></text>
</g>
<g >
<title>tc_newarray (90 samples, 0.08%)</title><rect x="1138.5" y="501" width="1.0" height="15.0" fill="rgb(208,179,21)" rx="2" ry="2" />
<text  x="1141.54" y="511.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (67 samples, 0.06%)</title><rect x="656.0" y="373" width="0.8" height="15.0" fill="rgb(244,138,25)" rx="2" ry="2" />
<text  x="659.04" y="383.5" ></text>
</g>
<g >
<title>inline_mysql_rwlock_rdlock (16 samples, 0.01%)</title><rect x="807.0" y="469" width="0.2" height="15.0" fill="rgb(235,213,53)" rx="2" ry="2" />
<text  x="810.00" y="479.5" ></text>
</g>
<g >
<title>std::string::compare (1,045 samples, 0.97%)</title><rect x="393.8" y="421" width="11.4" height="15.0" fill="rgb(226,77,8)" rx="2" ry="2" />
<text  x="396.77" y="431.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (237 samples, 0.22%)</title><rect x="301.8" y="325" width="2.6" height="15.0" fill="rgb(210,95,46)" rx="2" ry="2" />
<text  x="304.84" y="335.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (36 samples, 0.03%)</title><rect x="893.2" y="485" width="0.4" height="15.0" fill="rgb(244,82,28)" rx="2" ry="2" />
<text  x="896.23" y="495.5" ></text>
</g>
<g >
<title>call_softirq (28 samples, 0.03%)</title><rect x="992.8" y="421" width="0.3" height="15.0" fill="rgb(206,186,27)" rx="2" ry="2" />
<text  x="995.75" y="431.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (17 samples, 0.02%)</title><rect x="284.5" y="149" width="0.2" height="15.0" fill="rgb(212,81,42)" rx="2" ry="2" />
<text  x="287.49" y="159.5" ></text>
</g>
<g >
<title>schedule (55 samples, 0.05%)</title><rect x="136.9" y="405" width="0.6" height="15.0" fill="rgb(251,146,0)" rx="2" ry="2" />
<text  x="139.92" y="415.5" ></text>
</g>
<g >
<title>bannerd::printproc (136 samples, 0.13%)</title><rect x="415.3" y="517" width="1.5" height="15.0" fill="rgb(244,85,52)" rx="2" ry="2" />
<text  x="418.33" y="527.5" ></text>
</g>
<g >
<title>ret_from_intr (12 samples, 0.01%)</title><rect x="381.0" y="469" width="0.1" height="15.0" fill="rgb(241,193,15)" rx="2" ry="2" />
<text  x="384.01" y="479.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_set_sharable (24 samples, 0.02%)</title><rect x="964.3" y="485" width="0.3" height="15.0" fill="rgb(232,63,52)" rx="2" ry="2" />
<text  x="967.33" y="495.5" ></text>
</g>
<g >
<title>ssleay_rand_bytes (2,861 samples, 2.66%)</title><rect x="885.7" y="517" width="31.3" height="15.0" fill="rgb(219,95,26)" rx="2" ry="2" />
<text  x="888.68" y="527.5" >ss..</text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt; &gt; (12 samples, 0.01%)</title><rect x="701.7" y="437" width="0.2" height="15.0" fill="rgb(211,130,43)" rx="2" ry="2" />
<text  x="704.72" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;bannerd::UrlLimitsIndex::Key, std::pair&lt;bannerd::UrlLimitsIndex::Key const, std::vector&lt;bannerd::UrlObjectLimitEx const*, std::allocator&lt;bannerd::UrlObjectLimitEx const*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;bannerd::UrlLimitsIndex::Key const, std::vector&lt;bannerd::UrlObjectLimitEx const*, std::allocator&lt;bannerd::UrlObjectLimitEx const*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;bannerd::UrlLimitsIndex::Key&gt;, bannerd::UrlLimitsIndex::KeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (50 samples, 0.05%)</title><rect x="919.0" y="501" width="0.5" height="15.0" fill="rgb(226,193,1)" rx="2" ry="2" />
<text  x="921.99" y="511.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::operator (24 samples, 0.02%)</title><rect x="330.6" y="405" width="0.3" height="15.0" fill="rgb(209,207,27)" rx="2" ry="2" />
<text  x="333.61" y="415.5" ></text>
</g>
<g >
<title>rb::SafeQueueBase&lt;rb::queue_wrapper&lt;bannerd::Engine::MinerTask&gt; &gt;::timedPop&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt; (95 samples, 0.09%)</title><rect x="834.1" y="517" width="1.1" height="15.0" fill="rgb(244,79,39)" rx="2" ry="2" />
<text  x="837.12" y="527.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::find_next (85 samples, 0.08%)</title><rect x="828.7" y="485" width="0.9" height="15.0" fill="rgb(236,202,11)" rx="2" ry="2" />
<text  x="831.72" y="495.5" ></text>
</g>
<g >
<title>bn_expand_internal (97 samples, 0.09%)</title><rect x="444.7" y="501" width="1.1" height="15.0" fill="rgb(216,222,49)" rx="2" ry="2" />
<text  x="447.69" y="511.5" ></text>
</g>
<g >
<title>EVP_MD_CTX_cleanup (26 samples, 0.02%)</title><rect x="101.9" y="517" width="0.3" height="15.0" fill="rgb(206,13,37)" rx="2" ry="2" />
<text  x="104.90" y="527.5" ></text>
</g>
<g >
<title>rb::Logger::log (32 samples, 0.03%)</title><rect x="833.7" y="517" width="0.3" height="15.0" fill="rgb(226,108,35)" rx="2" ry="2" />
<text  x="836.67" y="527.5" ></text>
</g>
<g >
<title>cpuacct_charge (19 samples, 0.02%)</title><rect x="299.2" y="325" width="0.2" height="15.0" fill="rgb(248,68,19)" rx="2" ry="2" />
<text  x="302.21" y="335.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;unsigned char const&amp;, std::string const&amp;&gt;, std::tuple&lt;unsigned char const&amp;, std::string const&amp;&gt;, 0ul, 2ul&gt;::__less (378 samples, 0.35%)</title><rect x="388.2" y="405" width="4.1" height="15.0" fill="rgb(212,102,35)" rx="2" ry="2" />
<text  x="391.19" y="415.5" ></text>
</g>
<g >
<title>perf_event_sched_in (36 samples, 0.03%)</title><rect x="145.9" y="341" width="0.4" height="15.0" fill="rgb(233,134,17)" rx="2" ry="2" />
<text  x="148.88" y="351.5" ></text>
</g>
<g >
<title>event_function (18 samples, 0.02%)</title><rect x="802.3" y="421" width="0.2" height="15.0" fill="rgb(242,46,21)" rx="2" ry="2" />
<text  x="805.26" y="431.5" ></text>
</g>
<g >
<title>find (14 samples, 0.01%)</title><rect x="426.3" y="469" width="0.2" height="15.0" fill="rgb(254,44,21)" rx="2" ry="2" />
<text  x="429.34" y="479.5" ></text>
</g>
<g >
<title>schedule (27 samples, 0.03%)</title><rect x="128.2" y="421" width="0.3" height="15.0" fill="rgb(254,130,3)" rx="2" ry="2" />
<text  x="131.22" y="431.5" ></text>
</g>
<g >
<title>rb::stat::now (95 samples, 0.09%)</title><rect x="852.8" y="501" width="1.0" height="15.0" fill="rgb(205,31,4)" rx="2" ry="2" />
<text  x="855.77" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, std::string&gt;, std::_Select1st&lt;std::pair&lt;std::string const, std::string&gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::_M_find_tr&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, void&gt; (74 samples, 0.07%)</title><rect x="675.1" y="469" width="0.8" height="15.0" fill="rgb(219,175,32)" rx="2" ry="2" />
<text  x="678.06" y="479.5" ></text>
</g>
<g >
<title>bannerd::engine::TargetMessagePacker::fillTargetForEvent (26 samples, 0.02%)</title><rect x="410.9" y="517" width="0.3" height="15.0" fill="rgb(248,157,52)" rx="2" ry="2" />
<text  x="413.92" y="527.5" ></text>
</g>
<g >
<title>do_malloc (37 samples, 0.03%)</title><rect x="1141.7" y="453" width="0.4" height="15.0" fill="rgb(240,226,24)" rx="2" ry="2" />
<text  x="1144.71" y="463.5" ></text>
</g>
<g >
<title>rb::SafeQueueBase&lt;rb::queue_wrapper&lt;bannerd::engine::UserBannedTask&gt; &gt;::tryPop (22 samples, 0.02%)</title><rect x="835.2" y="517" width="0.2" height="15.0" fill="rgb(247,143,33)" rx="2" ry="2" />
<text  x="838.16" y="527.5" ></text>
</g>
<g >
<title>required_field_pack (39 samples, 0.04%)</title><rect x="857.3" y="517" width="0.4" height="15.0" fill="rgb(244,97,7)" rx="2" ry="2" />
<text  x="860.31" y="527.5" ></text>
</g>
<g >
<title>__gthread_cond_timedwait (298 samples, 0.28%)</title><rect x="318.3" y="421" width="3.2" height="15.0" fill="rgb(237,73,43)" rx="2" ry="2" />
<text  x="321.25" y="431.5" ></text>
</g>
<g >
<title>igb_clean_rx_irq (10 samples, 0.01%)</title><rect x="277.2" y="373" width="0.1" height="15.0" fill="rgb(253,54,0)" rx="2" ry="2" />
<text  x="280.17" y="383.5" ></text>
</g>
<g >
<title>iomap_apply (18 samples, 0.02%)</title><rect x="277.5" y="373" width="0.2" height="15.0" fill="rgb(229,162,26)" rx="2" ry="2" />
<text  x="280.50" y="383.5" ></text>
</g>
<g >
<title>sysret_audit (59 samples, 0.05%)</title><rect x="287.7" y="501" width="0.6" height="15.0" fill="rgb(208,139,43)" rx="2" ry="2" />
<text  x="290.66" y="511.5" ></text>
</g>
<g >
<title>sysret_audit (86 samples, 0.08%)</title><rect x="170.3" y="501" width="1.0" height="15.0" fill="rgb(235,206,9)" rx="2" ry="2" />
<text  x="173.32" y="511.5" ></text>
</g>
<g >
<title>getDynamicBannerProductMember (268 samples, 0.25%)</title><rect x="686.4" y="517" width="3.0" height="15.0" fill="rgb(236,68,17)" rx="2" ry="2" />
<text  x="689.45" y="527.5" ></text>
</g>
<g >
<title>dev_queue_xmit (12 samples, 0.01%)</title><rect x="284.7" y="197" width="0.2" height="15.0" fill="rgb(212,91,15)" rx="2" ry="2" />
<text  x="287.72" y="207.5" ></text>
</g>
<g >
<title>std::string::size (134 samples, 0.12%)</title><rect x="849.2" y="373" width="1.5" height="15.0" fill="rgb(251,194,17)" rx="2" ry="2" />
<text  x="852.23" y="383.5" ></text>
</g>
<g >
<title>tcmalloc::SLL_TryPop (13 samples, 0.01%)</title><rect x="280.8" y="437" width="0.1" height="15.0" fill="rgb(224,26,42)" rx="2" ry="2" />
<text  x="283.75" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::WriteUInt32NoTagToArray (18 samples, 0.02%)</title><rect x="1162.2" y="485" width="0.2" height="15.0" fill="rgb(210,177,29)" rx="2" ry="2" />
<text  x="1165.20" y="495.5" ></text>
</g>
<g >
<title>strncmp@plt (12 samples, 0.01%)</title><rect x="163.7" y="501" width="0.1" height="15.0" fill="rgb(209,120,46)" rx="2" ry="2" />
<text  x="166.70" y="511.5" ></text>
</g>
<g >
<title>rb::stat::commit&lt;bannerd::model_calls_in_auction&gt; (68 samples, 0.06%)</title><rect x="324.6" y="501" width="0.8" height="15.0" fill="rgb(230,67,40)" rx="2" ry="2" />
<text  x="327.61" y="511.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (15 samples, 0.01%)</title><rect x="331.2" y="341" width="0.2" height="15.0" fill="rgb(210,205,44)" rx="2" ry="2" />
<text  x="334.23" y="351.5" ></text>
</g>
<g >
<title>allocate_fake_cpuc (44 samples, 0.04%)</title><rect x="140.8" y="309" width="0.5" height="15.0" fill="rgb(251,86,16)" rx="2" ry="2" />
<text  x="143.78" y="319.5" ></text>
</g>
<g >
<title>local_apic_timer_interrupt (12 samples, 0.01%)</title><rect x="381.7" y="389" width="0.1" height="15.0" fill="rgb(234,154,26)" rx="2" ry="2" />
<text  x="384.66" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, std::string&gt;, std::_Select1st&lt;std::pair&lt;std::string const, std::string&gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::_M_lower_bound_tr&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, void&gt; (148 samples, 0.14%)</title><rect x="686.7" y="437" width="1.6" height="15.0" fill="rgb(250,154,31)" rx="2" ry="2" />
<text  x="689.72" y="447.5" ></text>
</g>
<g >
<title>rb::atomic_add&lt;unsigned long&gt; (18 samples, 0.02%)</title><rect x="1189.8" y="453" width="0.2" height="15.0" fill="rgb(253,72,18)" rx="2" ry="2" />
<text  x="1192.76" y="463.5" ></text>
</g>
<g >
<title>do_malloc_or_cpp_alloc (37 samples, 0.03%)</title><rect x="1141.7" y="469" width="0.4" height="15.0" fill="rgb(230,21,50)" rx="2" ry="2" />
<text  x="1144.71" y="479.5" ></text>
</g>
<g >
<title>native_sched_clock (12 samples, 0.01%)</title><rect x="302.5" y="293" width="0.1" height="15.0" fill="rgb(222,211,8)" rx="2" ry="2" />
<text  x="305.48" y="303.5" ></text>
</g>
<g >
<title>perf_iterate_sb (28 samples, 0.03%)</title><rect x="138.8" y="389" width="0.3" height="15.0" fill="rgb(210,81,12)" rx="2" ry="2" />
<text  x="141.77" y="399.5" ></text>
</g>
<g >
<title>bannerd::BannerEx::checkImagesTypes (36 samples, 0.03%)</title><rect x="313.5" y="517" width="0.4" height="15.0" fill="rgb(215,17,35)" rx="2" ry="2" />
<text  x="316.53" y="527.5" ></text>
</g>
<g >
<title>operator (907 samples, 0.84%)</title><rect x="382.4" y="453" width="9.9" height="15.0" fill="rgb(249,174,2)" rx="2" ry="2" />
<text  x="385.39" y="463.5" ></text>
</g>
<g >
<title>do_malloc (13 samples, 0.01%)</title><rect x="281.5" y="453" width="0.2" height="15.0" fill="rgb(231,77,24)" rx="2" ry="2" />
<text  x="284.52" y="463.5" ></text>
</g>
<g >
<title>__memcpy_ssse3_back (56 samples, 0.05%)</title><rect x="952.4" y="453" width="0.6" height="15.0" fill="rgb(251,155,8)" rx="2" ry="2" />
<text  x="955.35" y="463.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::find_first (36 samples, 0.03%)</title><rect x="828.9" y="469" width="0.4" height="15.0" fill="rgb(237,204,37)" rx="2" ry="2" />
<text  x="831.87" y="479.5" ></text>
</g>
<g >
<title>nmi (17 samples, 0.02%)</title><rect x="641.8" y="469" width="0.2" height="15.0" fill="rgb(232,58,14)" rx="2" ry="2" />
<text  x="644.84" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, google::dense_hash_set&lt;unsigned int, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, google::libc_allocator_with_realloc&lt;unsigned int&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int const, google::dense_hash_set&lt;unsigned int, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, google::libc_allocator_with_realloc&lt;unsigned int&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (15 samples, 0.01%)</title><rect x="439.2" y="469" width="0.2" height="15.0" fill="rgb(210,228,37)" rx="2" ry="2" />
<text  x="442.21" y="479.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (10 samples, 0.01%)</title><rect x="968.0" y="469" width="0.1" height="15.0" fill="rgb(206,213,9)" rx="2" ry="2" />
<text  x="970.99" y="479.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (29 samples, 0.03%)</title><rect x="413.7" y="389" width="0.3" height="15.0" fill="rgb(242,91,46)" rx="2" ry="2" />
<text  x="416.71" y="399.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (10 samples, 0.01%)</title><rect x="930.9" y="421" width="0.2" height="15.0" fill="rgb(210,60,28)" rx="2" ry="2" />
<text  x="933.94" y="431.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (12 samples, 0.01%)</title><rect x="697.6" y="437" width="0.1" height="15.0" fill="rgb(237,180,17)" rx="2" ry="2" />
<text  x="700.57" y="447.5" ></text>
</g>
<g >
<title>alloc_pid (10 samples, 0.01%)</title><rect x="138.3" y="421" width="0.1" height="15.0" fill="rgb(242,147,5)" rx="2" ry="2" />
<text  x="141.27" y="431.5" ></text>
</g>
<g >
<title>futex_wait (102 samples, 0.09%)</title><rect x="136.8" y="437" width="1.1" height="15.0" fill="rgb(205,173,6)" rx="2" ry="2" />
<text  x="139.76" y="447.5" ></text>
</g>
<g >
<title>__memcpy_ssse3_back (164 samples, 0.15%)</title><rect x="1139.9" y="469" width="1.8" height="15.0" fill="rgb(216,84,51)" rx="2" ry="2" />
<text  x="1142.92" y="479.5" ></text>
</g>
<g >
<title>nmi (22 samples, 0.02%)</title><rect x="957.3" y="501" width="0.2" height="15.0" fill="rgb(211,173,50)" rx="2" ry="2" />
<text  x="960.28" y="511.5" ></text>
</g>
<g >
<title>__check_object_size (11 samples, 0.01%)</title><rect x="283.2" y="405" width="0.1" height="15.0" fill="rgb(227,215,14)" rx="2" ry="2" />
<text  x="286.21" y="415.5" ></text>
</g>
<g >
<title>RSA_padding_add_PKCS1_type_2 (136 samples, 0.13%)</title><rect x="114.6" y="517" width="1.5" height="15.0" fill="rgb(251,76,2)" rx="2" ry="2" />
<text  x="117.57" y="527.5" ></text>
</g>
<g >
<title>mark_wake_futex (17 samples, 0.02%)</title><rect x="176.6" y="437" width="0.2" height="15.0" fill="rgb(254,59,4)" rx="2" ry="2" />
<text  x="179.61" y="447.5" ></text>
</g>
<g >
<title>BN_set_bit (24 samples, 0.02%)</title><rect x="79.2" y="517" width="0.3" height="15.0" fill="rgb(211,56,13)" rx="2" ry="2" />
<text  x="82.24" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Node_const_iterator&lt;std::pair&lt;unsigned int const, bannerd::PadEx&gt;, false, false&gt;::operator++ (11 samples, 0.01%)</title><rect x="104.3" y="501" width="0.1" height="15.0" fill="rgb(214,40,30)" rx="2" ry="2" />
<text  x="107.30" y="511.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (56 samples, 0.05%)</title><rect x="970.4" y="501" width="0.7" height="15.0" fill="rgb(215,117,32)" rx="2" ry="2" />
<text  x="973.45" y="511.5" ></text>
</g>
<g >
<title>bannerd::store::ActiveCampaignIndex::setPadFilters (82 samples, 0.08%)</title><rect x="428.8" y="453" width="0.9" height="15.0" fill="rgb(220,190,0)" rx="2" ry="2" />
<text  x="431.75" y="463.5" ></text>
</g>
<g >
<title>idle_balance (18 samples, 0.02%)</title><rect x="307.3" y="389" width="0.2" height="15.0" fill="rgb(237,62,11)" rx="2" ry="2" />
<text  x="310.33" y="399.5" ></text>
</g>
<g >
<title>__memcpy_ssse3_back (99 samples, 0.09%)</title><rect x="936.4" y="501" width="1.1" height="15.0" fill="rgb(223,81,28)" rx="2" ry="2" />
<text  x="939.38" y="511.5" ></text>
</g>
<g >
<title>do_futex (16 samples, 0.01%)</title><rect x="893.4" y="437" width="0.2" height="15.0" fill="rgb(240,22,9)" rx="2" ry="2" />
<text  x="896.45" y="447.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::word (116 samples, 0.11%)</title><rect x="1092.8" y="453" width="1.3" height="15.0" fill="rgb(250,140,36)" rx="2" ry="2" />
<text  x="1095.84" y="463.5" ></text>
</g>
<g >
<title>system_call_after_swapgs (87 samples, 0.08%)</title><rect x="184.0" y="501" width="1.0" height="15.0" fill="rgb(230,211,18)" rx="2" ry="2" />
<text  x="187.03" y="511.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::operator&amp;= (114 samples, 0.11%)</title><rect x="1096.3" y="517" width="1.2" height="15.0" fill="rgb(233,168,41)" rx="2" ry="2" />
<text  x="1099.26" y="527.5" ></text>
</g>
<g >
<title>tcmalloc::ThreadCache::Scavenge (20 samples, 0.02%)</title><rect x="1148.0" y="517" width="0.2" height="15.0" fill="rgb(237,216,5)" rx="2" ry="2" />
<text  x="1151.01" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::allocator&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;&amp;&gt; (44 samples, 0.04%)</title><rect x="977.8" y="517" width="0.4" height="15.0" fill="rgb(213,212,7)" rx="2" ry="2" />
<text  x="980.75" y="527.5" ></text>
</g>
<g >
<title>system_call_fastpath (28 samples, 0.03%)</title><rect x="856.7" y="485" width="0.3" height="15.0" fill="rgb(243,121,52)" rx="2" ry="2" />
<text  x="859.69" y="495.5" ></text>
</g>
<g >
<title>_IO_vsnprintf (169 samples, 0.16%)</title><rect x="985.4" y="485" width="1.8" height="15.0" fill="rgb(222,87,54)" rx="2" ry="2" />
<text  x="988.37" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::_M_erase_at_end (22 samples, 0.02%)</title><rect x="164.1" y="469" width="0.2" height="15.0" fill="rgb(208,131,2)" rx="2" ry="2" />
<text  x="167.08" y="479.5" ></text>
</g>
<g >
<title>std::string::_Rep::_S_create (96 samples, 0.09%)</title><rect x="949.7" y="517" width="1.0" height="15.0" fill="rgb(248,226,51)" rx="2" ry="2" />
<text  x="952.68" y="527.5" ></text>
</g>
<g >
<title>target::bitmap::Index&lt;std::string, unsigned int, std::unordered_map&lt;std::string, unsigned int, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, unsigned int&gt; &gt; &gt; &gt;::map (26 samples, 0.02%)</title><rect x="991.4" y="517" width="0.2" height="15.0" fill="rgb(234,183,36)" rx="2" ry="2" />
<text  x="994.36" y="527.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::operator|= (330 samples, 0.31%)</title><rect x="422.2" y="501" width="3.6" height="15.0" fill="rgb(232,119,51)" rx="2" ry="2" />
<text  x="425.17" y="511.5" ></text>
</g>
<g >
<title>sys_futex (13 samples, 0.01%)</title><rect x="977.4" y="421" width="0.2" height="15.0" fill="rgb(221,226,23)" rx="2" ry="2" />
<text  x="980.45" y="431.5" ></text>
</g>
<g >
<title>equal_range&lt;__gnu_cxx::__normal_iterator&lt;const bannerd::details::InternalStorage::Record*, std::vector&lt;bannerd::details::InternalStorage::Record&gt; &gt;, bannerd::details::InternalStorage::Record, (anonymous namespace)::CompareByClass&gt; (2,335 samples, 2.17%)</title><rect x="356.3" y="501" width="25.6" height="15.0" fill="rgb(221,93,14)" rx="2" ry="2" />
<text  x="359.28" y="511.5" >e..</text>
</g>
<g >
<title>system_call_fastpath (108 samples, 0.10%)</title><rect x="316.1" y="485" width="1.1" height="15.0" fill="rgb(241,111,24)" rx="2" ry="2" />
<text  x="319.05" y="495.5" ></text>
</g>
<g >
<title>__strlen_sse2_pminub (15 samples, 0.01%)</title><rect x="987.2" y="501" width="0.2" height="15.0" fill="rgb(233,62,16)" rx="2" ry="2" />
<text  x="990.22" y="511.5" ></text>
</g>
<g >
<title>std::map&lt;std::string, std::string, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::lower_bound (146 samples, 0.14%)</title><rect x="945.4" y="501" width="1.6" height="15.0" fill="rgb(221,165,7)" rx="2" ry="2" />
<text  x="948.45" y="511.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt; &gt; (12 samples, 0.01%)</title><rect x="701.6" y="421" width="0.1" height="15.0" fill="rgb(250,22,20)" rx="2" ry="2" />
<text  x="704.59" y="431.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (29 samples, 0.03%)</title><rect x="265.5" y="453" width="0.3" height="15.0" fill="rgb(221,220,53)" rx="2" ry="2" />
<text  x="268.46" y="463.5" ></text>
</g>
<g >
<title>do_softirq (13 samples, 0.01%)</title><rect x="1164.4" y="229" width="0.2" height="15.0" fill="rgb(252,35,35)" rx="2" ry="2" />
<text  x="1167.43" y="239.5" ></text>
</g>
<g >
<title>base::subtle::NoBarrier_Load (27 samples, 0.03%)</title><rect x="1126.3" y="469" width="0.3" height="15.0" fill="rgb(220,211,21)" rx="2" ry="2" />
<text  x="1129.28" y="479.5" ></text>
</g>
<g >
<title>std::equal_to&lt;target::dynamic_bitset&gt;::operator (107 samples, 0.10%)</title><rect x="439.6" y="389" width="1.1" height="15.0" fill="rgb(225,66,50)" rx="2" ry="2" />
<text  x="442.55" y="399.5" ></text>
</g>
<g >
<title>futex_wait_setup (149 samples, 0.14%)</title><rect x="188.9" y="437" width="1.6" height="15.0" fill="rgb(240,72,29)" rx="2" ry="2" />
<text  x="191.88" y="447.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;unsigned char const&amp;, unsigned int const&amp;, unsigned char const&amp;, unsigned int const&amp;&gt;, std::tuple&lt;unsigned char const&amp;, unsigned int const&amp;, unsigned char const&amp;, unsigned int const&amp;&gt;, 0ul, 4ul&gt;::__less (252 samples, 0.23%)</title><rect x="151.4" y="469" width="2.8" height="15.0" fill="rgb(220,140,22)" rx="2" ry="2" />
<text  x="154.39" y="479.5" ></text>
</g>
<g >
<title>ip_finish_output (44 samples, 0.04%)</title><rect x="284.4" y="293" width="0.5" height="15.0" fill="rgb(232,57,38)" rx="2" ry="2" />
<text  x="287.41" y="303.5" ></text>
</g>
<g >
<title>futex_wake (15 samples, 0.01%)</title><rect x="892.1" y="421" width="0.2" height="15.0" fill="rgb(208,225,23)" rx="2" ry="2" />
<text  x="895.09" y="431.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_wrlock (12 samples, 0.01%)</title><rect x="893.1" y="485" width="0.1" height="15.0" fill="rgb(231,42,41)" rx="2" ry="2" />
<text  x="896.10" y="495.5" ></text>
</g>
<g >
<title>EVP_DigestFinal_ex (60 samples, 0.06%)</title><rect x="99.4" y="517" width="0.6" height="15.0" fill="rgb(241,24,42)" rx="2" ry="2" />
<text  x="102.36" y="527.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (47 samples, 0.04%)</title><rect x="296.9" y="421" width="0.5" height="15.0" fill="rgb(217,180,17)" rx="2" ry="2" />
<text  x="299.88" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, std::string&gt;, std::_Select1st&lt;std::pair&lt;std::string const, std::string&gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::_M_construct_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::string const&amp;&gt;, std::tuple&lt;&gt; &gt; (19 samples, 0.02%)</title><rect x="157.5" y="469" width="0.2" height="15.0" fill="rgb(246,130,48)" rx="2" ry="2" />
<text  x="160.52" y="479.5" ></text>
</g>
<g >
<title>_IO_vfprintf_internal (12 samples, 0.01%)</title><rect x="833.9" y="469" width="0.1" height="15.0" fill="rgb(246,63,39)" rx="2" ry="2" />
<text  x="836.88" y="479.5" ></text>
</g>
<g >
<title>base::subtle::NoBarrier_Load (45 samples, 0.04%)</title><rect x="1113.0" y="469" width="0.4" height="15.0" fill="rgb(239,43,12)" rx="2" ry="2" />
<text  x="1115.96" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, std::string&gt;, std::_Select1st&lt;std::pair&lt;std::string const, std::string&gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::_M_lower_bound_tr&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, void&gt; (16 samples, 0.01%)</title><rect x="689.5" y="453" width="0.1" height="15.0" fill="rgb(223,13,9)" rx="2" ry="2" />
<text  x="692.45" y="463.5" ></text>
</g>
<g >
<title>PackedCache&lt;35&gt;::Hash (39 samples, 0.04%)</title><rect x="1116.2" y="421" width="0.4" height="15.0" fill="rgb(238,27,43)" rx="2" ry="2" />
<text  x="1119.19" y="431.5" ></text>
</g>
<g >
<title>google::dense_hashtable&lt;unsigned int, unsigned int, std::hash&lt;unsigned int&gt;, google::dense_hash_set&lt;unsigned int, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, google::libc_allocator_with_realloc&lt;unsigned int&gt; &gt;::Identity, google::dense_hash_set&lt;unsigned int, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, google::libc_allocator_with_realloc&lt;unsigned int&gt; &gt;::SetKey, std::equal_to&lt;unsigned int&gt;, google::libc_allocator_with_realloc&lt;unsigned int&gt; &gt;::insert&lt;__gnu_cxx::__normal_iterator&lt;unsigned int*, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt; &gt; &gt; (36 samples, 0.03%)</title><rect x="436.3" y="469" width="0.4" height="15.0" fill="rgb(254,33,12)" rx="2" ry="2" />
<text  x="439.29" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;target::dynamic_bitset, target::dynamic_bitset, std::allocator&lt;target::dynamic_bitset&gt;, std::__detail::_Identity, std::equal_to&lt;target::dynamic_bitset&gt;, std::hash&lt;target::dynamic_bitset&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_find_node (107 samples, 0.10%)</title><rect x="439.6" y="453" width="1.1" height="15.0" fill="rgb(207,151,42)" rx="2" ry="2" />
<text  x="442.55" y="463.5" ></text>
</g>
<g >
<title>std::string::compare (17 samples, 0.02%)</title><rect x="945.3" y="453" width="0.1" height="15.0" fill="rgb(219,75,32)" rx="2" ry="2" />
<text  x="948.26" y="463.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::_S_cmp&lt;std::string const&amp;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const&amp;&gt; (51 samples, 0.05%)</title><rect x="413.7" y="437" width="0.5" height="15.0" fill="rgb(219,12,52)" rx="2" ry="2" />
<text  x="416.69" y="447.5" ></text>
</g>
<g >
<title>RSA_new_method (41 samples, 0.04%)</title><rect x="114.1" y="517" width="0.5" height="15.0" fill="rgb(235,156,15)" rx="2" ry="2" />
<text  x="117.12" y="527.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;unsigned char const&amp;, std::string const&amp;&gt;, std::tuple&lt;unsigned char const&amp;, std::string const&amp;&gt;, 0ul, 2ul&gt;::__less (25 samples, 0.02%)</title><rect x="382.1" y="389" width="0.3" height="15.0" fill="rgb(242,5,14)" rx="2" ry="2" />
<text  x="385.11" y="399.5" ></text>
</g>
<g >
<title>selectSingleCampaign&lt;(anonymous namespace)::DontProfileTime&gt; (17 samples, 0.02%)</title><rect x="323.5" y="469" width="0.2" height="15.0" fill="rgb(252,3,12)" rx="2" ry="2" />
<text  x="326.47" y="479.5" ></text>
</g>
<g >
<title>rb::parse_url_get_params (1,179 samples, 1.09%)</title><rect x="839.7" y="517" width="13.0" height="15.0" fill="rgb(240,178,2)" rx="2" ry="2" />
<text  x="842.74" y="527.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (12 samples, 0.01%)</title><rect x="898.0" y="453" width="0.1" height="15.0" fill="rgb(205,34,26)" rx="2" ry="2" />
<text  x="901.02" y="463.5" ></text>
</g>
<g >
<title>rb::base64_encode_nz (382 samples, 0.35%)</title><rect x="835.5" y="517" width="4.2" height="15.0" fill="rgb(221,166,23)" rx="2" ry="2" />
<text  x="838.49" y="527.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_wrlock (10 samples, 0.01%)</title><rect x="894.6" y="501" width="0.1" height="15.0" fill="rgb(207,27,45)" rx="2" ry="2" />
<text  x="897.61" y="511.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (16 samples, 0.01%)</title><rect x="807.9" y="437" width="0.2" height="15.0" fill="rgb(250,16,37)" rx="2" ry="2" />
<text  x="810.92" y="447.5" ></text>
</g>
<g >
<title>system_call_fastpath (42 samples, 0.04%)</title><rect x="308.2" y="485" width="0.5" height="15.0" fill="rgb(210,169,41)" rx="2" ry="2" />
<text  x="311.21" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long long, target::dynamic_bitset::AlignedAllocator&lt;unsigned long long&gt; &gt;::vector (34 samples, 0.03%)</title><rect x="830.7" y="469" width="0.4" height="15.0" fill="rgb(223,3,2)" rx="2" ry="2" />
<text  x="833.71" y="479.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (58 samples, 0.05%)</title><rect x="136.9" y="421" width="0.6" height="15.0" fill="rgb(229,135,18)" rx="2" ry="2" />
<text  x="139.89" y="431.5" ></text>
</g>
<g >
<title>sysret_check (13 samples, 0.01%)</title><rect x="285.6" y="501" width="0.2" height="15.0" fill="rgb(227,137,4)" rx="2" ry="2" />
<text  x="288.62" y="511.5" ></text>
</g>
<g >
<title>scheduler_tick (11 samples, 0.01%)</title><rect x="802.1" y="373" width="0.1" height="15.0" fill="rgb(237,148,3)" rx="2" ry="2" />
<text  x="805.11" y="383.5" ></text>
</g>
<g >
<title>std::map&lt;std::string, std::string, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (63 samples, 0.06%)</title><rect x="413.6" y="501" width="0.6" height="15.0" fill="rgb(237,2,46)" rx="2" ry="2" />
<text  x="416.56" y="511.5" ></text>
</g>
<g >
<title>tcmalloc::PageHeap::GetDescriptor (44 samples, 0.04%)</title><rect x="1142.8" y="453" width="0.5" height="15.0" fill="rgb(227,226,38)" rx="2" ry="2" />
<text  x="1145.82" y="463.5" ></text>
</g>
<g >
<title>finish_task_switch (38 samples, 0.04%)</title><rect x="308.2" y="389" width="0.5" height="15.0" fill="rgb(222,22,19)" rx="2" ry="2" />
<text  x="311.24" y="399.5" ></text>
</g>
<g >
<title>tcmalloc::ThreadCache::ReleaseToCentralCache (67 samples, 0.06%)</title><rect x="1147.3" y="517" width="0.7" height="15.0" fill="rgb(248,175,46)" rx="2" ry="2" />
<text  x="1150.28" y="527.5" ></text>
</g>
<g >
<title>OPENSSL_cleanse (98 samples, 0.09%)</title><rect x="130.6" y="501" width="1.1" height="15.0" fill="rgb(221,98,30)" rx="2" ry="2" />
<text  x="133.62" y="511.5" ></text>
</g>
<g >
<title>openssl_lock_function (44 samples, 0.04%)</title><rect x="807.6" y="501" width="0.5" height="15.0" fill="rgb(228,37,35)" rx="2" ry="2" />
<text  x="810.62" y="511.5" ></text>
</g>
<g >
<title>sys_futex (139 samples, 0.13%)</title><rect x="320.0" y="373" width="1.5" height="15.0" fill="rgb(216,196,39)" rx="2" ry="2" />
<text  x="322.98" y="383.5" ></text>
</g>
<g >
<title>std::string::append (110 samples, 0.10%)</title><rect x="415.6" y="485" width="1.2" height="15.0" fill="rgb(219,225,26)" rx="2" ry="2" />
<text  x="418.62" y="495.5" ></text>
</g>
<g >
<title>do_softirq (13 samples, 0.01%)</title><rect x="277.2" y="453" width="0.1" height="15.0" fill="rgb(207,215,54)" rx="2" ry="2" />
<text  x="280.16" y="463.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_wrlock (41 samples, 0.04%)</title><rect x="856.6" y="501" width="0.4" height="15.0" fill="rgb(218,110,19)" rx="2" ry="2" />
<text  x="859.55" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, std::string&gt;, std::_Select1st&lt;std::pair&lt;std::string const, std::string&gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::_M_insert_node (154 samples, 0.14%)</title><rect x="929.0" y="517" width="1.7" height="15.0" fill="rgb(240,202,12)" rx="2" ry="2" />
<text  x="932.03" y="527.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (13 samples, 0.01%)</title><rect x="137.3" y="357" width="0.2" height="15.0" fill="rgb(216,26,23)" rx="2" ry="2" />
<text  x="140.31" y="367.5" ></text>
</g>
<g >
<title>bannerd::engine::gp_param::var (70 samples, 0.06%)</title><rect x="413.5" y="517" width="0.7" height="15.0" fill="rgb(239,193,14)" rx="2" ry="2" />
<text  x="416.48" y="527.5" ></text>
</g>
<g >
<title>count (20 samples, 0.02%)</title><rect x="103.8" y="485" width="0.2" height="15.0" fill="rgb(209,203,42)" rx="2" ry="2" />
<text  x="106.77" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::io::CodedOutputStream::VarintSize32 (12 samples, 0.01%)</title><rect x="1153.9" y="485" width="0.1" height="15.0" fill="rgb(212,118,13)" rx="2" ry="2" />
<text  x="1156.90" y="495.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (36 samples, 0.03%)</title><rect x="930.2" y="437" width="0.4" height="15.0" fill="rgb(207,205,32)" rx="2" ry="2" />
<text  x="933.20" y="447.5" ></text>
</g>
<g >
<title>tick_sched_timer (15 samples, 0.01%)</title><rect x="802.1" y="421" width="0.1" height="15.0" fill="rgb(215,115,22)" rx="2" ry="2" />
<text  x="805.07" y="431.5" ></text>
</g>
<g >
<title>_itoa_word (118 samples, 0.11%)</title><rect x="640.5" y="469" width="1.3" height="15.0" fill="rgb(251,179,50)" rx="2" ry="2" />
<text  x="643.50" y="479.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_destroy (10 samples, 0.01%)</title><rect x="976.2" y="485" width="0.1" height="15.0" fill="rgb(215,218,14)" rx="2" ry="2" />
<text  x="979.17" y="495.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::_S_cmp&lt;std::string const&amp;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const&amp;&gt; (161 samples, 0.15%)</title><rect x="656.0" y="405" width="1.7" height="15.0" fill="rgb(222,169,48)" rx="2" ry="2" />
<text  x="658.98" y="415.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt; &gt; (469 samples, 0.44%)</title><rect x="662.4" y="389" width="5.2" height="15.0" fill="rgb(225,77,7)" rx="2" ry="2" />
<text  x="665.41" y="399.5" ></text>
</g>
<g >
<title>find_busiest_group (12 samples, 0.01%)</title><rect x="307.4" y="357" width="0.1" height="15.0" fill="rgb(224,110,36)" rx="2" ry="2" />
<text  x="310.39" y="367.5" ></text>
</g>
<g >
<title>bannerd::store::ActiveCampaignIndex::setPadFilters (23 samples, 0.02%)</title><rect x="441.8" y="469" width="0.2" height="15.0" fill="rgb(252,121,15)" rx="2" ry="2" />
<text  x="444.79" y="479.5" ></text>
</g>
<g >
<title>sys_write (16 samples, 0.01%)</title><rect x="133.8" y="469" width="0.2" height="15.0" fill="rgb(216,36,48)" rx="2" ry="2" />
<text  x="136.79" y="479.5" ></text>
</g>
<g >
<title>finish_task_switch (30 samples, 0.03%)</title><rect x="899.5" y="357" width="0.3" height="15.0" fill="rgb(215,122,3)" rx="2" ry="2" />
<text  x="902.47" y="367.5" ></text>
</g>
<g >
<title>std::__advance&lt;__gnu_cxx::__normal_iterator&lt;bannerd::details::InternalStorage::Record const*, std::vector&lt;bannerd::details::InternalStorage::Record, std::allocator&lt;bannerd::details::InternalStorage::Record&gt; &gt; &gt;, long&gt; (16 samples, 0.01%)</title><rect x="381.2" y="453" width="0.1" height="15.0" fill="rgb(208,24,25)" rx="2" ry="2" />
<text  x="384.15" y="463.5" ></text>
</g>
<g >
<title>std::mutex::unlock (21 samples, 0.02%)</title><rect x="321.7" y="453" width="0.2" height="15.0" fill="rgb(207,164,3)" rx="2" ry="2" />
<text  x="324.71" y="463.5" ></text>
</g>
<g >
<title>bannerd::store::ActiveCampaignIndex::byPad (642 samples, 0.60%)</title><rect x="418.8" y="517" width="7.0" height="15.0" fill="rgb(253,158,11)" rx="2" ry="2" />
<text  x="421.75" y="527.5" ></text>
</g>
<g >
<title>x86_pmu_enable (42 samples, 0.04%)</title><rect x="293.5" y="357" width="0.5" height="15.0" fill="rgb(219,133,22)" rx="2" ry="2" />
<text  x="296.51" y="367.5" ></text>
</g>
<g >
<title>std::string::_S_construct&lt;char const*&gt; (15 samples, 0.01%)</title><rect x="163.4" y="501" width="0.1" height="15.0" fill="rgb(244,147,31)" rx="2" ry="2" />
<text  x="166.38" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;unsigned int, std::pair&lt;unsigned int const, google::dense_hash_set&lt;unsigned int, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, google::libc_allocator_with_realloc&lt;unsigned int&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int const, google::dense_hash_set&lt;unsigned int, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, google::libc_allocator_with_realloc&lt;unsigned int&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (16 samples, 0.01%)</title><rect x="439.2" y="485" width="0.2" height="15.0" fill="rgb(252,84,31)" rx="2" ry="2" />
<text  x="442.20" y="495.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::BitHandler::operator bool (23 samples, 0.02%)</title><rect x="441.8" y="501" width="0.2" height="15.0" fill="rgb(235,121,23)" rx="2" ry="2" />
<text  x="444.79" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::push_back (39 samples, 0.04%)</title><rect x="979.4" y="517" width="0.5" height="15.0" fill="rgb(237,210,41)" rx="2" ry="2" />
<text  x="982.44" y="527.5" ></text>
</g>
<g >
<title>system_call_fastpath (13 samples, 0.01%)</title><rect x="138.0" y="485" width="0.1" height="15.0" fill="rgb(219,160,33)" rx="2" ry="2" />
<text  x="141.00" y="495.5" ></text>
</g>
<g >
<title>std::string::append (48 samples, 0.04%)</title><rect x="976.5" y="501" width="0.5" height="15.0" fill="rgb(244,176,30)" rx="2" ry="2" />
<text  x="979.52" y="511.5" ></text>
</g>
<g >
<title>trg::tarantool_client::epoll_loop::prepare_to_new_request (242 samples, 0.22%)</title><rect x="1164.7" y="517" width="2.6" height="15.0" fill="rgb(247,53,2)" rx="2" ry="2" />
<text  x="1167.67" y="527.5" ></text>
</g>
<g >
<title>wake_up_q (12 samples, 0.01%)</title><rect x="893.5" y="405" width="0.1" height="15.0" fill="rgb(239,224,13)" rx="2" ry="2" />
<text  x="896.49" y="415.5" ></text>
</g>
<g >
<title>__snprintf (173 samples, 0.16%)</title><rect x="985.3" y="501" width="1.9" height="15.0" fill="rgb(244,94,33)" rx="2" ry="2" />
<text  x="988.32" y="511.5" ></text>
</g>
<g >
<title>tcmalloc::SLL_Next (280 samples, 0.26%)</title><rect x="1129.2" y="437" width="3.1" height="15.0" fill="rgb(221,29,50)" rx="2" ry="2" />
<text  x="1132.20" y="447.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::operator (49 samples, 0.05%)</title><rect x="930.2" y="501" width="0.5" height="15.0" fill="rgb(211,152,26)" rx="2" ry="2" />
<text  x="933.18" y="511.5" ></text>
</g>
<g >
<title>rb_rsa_public_encrypt_size (15 samples, 0.01%)</title><rect x="857.0" y="517" width="0.2" height="15.0" fill="rgb(233,53,52)" rx="2" ry="2" />
<text  x="860.02" y="527.5" ></text>
</g>
<g >
<title>schedule (17 samples, 0.02%)</title><rect x="286.2" y="421" width="0.2" height="15.0" fill="rgb(245,63,1)" rx="2" ry="2" />
<text  x="289.21" y="431.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (29 samples, 0.03%)</title><rect x="675.1" y="373" width="0.3" height="15.0" fill="rgb(229,34,46)" rx="2" ry="2" />
<text  x="678.10" y="383.5" ></text>
</g>
<g >
<title>do_nanosleep (10 samples, 0.01%)</title><rect x="134.0" y="421" width="0.1" height="15.0" fill="rgb(247,84,50)" rx="2" ry="2" />
<text  x="136.96" y="431.5" ></text>
</g>
<g >
<title>__schedule (16 samples, 0.01%)</title><rect x="286.2" y="405" width="0.2" height="15.0" fill="rgb(242,108,23)" rx="2" ry="2" />
<text  x="289.22" y="415.5" ></text>
</g>
<g >
<title>trg::tnt::v15::Reply::feed&lt;std::shared_ptr&lt;clientserver::epoll::socket_buffer&lt;trg::tarantool_client::epoll_client_socket&gt; &gt; &gt; (14 samples, 0.01%)</title><rect x="1170.1" y="517" width="0.2" height="15.0" fill="rgb(248,55,16)" rx="2" ry="2" />
<text  x="1173.13" y="527.5" ></text>
</g>
<g >
<title>native_rw_rdlock (18 samples, 0.02%)</title><rect x="807.7" y="453" width="0.2" height="15.0" fill="rgb(221,14,15)" rx="2" ry="2" />
<text  x="810.72" y="463.5" ></text>
</g>
<g >
<title>ret_from_intr (34 samples, 0.03%)</title><rect x="992.7" y="485" width="0.4" height="15.0" fill="rgb(230,42,10)" rx="2" ry="2" />
<text  x="995.69" y="495.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (94 samples, 0.09%)</title><rect x="898.8" y="405" width="1.1" height="15.0" fill="rgb(234,175,23)" rx="2" ry="2" />
<text  x="901.84" y="415.5" ></text>
</g>
<g >
<title>__memcpy_sse2 (14 samples, 0.01%)</title><rect x="330.2" y="501" width="0.1" height="15.0" fill="rgb(241,217,24)" rx="2" ry="2" />
<text  x="333.19" y="511.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (18 samples, 0.02%)</title><rect x="802.3" y="469" width="0.2" height="15.0" fill="rgb(212,161,7)" rx="2" ry="2" />
<text  x="805.26" y="479.5" ></text>
</g>
<g >
<title>task_ctx_sched_out (20 samples, 0.02%)</title><rect x="298.6" y="373" width="0.2" height="15.0" fill="rgb(238,76,37)" rx="2" ry="2" />
<text  x="301.57" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::allocator&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::_M_check_len (13 samples, 0.01%)</title><rect x="978.0" y="501" width="0.1" height="15.0" fill="rgb(244,122,29)" rx="2" ry="2" />
<text  x="981.01" y="511.5" ></text>
</g>
<g >
<title>__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;const bannerd::UrlObjectLimitEx* const*, std::vector&lt;const bannerd::UrlObjectLimitEx*&gt; &gt;, unsigned int, __gnu_cxx::__ops::_Iter_comp_val&lt;(anonymous namespace)::LessByTestId&gt; &gt; (12 samples, 0.01%)</title><rect x="329.3" y="485" width="0.1" height="15.0" fill="rgb(235,131,36)" rx="2" ry="2" />
<text  x="332.25" y="495.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (72 samples, 0.07%)</title><rect x="952.2" y="469" width="0.8" height="15.0" fill="rgb(248,120,50)" rx="2" ry="2" />
<text  x="955.19" y="479.5" ></text>
</g>
<g >
<title>__memset_sse2 (25 samples, 0.02%)</title><rect x="979.2" y="405" width="0.2" height="15.0" fill="rgb(238,65,37)" rx="2" ry="2" />
<text  x="982.16" y="415.5" ></text>
</g>
<g >
<title>file_update_time (31 samples, 0.03%)</title><rect x="277.7" y="373" width="0.4" height="15.0" fill="rgb(207,222,16)" rx="2" ry="2" />
<text  x="280.72" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;bannerd::details::InternalStorage::Record const*, std::vector&lt;bannerd::details::InternalStorage::Record, std::allocator&lt;bannerd::details::InternalStorage::Record&gt; &gt; &gt; (24 samples, 0.02%)</title><rect x="392.5" y="437" width="0.3" height="15.0" fill="rgb(214,149,44)" rx="2" ry="2" />
<text  x="395.54" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, std::string&gt;, std::_Select1st&lt;std::pair&lt;std::string const, std::string&gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::_M_destroy_node (134 samples, 0.12%)</title><rect x="927.4" y="485" width="1.5" height="15.0" fill="rgb(253,177,36)" rx="2" ry="2" />
<text  x="930.43" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::string, std::pair&lt;std::string const, unsigned int&gt;, std::__detail::_Select1st, std::equal_to&lt;std::string&gt;, std::hash&lt;std::string&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (12 samples, 0.01%)</title><rect x="920.9" y="501" width="0.1" height="15.0" fill="rgb(229,196,47)" rx="2" ry="2" />
<text  x="923.88" y="511.5" ></text>
</g>
<g >
<title>__strchr_sse42 (131 samples, 0.12%)</title><rect x="679.6" y="485" width="1.5" height="15.0" fill="rgb(231,124,13)" rx="2" ry="2" />
<text  x="682.62" y="495.5" ></text>
</g>
<g >
<title>perf_event_alloc (182 samples, 0.17%)</title><rect x="139.7" y="373" width="2.0" height="15.0" fill="rgb(234,15,44)" rx="2" ry="2" />
<text  x="142.67" y="383.5" ></text>
</g>
<g >
<title>append (252 samples, 0.23%)</title><rect x="817.6" y="501" width="2.8" height="15.0" fill="rgb(241,214,32)" rx="2" ry="2" />
<text  x="820.60" y="511.5" ></text>
</g>
<g >
<title>xfs_vn_update_time (31 samples, 0.03%)</title><rect x="129.9" y="357" width="0.3" height="15.0" fill="rgb(235,87,20)" rx="2" ry="2" />
<text  x="132.88" y="367.5" ></text>
</g>
<g >
<title>system_call_fastpath (24 samples, 0.02%)</title><rect x="281.7" y="501" width="0.2" height="15.0" fill="rgb(212,175,43)" rx="2" ry="2" />
<text  x="284.69" y="511.5" ></text>
</g>
<g >
<title>xfs_file_aio_write_checks (37 samples, 0.03%)</title><rect x="129.8" y="405" width="0.4" height="15.0" fill="rgb(244,129,10)" rx="2" ry="2" />
<text  x="132.82" y="415.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (28 samples, 0.03%)</title><rect x="897.4" y="341" width="0.3" height="15.0" fill="rgb(225,170,3)" rx="2" ry="2" />
<text  x="900.41" y="351.5" ></text>
</g>
<g >
<title>system_call_fastpath (10 samples, 0.01%)</title><rect x="916.7" y="421" width="0.1" height="15.0" fill="rgb(240,30,2)" rx="2" ry="2" />
<text  x="919.68" y="431.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (32 samples, 0.03%)</title><rect x="189.8" y="421" width="0.3" height="15.0" fill="rgb(244,104,54)" rx="2" ry="2" />
<text  x="192.80" y="431.5" ></text>
</g>
<g >
<title>system_call_fastpath (189 samples, 0.18%)</title><rect x="895.9" y="469" width="2.1" height="15.0" fill="rgb(221,6,4)" rx="2" ry="2" />
<text  x="898.89" y="479.5" ></text>
</g>
<g >
<title>__memset_sse2 (43 samples, 0.04%)</title><rect x="976.5" y="453" width="0.5" height="15.0" fill="rgb(246,82,12)" rx="2" ry="2" />
<text  x="979.55" y="463.5" ></text>
</g>
<g >
<title>bn_sqr8x_mont (13 samples, 0.01%)</title><rect x="631.2" y="501" width="0.1" height="15.0" fill="rgb(253,70,7)" rx="2" ry="2" />
<text  x="634.17" y="511.5" ></text>
</g>
<g >
<title>std::pair&lt;std::string const, std::string&gt;::pair&lt;std::string const&amp;&gt; (19 samples, 0.02%)</title><rect x="157.5" y="421" width="0.2" height="15.0" fill="rgb(217,75,16)" rx="2" ry="2" />
<text  x="160.52" y="431.5" ></text>
</g>
<g >
<title>bannerd::store::ActiveCampaignIndex::setPadFilters (21 samples, 0.02%)</title><rect x="436.3" y="437" width="0.2" height="15.0" fill="rgb(216,229,46)" rx="2" ry="2" />
<text  x="439.29" y="447.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (16 samples, 0.01%)</title><rect x="278.5" y="517" width="0.2" height="15.0" fill="rgb(243,4,8)" rx="2" ry="2" />
<text  x="281.51" y="527.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (14 samples, 0.01%)</title><rect x="329.1" y="485" width="0.1" height="15.0" fill="rgb(253,93,9)" rx="2" ry="2" />
<text  x="332.09" y="495.5" ></text>
</g>
<g >
<title>std::string::_Rep::_S_create (60 samples, 0.06%)</title><rect x="974.6" y="485" width="0.7" height="15.0" fill="rgb(239,116,43)" rx="2" ry="2" />
<text  x="977.61" y="495.5" ></text>
</g>
<g >
<title>std::string::operator std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; (65 samples, 0.06%)</title><rect x="687.6" y="389" width="0.7" height="15.0" fill="rgb(254,27,12)" rx="2" ry="2" />
<text  x="690.63" y="399.5" ></text>
</g>
<g >
<title>get_bits (567 samples, 0.53%)</title><rect x="1182.5" y="501" width="6.2" height="15.0" fill="rgb(205,192,54)" rx="2" ry="2" />
<text  x="1185.45" y="511.5" ></text>
</g>
<g >
<title>BN_MONT_CTX_set (15 samples, 0.01%)</title><rect x="26.3" y="517" width="0.2" height="15.0" fill="rgb(241,61,52)" rx="2" ry="2" />
<text  x="29.33" y="527.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (18 samples, 0.02%)</title><rect x="145.4" y="373" width="0.2" height="15.0" fill="rgb(245,181,5)" rx="2" ry="2" />
<text  x="148.41" y="383.5" ></text>
</g>
<g >
<title>ip_rcv (21 samples, 0.02%)</title><rect x="992.8" y="277" width="0.2" height="15.0" fill="rgb(206,226,41)" rx="2" ry="2" />
<text  x="995.81" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;bannerd::UrlLimitsIndex::Key, std::pair&lt;bannerd::UrlLimitsIndex::Key const, std::vector&lt;bannerd::UrlObjectLimitEx const*, std::allocator&lt;bannerd::UrlObjectLimitEx const*&gt; &gt; &gt;, std::__detail::_Select1st, bannerd::UrlLimitsIndex::KeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (41 samples, 0.04%)</title><rect x="919.1" y="485" width="0.4" height="15.0" fill="rgb(221,56,20)" rx="2" ry="2" />
<text  x="922.09" y="495.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (37 samples, 0.03%)</title><rect x="949.1" y="501" width="0.4" height="15.0" fill="rgb(219,14,18)" rx="2" ry="2" />
<text  x="952.14" y="511.5" ></text>
</g>
<g >
<title>BN_from_montgomery_word (44 samples, 0.04%)</title><rect x="891.5" y="501" width="0.5" height="15.0" fill="rgb(238,208,3)" rx="2" ry="2" />
<text  x="894.54" y="511.5" ></text>
</g>
<g >
<title>BN_ucmp (160 samples, 0.15%)</title><rect x="85.2" y="517" width="1.8" height="15.0" fill="rgb(209,205,29)" rx="2" ry="2" />
<text  x="88.21" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::reserve (12 samples, 0.01%)</title><rect x="979.9" y="517" width="0.1" height="15.0" fill="rgb(205,131,25)" rx="2" ry="2" />
<text  x="982.87" y="527.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::operator-= (137 samples, 0.13%)</title><rect x="429.7" y="453" width="1.5" height="15.0" fill="rgb(210,115,50)" rx="2" ry="2" />
<text  x="432.65" y="463.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (15 samples, 0.01%)</title><rect x="894.4" y="501" width="0.2" height="15.0" fill="rgb(215,38,6)" rx="2" ry="2" />
<text  x="897.44" y="511.5" ></text>
</g>
<g >
<title>std::map&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; &gt;::lower_bound (16 samples, 0.01%)</title><rect x="815.6" y="453" width="0.2" height="15.0" fill="rgb(254,9,17)" rx="2" ry="2" />
<text  x="818.65" y="463.5" ></text>
</g>
<g >
<title>try_to_wake_up (459 samples, 0.43%)</title><rect x="176.9" y="421" width="5.0" height="15.0" fill="rgb(211,125,6)" rx="2" ry="2" />
<text  x="179.89" y="431.5" ></text>
</g>
<g >
<title>binary_data_pack (23 samples, 0.02%)</title><rect x="857.5" y="501" width="0.2" height="15.0" fill="rgb(219,130,46)" rx="2" ry="2" />
<text  x="860.48" y="511.5" ></text>
</g>
<g >
<title>find_busiest_group (49 samples, 0.05%)</title><rect x="305.7" y="357" width="0.6" height="15.0" fill="rgb(246,190,7)" rx="2" ry="2" />
<text  x="308.72" y="367.5" ></text>
</g>
<g >
<title>schedule (11 samples, 0.01%)</title><rect x="169.1" y="421" width="0.1" height="15.0" fill="rgb(246,135,12)" rx="2" ry="2" />
<text  x="172.08" y="431.5" ></text>
</g>
<g >
<title>__strlen_sse2_pminub (23 samples, 0.02%)</title><rect x="697.7" y="485" width="0.3" height="15.0" fill="rgb(219,127,29)" rx="2" ry="2" />
<text  x="700.73" y="495.5" ></text>
</g>
<g >
<title>trg::tarantool_client::epoll_loop::prepare_to_new_request (48 samples, 0.04%)</title><rect x="1165.5" y="469" width="0.6" height="15.0" fill="rgb(245,9,17)" rx="2" ry="2" />
<text  x="1168.54" y="479.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (10 samples, 0.01%)</title><rect x="930.9" y="357" width="0.2" height="15.0" fill="rgb(232,191,49)" rx="2" ry="2" />
<text  x="933.94" y="367.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (13 samples, 0.01%)</title><rect x="688.7" y="389" width="0.1" height="15.0" fill="rgb(225,86,38)" rx="2" ry="2" />
<text  x="691.65" y="399.5" ></text>
</g>
<g >
<title>__strspn_sse42 (16 samples, 0.01%)</title><rect x="672.1" y="485" width="0.2" height="15.0" fill="rgb(210,167,32)" rx="2" ry="2" />
<text  x="675.10" y="495.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::set (24 samples, 0.02%)</title><rect x="427.5" y="453" width="0.2" height="15.0" fill="rgb(249,96,11)" rx="2" ry="2" />
<text  x="430.47" y="463.5" ></text>
</g>
<g >
<title>sha1_block_data_order (34 samples, 0.03%)</title><rect x="155.8" y="501" width="0.3" height="15.0" fill="rgb(226,138,25)" rx="2" ry="2" />
<text  x="158.75" y="511.5" ></text>
</g>
<g >
<title>schedule (12 samples, 0.01%)</title><rect x="988.2" y="405" width="0.1" height="15.0" fill="rgb(243,32,45)" rx="2" ry="2" />
<text  x="991.17" y="415.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (28 samples, 0.03%)</title><rect x="307.2" y="437" width="0.3" height="15.0" fill="rgb(243,16,37)" rx="2" ry="2" />
<text  x="310.22" y="447.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (135 samples, 0.13%)</title><rect x="159.2" y="421" width="1.4" height="15.0" fill="rgb(205,61,35)" rx="2" ry="2" />
<text  x="162.17" y="431.5" ></text>
</g>
<g >
<title>bannerd::store::ActiveCampaignIndex::setPadFilters (1,478 samples, 1.37%)</title><rect x="425.9" y="517" width="16.2" height="15.0" fill="rgb(219,75,44)" rx="2" ry="2" />
<text  x="428.91" y="527.5" ></text>
</g>
<g >
<title>sys_nanosleep (10 samples, 0.01%)</title><rect x="134.0" y="453" width="0.1" height="15.0" fill="rgb(228,75,17)" rx="2" ry="2" />
<text  x="136.96" y="463.5" ></text>
</g>
<g >
<title>bannerd::store::ActiveCampaignIndex::byPad (37 samples, 0.03%)</title><rect x="423.7" y="469" width="0.4" height="15.0" fill="rgb(253,82,5)" rx="2" ry="2" />
<text  x="426.69" y="479.5" ></text>
</g>
<g >
<title>x86_pmu_enable (240 samples, 0.22%)</title><rect x="301.8" y="341" width="2.6" height="15.0" fill="rgb(239,90,0)" rx="2" ry="2" />
<text  x="304.81" y="351.5" ></text>
</g>
<g >
<title>do_malloc_or_cpp_alloc (13 samples, 0.01%)</title><rect x="281.5" y="469" width="0.2" height="15.0" fill="rgb(231,174,4)" rx="2" ry="2" />
<text  x="284.52" y="479.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (16 samples, 0.01%)</title><rect x="880.7" y="485" width="0.2" height="15.0" fill="rgb(233,100,50)" rx="2" ry="2" />
<text  x="883.69" y="495.5" ></text>
</g>
<g >
<title>BN_num_bits (213 samples, 0.20%)</title><rect x="72.3" y="517" width="2.3" height="15.0" fill="rgb(208,228,25)" rx="2" ry="2" />
<text  x="75.30" y="527.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt; &gt; (17 samples, 0.02%)</title><rect x="657.7" y="405" width="0.2" height="15.0" fill="rgb(254,45,26)" rx="2" ry="2" />
<text  x="660.75" y="415.5" ></text>
</g>
<g >
<title>bannerd::store::ActiveCampaignIndex::setPadFilters (84 samples, 0.08%)</title><rect x="430.2" y="421" width="1.0" height="15.0" fill="rgb(236,146,11)" rx="2" ry="2" />
<text  x="433.23" y="431.5" ></text>
</g>
<g >
<title>ctx_sched_in (10 samples, 0.01%)</title><rect x="853.1" y="293" width="0.1" height="15.0" fill="rgb(225,187,46)" rx="2" ry="2" />
<text  x="856.07" y="303.5" ></text>
</g>
<g >
<title>clientserver::unknown_socket::~unknown_socket (18 samples, 0.02%)</title><rect x="630.3" y="517" width="0.1" height="15.0" fill="rgb(217,151,4)" rx="2" ry="2" />
<text  x="633.25" y="527.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (13 samples, 0.01%)</title><rect x="931.1" y="309" width="0.2" height="15.0" fill="rgb(245,174,0)" rx="2" ry="2" />
<text  x="934.11" y="319.5" ></text>
</g>
<g >
<title>__strspn_sse42 (19 samples, 0.02%)</title><rect x="698.5" y="501" width="0.3" height="15.0" fill="rgb(248,152,49)" rx="2" ry="2" />
<text  x="701.54" y="511.5" ></text>
</g>
<g >
<title>operator (34 samples, 0.03%)</title><rect x="382.0" y="453" width="0.4" height="15.0" fill="rgb(210,165,16)" rx="2" ry="2" />
<text  x="385.01" y="463.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt; &gt; (47 samples, 0.04%)</title><rect x="697.0" y="437" width="0.6" height="15.0" fill="rgb(224,135,50)" rx="2" ry="2" />
<text  x="700.04" y="447.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::operator (17 samples, 0.02%)</title><rect x="945.3" y="501" width="0.1" height="15.0" fill="rgb(239,77,9)" rx="2" ry="2" />
<text  x="948.26" y="511.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (387 samples, 0.36%)</title><rect x="844.9" y="373" width="4.3" height="15.0" fill="rgb(252,229,19)" rx="2" ry="2" />
<text  x="847.92" y="383.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (14 samples, 0.01%)</title><rect x="992.8" y="213" width="0.2" height="15.0" fill="rgb(225,58,28)" rx="2" ry="2" />
<text  x="995.83" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; &gt;::_M_erase (11 samples, 0.01%)</title><rect x="672.8" y="501" width="0.1" height="15.0" fill="rgb(242,12,39)" rx="2" ry="2" />
<text  x="675.79" y="511.5" ></text>
</g>
<g >
<title>operator (134 samples, 0.12%)</title><rect x="405.5" y="501" width="1.5" height="15.0" fill="rgb(211,15,19)" rx="2" ry="2" />
<text  x="408.50" y="511.5" ></text>
</g>
<g >
<title>[libpthread-2.17.so] (10 samples, 0.01%)</title><rect x="134.0" y="485" width="0.1" height="15.0" fill="rgb(207,154,46)" rx="2" ry="2" />
<text  x="136.96" y="495.5" ></text>
</g>
<g >
<title>trg::protobuf::rb2::TargetMsg::TargetMsg (36 samples, 0.03%)</title><rect x="1163.3" y="517" width="0.4" height="15.0" fill="rgb(241,26,5)" rx="2" ry="2" />
<text  x="1166.30" y="527.5" ></text>
</g>
<g >
<title>__list_del_entry (10 samples, 0.01%)</title><rect x="296.6" y="405" width="0.1" height="15.0" fill="rgb(236,190,13)" rx="2" ry="2" />
<text  x="299.61" y="415.5" ></text>
</g>
<g >
<title>call_softirq (10 samples, 0.01%)</title><rect x="381.0" y="405" width="0.1" height="15.0" fill="rgb(216,0,41)" rx="2" ry="2" />
<text  x="384.02" y="415.5" ></text>
</g>
<g >
<title>required_field_get_packed_size (11 samples, 0.01%)</title><rect x="857.2" y="517" width="0.1" height="15.0" fill="rgb(234,33,42)" rx="2" ry="2" />
<text  x="860.19" y="527.5" ></text>
</g>
<g >
<title>__GI_epoll_ctl (24 samples, 0.02%)</title><rect x="1167.9" y="501" width="0.3" height="15.0" fill="rgb(215,126,10)" rx="2" ry="2" />
<text  x="1170.95" y="511.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (34 samples, 0.03%)</title><rect x="930.2" y="421" width="0.4" height="15.0" fill="rgb(251,70,39)" rx="2" ry="2" />
<text  x="933.22" y="431.5" ></text>
</g>
<g >
<title>ttwu_do_activate (40 samples, 0.04%)</title><rect x="181.5" y="405" width="0.4" height="15.0" fill="rgb(253,46,13)" rx="2" ry="2" />
<text  x="184.48" y="415.5" ></text>
</g>
<g >
<title>ip_finish_output (21 samples, 0.02%)</title><rect x="1164.4" y="277" width="0.2" height="15.0" fill="rgb(242,56,24)" rx="2" ry="2" />
<text  x="1167.39" y="287.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::getWide (27 samples, 0.03%)</title><rect x="813.0" y="485" width="0.3" height="15.0" fill="rgb(233,77,51)" rx="2" ry="2" />
<text  x="815.97" y="495.5" ></text>
</g>
<g >
<title>huffman_pack (8,725 samples, 8.10%)</title><rect x="710.8" y="517" width="95.6" height="15.0" fill="rgb(254,32,22)" rx="2" ry="2" />
<text  x="713.79" y="527.5" >huffman_pack</text>
</g>
<g >
<title>__perf_event_task_sched_in (66 samples, 0.06%)</title><rect x="128.7" y="389" width="0.7" height="15.0" fill="rgb(246,96,18)" rx="2" ry="2" />
<text  x="131.72" y="399.5" ></text>
</g>
<g >
<title>BN_num_bits_word (114 samples, 0.11%)</title><rect x="73.3" y="501" width="1.3" height="15.0" fill="rgb(249,51,9)" rx="2" ry="2" />
<text  x="76.33" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, std::string&gt;, std::_Select1st&lt;std::pair&lt;std::string const, std::string&gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::_M_lower_bound (146 samples, 0.14%)</title><rect x="945.4" y="469" width="1.6" height="15.0" fill="rgb(241,165,20)" rx="2" ry="2" />
<text  x="948.45" y="479.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (38 samples, 0.04%)</title><rect x="308.2" y="373" width="0.5" height="15.0" fill="rgb(244,191,7)" rx="2" ry="2" />
<text  x="311.24" y="383.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (18 samples, 0.02%)</title><rect x="880.7" y="501" width="0.2" height="15.0" fill="rgb(252,205,29)" rx="2" ry="2" />
<text  x="883.66" y="511.5" ></text>
</g>
<g >
<title>sysret_check (20 samples, 0.02%)</title><rect x="907.2" y="421" width="0.2" height="15.0" fill="rgb(243,10,22)" rx="2" ry="2" />
<text  x="910.16" y="431.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (10 samples, 0.01%)</title><rect x="930.9" y="389" width="0.2" height="15.0" fill="rgb(248,11,32)" rx="2" ry="2" />
<text  x="933.94" y="399.5" ></text>
</g>
<g >
<title>sys_futex (224 samples, 0.21%)</title><rect x="145.0" y="469" width="2.4" height="15.0" fill="rgb(251,143,19)" rx="2" ry="2" />
<text  x="147.96" y="479.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (13 samples, 0.01%)</title><rect x="689.5" y="389" width="0.1" height="15.0" fill="rgb(236,184,11)" rx="2" ry="2" />
<text  x="692.46" y="399.5" ></text>
</g>
<g >
<title>BN_set_word (125 samples, 0.12%)</title><rect x="79.5" y="517" width="1.4" height="15.0" fill="rgb(214,189,48)" rx="2" ry="2" />
<text  x="82.51" y="527.5" ></text>
</g>
<g >
<title>wake_up_q (124 samples, 0.12%)</title><rect x="896.5" y="405" width="1.3" height="15.0" fill="rgb(217,214,0)" rx="2" ry="2" />
<text  x="899.48" y="415.5" ></text>
</g>
<g >
<title>__strchr_sse42 (19 samples, 0.02%)</title><rect x="699.7" y="501" width="0.2" height="15.0" fill="rgb(226,213,43)" rx="2" ry="2" />
<text  x="702.69" y="511.5" ></text>
</g>
<g >
<title>rb::atomic_add&lt;unsigned long&gt; (66 samples, 0.06%)</title><rect x="324.6" y="437" width="0.7" height="15.0" fill="rgb(222,171,4)" rx="2" ry="2" />
<text  x="327.62" y="447.5" ></text>
</g>
<g >
<title>inet_csk_accept (29 samples, 0.03%)</title><rect x="194.9" y="421" width="0.3" height="15.0" fill="rgb(251,11,15)" rx="2" ry="2" />
<text  x="197.86" y="431.5" ></text>
</g>
<g >
<title>BN_lshift (107 samples, 0.10%)</title><rect x="60.0" y="517" width="1.2" height="15.0" fill="rgb(208,108,44)" rx="2" ry="2" />
<text  x="63.02" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::WriteTagToArray (12 samples, 0.01%)</title><rect x="1155.3" y="485" width="0.1" height="15.0" fill="rgb(229,142,42)" rx="2" ry="2" />
<text  x="1158.26" y="495.5" ></text>
</g>
<g >
<title>sysret_check (54 samples, 0.05%)</title><rect x="288.3" y="501" width="0.6" height="15.0" fill="rgb(237,150,1)" rx="2" ry="2" />
<text  x="291.30" y="511.5" ></text>
</g>
<g >
<title>inline_mysql_rwlock_wrlock (119 samples, 0.11%)</title><rect x="632.0" y="469" width="1.3" height="15.0" fill="rgb(241,112,20)" rx="2" ry="2" />
<text  x="634.98" y="479.5" ></text>
</g>
<g >
<title>target::operator&amp; (43 samples, 0.04%)</title><rect x="831.4" y="501" width="0.5" height="15.0" fill="rgb(206,4,46)" rx="2" ry="2" />
<text  x="834.40" y="511.5" ></text>
</g>
<g >
<title>tc_free (1,192 samples, 1.11%)</title><rect x="1112.7" y="517" width="13.1" height="15.0" fill="rgb(209,52,31)" rx="2" ry="2" />
<text  x="1115.72" y="527.5" ></text>
</g>
<g >
<title>std::equal_to&lt;std::string&gt;::operator (11 samples, 0.01%)</title><rect x="920.9" y="469" width="0.1" height="15.0" fill="rgb(227,11,20)" rx="2" ry="2" />
<text  x="923.89" y="479.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (120 samples, 0.11%)</title><rect x="927.6" y="389" width="1.3" height="15.0" fill="rgb(245,178,37)" rx="2" ry="2" />
<text  x="930.58" y="399.5" ></text>
</g>
<g >
<title>operator (907 samples, 0.84%)</title><rect x="382.4" y="469" width="9.9" height="15.0" fill="rgb(211,105,46)" rx="2" ry="2" />
<text  x="385.39" y="479.5" ></text>
</g>
<g >
<title>do_futex (149 samples, 0.14%)</title><rect x="898.7" y="437" width="1.6" height="15.0" fill="rgb(240,145,42)" rx="2" ry="2" />
<text  x="901.72" y="447.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (42 samples, 0.04%)</title><rect x="293.5" y="341" width="0.5" height="15.0" fill="rgb(209,22,38)" rx="2" ry="2" />
<text  x="296.51" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, std::string&gt;, std::_Select1st&lt;std::pair&lt;std::string const, std::string&gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::_M_put_node (11 samples, 0.01%)</title><rect x="928.9" y="485" width="0.1" height="15.0" fill="rgb(236,122,40)" rx="2" ry="2" />
<text  x="931.90" y="495.5" ></text>
</g>
<g >
<title>std::string::assign (11 samples, 0.01%)</title><rect x="702.7" y="485" width="0.2" height="15.0" fill="rgb(217,180,37)" rx="2" ry="2" />
<text  x="705.74" y="495.5" ></text>
</g>
<g >
<title>iomap_file_buffered_write (23 samples, 0.02%)</title><rect x="129.6" y="405" width="0.2" height="15.0" fill="rgb(233,179,47)" rx="2" ry="2" />
<text  x="132.56" y="415.5" ></text>
</g>
<g >
<title>futex_wait (213 samples, 0.20%)</title><rect x="145.1" y="437" width="2.3" height="15.0" fill="rgb(232,20,31)" rx="2" ry="2" />
<text  x="148.06" y="447.5" ></text>
</g>
<g >
<title>tcp_send_mss (11 samples, 0.01%)</title><rect x="285.1" y="405" width="0.1" height="15.0" fill="rgb(249,220,11)" rx="2" ry="2" />
<text  x="288.08" y="415.5" ></text>
</g>
<g >
<title>deactivate_task (13 samples, 0.01%)</title><rect x="145.6" y="373" width="0.2" height="15.0" fill="rgb(233,131,35)" rx="2" ry="2" />
<text  x="148.62" y="383.5" ></text>
</g>
<g >
<title>parse_list_fast&lt;(anonymous namespace)::parseVars (41 samples, 0.04%)</title><rect x="815.4" y="501" width="0.4" height="15.0" fill="rgb(205,85,43)" rx="2" ry="2" />
<text  x="818.37" y="511.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;unsigned char const&amp;, std::string const&amp;, unsigned char const&amp;, std::string const&amp;&gt; (34 samples, 0.03%)</title><rect x="382.0" y="421" width="0.4" height="15.0" fill="rgb(214,190,43)" rx="2" ry="2" />
<text  x="385.01" y="431.5" ></text>
</g>
<g >
<title>[libpthread-2.17.so] (73 samples, 0.07%)</title><rect x="277.3" y="501" width="0.8" height="15.0" fill="rgb(209,117,43)" rx="2" ry="2" />
<text  x="280.33" y="511.5" ></text>
</g>
<g >
<title>tc_new (607 samples, 0.56%)</title><rect x="1132.9" y="517" width="6.6" height="15.0" fill="rgb(253,222,17)" rx="2" ry="2" />
<text  x="1135.87" y="527.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_wrlock (151 samples, 0.14%)</title><rect x="136.2" y="501" width="1.7" height="15.0" fill="rgb(239,143,54)" rx="2" ry="2" />
<text  x="139.22" y="511.5" ></text>
</g>
<g >
<title>ip_output (21 samples, 0.02%)</title><rect x="1164.4" y="293" width="0.2" height="15.0" fill="rgb(215,155,50)" rx="2" ry="2" />
<text  x="1167.39" y="303.5" ></text>
</g>
<g >
<title>__lower_bound&lt;const (anonymous namespace)::ProcFunction*, (anonymous namespace)::ProcFunction, __gnu_cxx::__ops::_Iter_comp_val&lt;(anonymous namespace)::findFunction (513 samples, 0.48%)</title><rect x="691.4" y="453" width="5.6" height="15.0" fill="rgb(222,185,38)" rx="2" ry="2" />
<text  x="694.36" y="463.5" ></text>
</g>
<g >
<title>bannerd::UrlLimitsIndex::Key::~Key (14 samples, 0.01%)</title><rect x="329.1" y="501" width="0.1" height="15.0" fill="rgb(205,142,9)" rx="2" ry="2" />
<text  x="332.09" y="511.5" ></text>
</g>
<g >
<title>vfs_write (15 samples, 0.01%)</title><rect x="133.8" y="453" width="0.2" height="15.0" fill="rgb(232,155,22)" rx="2" ry="2" />
<text  x="136.80" y="463.5" ></text>
</g>
<g >
<title>tcmalloc::SizeMap::ClassIndexMaybe (62 samples, 0.06%)</title><rect x="1127.0" y="469" width="0.7" height="15.0" fill="rgb(210,108,5)" rx="2" ry="2" />
<text  x="1130.02" y="479.5" ></text>
</g>
<g >
<title>perf_pmu_sched_task (80 samples, 0.07%)</title><rect x="304.4" y="357" width="0.9" height="15.0" fill="rgb(206,124,54)" rx="2" ry="2" />
<text  x="307.45" y="367.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (27 samples, 0.03%)</title><rect x="681.7" y="405" width="0.2" height="15.0" fill="rgb(218,61,3)" rx="2" ry="2" />
<text  x="684.65" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; &gt;::_M_lower_bound (79 samples, 0.07%)</title><rect x="924.2" y="501" width="0.9" height="15.0" fill="rgb(216,178,51)" rx="2" ry="2" />
<text  x="927.22" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (226 samples, 0.21%)</title><rect x="932.4" y="517" width="2.5" height="15.0" fill="rgb(228,155,9)" rx="2" ry="2" />
<text  x="935.40" y="527.5" ></text>
</g>
<g >
<title>BN_init (36 samples, 0.03%)</title><rect x="56.8" y="517" width="0.4" height="15.0" fill="rgb(241,96,1)" rx="2" ry="2" />
<text  x="59.81" y="527.5" ></text>
</g>
<g >
<title>__strncmp_sse42 (35 samples, 0.03%)</title><rect x="309.3" y="517" width="0.4" height="15.0" fill="rgb(244,94,16)" rx="2" ry="2" />
<text  x="312.32" y="527.5" ></text>
</g>
<g >
<title>tcmalloc::ThreadCache::Allocate (12 samples, 0.01%)</title><rect x="1139.8" y="485" width="0.1" height="15.0" fill="rgb(207,197,24)" rx="2" ry="2" />
<text  x="1142.76" y="495.5" ></text>
</g>
<g >
<title>tcmalloc::ThreadCache::GetThreadHeap (119 samples, 0.11%)</title><rect x="1122.1" y="437" width="1.4" height="15.0" fill="rgb(233,144,25)" rx="2" ry="2" />
<text  x="1125.15" y="447.5" ></text>
</g>
<g >
<title>bannerd::store::ActiveCampaignIndex::setPadFilters (80 samples, 0.07%)</title><rect x="427.7" y="485" width="0.9" height="15.0" fill="rgb(214,123,16)" rx="2" ry="2" />
<text  x="430.73" y="495.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::operator (148 samples, 0.14%)</title><rect x="686.7" y="421" width="1.6" height="15.0" fill="rgb(251,74,29)" rx="2" ry="2" />
<text  x="689.72" y="431.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock (21 samples, 0.02%)</title><rect x="321.7" y="437" width="0.2" height="15.0" fill="rgb(219,8,19)" rx="2" ry="2" />
<text  x="324.71" y="447.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (17 samples, 0.02%)</title><rect x="697.3" y="405" width="0.2" height="15.0" fill="rgb(241,18,30)" rx="2" ry="2" />
<text  x="700.35" y="415.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (26 samples, 0.02%)</title><rect x="685.1" y="357" width="0.3" height="15.0" fill="rgb(232,51,16)" rx="2" ry="2" />
<text  x="688.10" y="367.5" ></text>
</g>
<g >
<title>do_futex (512 samples, 0.48%)</title><rect x="185.1" y="469" width="5.6" height="15.0" fill="rgb(247,168,20)" rx="2" ry="2" />
<text  x="188.13" y="479.5" ></text>
</g>
<g >
<title>__pthread_self (17 samples, 0.02%)</title><rect x="307.6" y="517" width="0.1" height="15.0" fill="rgb(251,212,52)" rx="2" ry="2" />
<text  x="310.56" y="527.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (11 samples, 0.01%)</title><rect x="169.1" y="437" width="0.1" height="15.0" fill="rgb(205,180,19)" rx="2" ry="2" />
<text  x="172.08" y="447.5" ></text>
</g>
<g >
<title>__strlen_sse2_pminub (1,204 samples, 1.12%)</title><rect x="781.5" y="501" width="13.2" height="15.0" fill="rgb(217,190,44)" rx="2" ry="2" />
<text  x="784.52" y="511.5" ></text>
</g>
<g >
<title>perf_pmu_enable (18 samples, 0.02%)</title><rect x="853.2" y="309" width="0.2" height="15.0" fill="rgb(234,118,7)" rx="2" ry="2" />
<text  x="856.18" y="319.5" ></text>
</g>
<g >
<title>__exchange_and_add (12 samples, 0.01%)</title><rect x="355.9" y="405" width="0.2" height="15.0" fill="rgb(226,186,21)" rx="2" ry="2" />
<text  x="358.94" y="415.5" ></text>
</g>
<g >
<title>tcmalloc::PageHeap::GetDescriptor (14 samples, 0.01%)</title><rect x="642.4" y="421" width="0.2" height="15.0" fill="rgb(222,195,42)" rx="2" ry="2" />
<text  x="645.41" y="431.5" ></text>
</g>
<g >
<title>tcmalloc::ThreadCache::FreeList::Push (159 samples, 0.15%)</title><rect x="1120.4" y="437" width="1.7" height="15.0" fill="rgb(253,77,37)" rx="2" ry="2" />
<text  x="1123.41" y="447.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (57 samples, 0.05%)</title><rect x="972.0" y="469" width="0.6" height="15.0" fill="rgb(206,15,36)" rx="2" ry="2" />
<text  x="974.96" y="479.5" ></text>
</g>
<g >
<title>bannerd::BannerEx::contents (14 samples, 0.01%)</title><rect x="411.6" y="501" width="0.2" height="15.0" fill="rgb(216,176,25)" rx="2" ry="2" />
<text  x="414.61" y="511.5" ></text>
</g>
<g >
<title>rb::urldec (11 samples, 0.01%)</title><rect x="854.0" y="517" width="0.1" height="15.0" fill="rgb(254,100,38)" rx="2" ry="2" />
<text  x="856.97" y="527.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (21 samples, 0.02%)</title><rect x="643.8" y="501" width="0.2" height="15.0" fill="rgb(243,204,5)" rx="2" ry="2" />
<text  x="646.78" y="511.5" ></text>
</g>
<g >
<title>__memset (33 samples, 0.03%)</title><rect x="140.8" y="293" width="0.4" height="15.0" fill="rgb(216,4,32)" rx="2" ry="2" />
<text  x="143.80" y="303.5" ></text>
</g>
<g >
<title>PackedCache&lt;35&gt;::TryGet (127 samples, 0.12%)</title><rect x="1123.6" y="437" width="1.4" height="15.0" fill="rgb(223,182,43)" rx="2" ry="2" />
<text  x="1126.60" y="447.5" ></text>
</g>
<g >
<title>schedule (41 samples, 0.04%)</title><rect x="308.2" y="421" width="0.5" height="15.0" fill="rgb(234,41,10)" rx="2" ry="2" />
<text  x="311.22" y="431.5" ></text>
</g>
<g >
<title>system_call_fastpath (17 samples, 0.02%)</title><rect x="988.1" y="485" width="0.2" height="15.0" fill="rgb(244,48,14)" rx="2" ry="2" />
<text  x="991.12" y="495.5" ></text>
</g>
<g >
<title>bannerd::commonFunc (378 samples, 0.35%)</title><rect x="329.5" y="517" width="4.1" height="15.0" fill="rgb(218,202,15)" rx="2" ry="2" />
<text  x="332.47" y="527.5" ></text>
</g>
<g >
<title>system_call_fastpath (31 samples, 0.03%)</title><rect x="307.2" y="501" width="0.3" height="15.0" fill="rgb(233,103,25)" rx="2" ry="2" />
<text  x="310.21" y="511.5" ></text>
</g>
<g >
<title>TCMalloc_PageMap2&lt;35&gt;::get (24 samples, 0.02%)</title><rect x="1113.6" y="437" width="0.3" height="15.0" fill="rgb(234,67,8)" rx="2" ry="2" />
<text  x="1116.59" y="447.5" ></text>
</g>
<g >
<title>bn_c2i (23 samples, 0.02%)</title><rect x="443.9" y="517" width="0.3" height="15.0" fill="rgb(218,176,16)" rx="2" ry="2" />
<text  x="446.91" y="527.5" ></text>
</g>
<g >
<title>std::string::_M_rep (90 samples, 0.08%)</title><rect x="849.7" y="357" width="1.0" height="15.0" fill="rgb(227,144,12)" rx="2" ry="2" />
<text  x="852.72" y="367.5" ></text>
</g>
<g >
<title>bannerd::Store::effectiveTestId (15 samples, 0.01%)</title><rect x="325.5" y="501" width="0.1" height="15.0" fill="rgb(218,225,35)" rx="2" ry="2" />
<text  x="328.46" y="511.5" ></text>
</g>
<g >
<title>__strnlen_sse2 (19 samples, 0.02%)</title><rect x="191.4" y="501" width="0.2" height="15.0" fill="rgb(232,88,52)" rx="2" ry="2" />
<text  x="194.44" y="511.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::set (226 samples, 0.21%)</title><rect x="436.7" y="469" width="2.5" height="15.0" fill="rgb(249,133,44)" rx="2" ry="2" />
<text  x="439.72" y="479.5" ></text>
</g>
<g >
<title>std::__distance&lt;__gnu_cxx::__normal_iterator&lt;bannerd::UrlObjectLimitEx const* const*, std::vector&lt;bannerd::UrlObjectLimitEx const*, std::allocator&lt;bannerd::UrlObjectLimitEx const*&gt; &gt; &gt; &gt; (10 samples, 0.01%)</title><rect x="329.3" y="453" width="0.1" height="15.0" fill="rgb(248,21,15)" rx="2" ry="2" />
<text  x="332.27" y="463.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (16 samples, 0.01%)</title><rect x="988.1" y="421" width="0.2" height="15.0" fill="rgb(229,18,21)" rx="2" ry="2" />
<text  x="991.13" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::string const, std::string&gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;std::string const&amp;&gt;, std::tuple&lt;&gt; &gt; (19 samples, 0.02%)</title><rect x="157.5" y="453" width="0.2" height="15.0" fill="rgb(222,106,13)" rx="2" ry="2" />
<text  x="160.52" y="463.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (205 samples, 0.19%)</title><rect x="145.1" y="421" width="2.2" height="15.0" fill="rgb(216,106,45)" rx="2" ry="2" />
<text  x="148.09" y="431.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (82 samples, 0.08%)</title><rect x="320.3" y="261" width="0.9" height="15.0" fill="rgb(218,192,9)" rx="2" ry="2" />
<text  x="323.34" y="271.5" ></text>
</g>
<g >
<title>bannerd::engine::MultiRequest::getSscUserIdByPad (18 samples, 0.02%)</title><rect x="407.1" y="517" width="0.2" height="15.0" fill="rgb(248,224,3)" rx="2" ry="2" />
<text  x="410.06" y="527.5" ></text>
</g>
<g >
<title>sysret_check (20 samples, 0.02%)</title><rect x="895.3" y="469" width="0.2" height="15.0" fill="rgb(236,107,41)" rx="2" ry="2" />
<text  x="898.27" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_default_append (27 samples, 0.03%)</title><rect x="979.1" y="517" width="0.3" height="15.0" fill="rgb(247,149,29)" rx="2" ry="2" />
<text  x="982.13" y="527.5" ></text>
</g>
<g >
<title>__strchr_sse42 (11 samples, 0.01%)</title><rect x="655.7" y="485" width="0.1" height="15.0" fill="rgb(226,196,42)" rx="2" ry="2" />
<text  x="658.66" y="495.5" ></text>
</g>
<g >
<title>BN_is_bit_set (257 samples, 0.24%)</title><rect x="57.2" y="517" width="2.8" height="15.0" fill="rgb(241,191,11)" rx="2" ry="2" />
<text  x="60.20" y="527.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::operator (22 samples, 0.02%)</title><rect x="657.7" y="437" width="0.3" height="15.0" fill="rgb(220,119,24)" rx="2" ry="2" />
<text  x="660.75" y="447.5" ></text>
</g>
<g >
<title>rapidjson::GenericValue&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::CrtAllocator&gt;::~GenericValue (10 samples, 0.01%)</title><rect x="832.9" y="517" width="0.1" height="15.0" fill="rgb(249,184,26)" rx="2" ry="2" />
<text  x="835.86" y="527.5" ></text>
</g>
<g >
<title>ip_local_deliver (15 samples, 0.01%)</title><rect x="284.5" y="101" width="0.2" height="15.0" fill="rgb(238,166,10)" rx="2" ry="2" />
<text  x="287.50" y="111.5" ></text>
</g>
<g >
<title>std::mutex::lock (13 samples, 0.01%)</title><rect x="322.0" y="453" width="0.1" height="15.0" fill="rgb(212,73,49)" rx="2" ry="2" />
<text  x="324.96" y="463.5" ></text>
</g>
<g >
<title>nmi (65 samples, 0.06%)</title><rect x="839.0" y="501" width="0.7" height="15.0" fill="rgb(233,189,36)" rx="2" ry="2" />
<text  x="841.96" y="511.5" ></text>
</g>
<g >
<title>system_call_fastpath (19 samples, 0.02%)</title><rect x="113.4" y="485" width="0.2" height="15.0" fill="rgb(213,84,2)" rx="2" ry="2" />
<text  x="116.43" y="495.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (12 samples, 0.01%)</title><rect x="977.5" y="373" width="0.1" height="15.0" fill="rgb(238,159,25)" rx="2" ry="2" />
<text  x="980.46" y="383.5" ></text>
</g>
<g >
<title>nmi (342 samples, 0.32%)</title><rect x="802.5" y="501" width="3.7" height="15.0" fill="rgb(244,10,0)" rx="2" ry="2" />
<text  x="805.48" y="511.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;bannerd::Tabular const,  (11 samples, 0.01%)</title><rect x="355.7" y="469" width="0.1" height="15.0" fill="rgb(245,41,24)" rx="2" ry="2" />
<text  x="358.68" y="479.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (14 samples, 0.01%)</title><rect x="1156.6" y="469" width="0.2" height="15.0" fill="rgb(229,114,54)" rx="2" ry="2" />
<text  x="1159.63" y="479.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (78 samples, 0.07%)</title><rect x="840.7" y="437" width="0.9" height="15.0" fill="rgb(251,96,50)" rx="2" ry="2" />
<text  x="843.70" y="447.5" ></text>
</g>
<g >
<title>do_malloc_or_cpp_alloc (17 samples, 0.02%)</title><rect x="280.7" y="501" width="0.2" height="15.0" fill="rgb(207,190,40)" rx="2" ry="2" />
<text  x="283.74" y="511.5" ></text>
</g>
<g >
<title>BN_mod_mul_montgomery (347 samples, 0.32%)</title><rect x="68.2" y="517" width="3.8" height="15.0" fill="rgb(244,26,32)" rx="2" ry="2" />
<text  x="71.18" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long long, target::dynamic_bitset::AlignedAllocator&lt;unsigned long long&gt; &gt;::_M_fill_insert (68 samples, 0.06%)</title><rect x="980.0" y="517" width="0.7" height="15.0" fill="rgb(218,47,14)" rx="2" ry="2" />
<text  x="983.00" y="527.5" ></text>
</g>
<g >
<title>perf_pmu_enable (18 samples, 0.02%)</title><rect x="802.3" y="373" width="0.2" height="15.0" fill="rgb(247,175,12)" rx="2" ry="2" />
<text  x="805.26" y="383.5" ></text>
</g>
<g >
<title>sys_setsockopt (11 samples, 0.01%)</title><rect x="307.9" y="485" width="0.2" height="15.0" fill="rgb(209,50,14)" rx="2" ry="2" />
<text  x="310.94" y="495.5" ></text>
</g>
<g >
<title>sys_futex (36 samples, 0.03%)</title><rect x="143.3" y="469" width="0.4" height="15.0" fill="rgb(224,13,17)" rx="2" ry="2" />
<text  x="146.27" y="479.5" ></text>
</g>
<g >
<title>_raw_qspin_lock (94 samples, 0.09%)</title><rect x="180.1" y="405" width="1.0" height="15.0" fill="rgb(228,188,3)" rx="2" ry="2" />
<text  x="183.07" y="415.5" ></text>
</g>
<g >
<title>sys_accept4 (60 samples, 0.06%)</title><rect x="194.8" y="469" width="0.6" height="15.0" fill="rgb(208,50,15)" rx="2" ry="2" />
<text  x="197.78" y="479.5" ></text>
</g>
<g >
<title>_M_bucket_index (10 samples, 0.01%)</title><rect x="426.3" y="437" width="0.2" height="15.0" fill="rgb(242,164,1)" rx="2" ry="2" />
<text  x="429.34" y="447.5" ></text>
</g>
<g >
<title>rb::group_params_to_url (91 samples, 0.08%)</title><rect x="678.3" y="501" width="1.0" height="15.0" fill="rgb(235,62,15)" rx="2" ry="2" />
<text  x="681.32" y="511.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (13 samples, 0.01%)</title><rect x="856.8" y="421" width="0.1" height="15.0" fill="rgb(211,21,19)" rx="2" ry="2" />
<text  x="859.76" y="431.5" ></text>
</g>
<g >
<title>__strlen_sse2_pminub (125 samples, 0.12%)</title><rect x="816.2" y="501" width="1.4" height="15.0" fill="rgb(235,23,2)" rx="2" ry="2" />
<text  x="819.23" y="511.5" ></text>
</g>
<g >
<title>sock_sendmsg (24 samples, 0.02%)</title><rect x="142.4" y="437" width="0.3" height="15.0" fill="rgb(207,13,35)" rx="2" ry="2" />
<text  x="145.44" y="447.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (15 samples, 0.01%)</title><rect x="283.4" y="405" width="0.1" height="15.0" fill="rgb(238,78,24)" rx="2" ry="2" />
<text  x="286.35" y="415.5" ></text>
</g>
<g >
<title>tcmalloc::SLL_Next (25 samples, 0.02%)</title><rect x="944.0" y="325" width="0.3" height="15.0" fill="rgb(231,184,35)" rx="2" ry="2" />
<text  x="947.01" y="335.5" ></text>
</g>
<g >
<title>try_to_wake_up (58 samples, 0.05%)</title><rect x="135.6" y="405" width="0.6" height="15.0" fill="rgb(211,187,14)" rx="2" ry="2" />
<text  x="138.55" y="415.5" ></text>
</g>
<g >
<title>target::bitmap::Index&lt;unsigned int, unsigned int, std::unordered_map&lt;unsigned int, unsigned int, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, unsigned int&gt; &gt; &gt; &gt;::build (9,346 samples, 8.68%)</title><rect x="991.7" y="501" width="102.4" height="15.0" fill="rgb(209,112,11)" rx="2" ry="2" />
<text  x="994.73" y="511.5" >target::bitm..</text>
</g>
<g >
<title>xfs_vn_update_time (30 samples, 0.03%)</title><rect x="277.7" y="341" width="0.4" height="15.0" fill="rgb(205,228,47)" rx="2" ry="2" />
<text  x="280.73" y="351.5" ></text>
</g>
<g >
<title>schedule (13 samples, 0.01%)</title><rect x="834.8" y="325" width="0.2" height="15.0" fill="rgb(253,27,39)" rx="2" ry="2" />
<text  x="837.82" y="335.5" ></text>
</g>
<g >
<title>std::map&lt;std::string, unsigned int, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, unsigned int&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (129 samples, 0.12%)</title><rect x="700.1" y="501" width="1.4" height="15.0" fill="rgb(215,159,20)" rx="2" ry="2" />
<text  x="703.12" y="511.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::dynamic_bitset (24 samples, 0.02%)</title><rect x="831.4" y="485" width="0.3" height="15.0" fill="rgb(227,143,49)" rx="2" ry="2" />
<text  x="834.40" y="495.5" ></text>
</g>
<g >
<title>try_to_wake_up (12 samples, 0.01%)</title><rect x="907.5" y="341" width="0.2" height="15.0" fill="rgb(214,166,33)" rx="2" ry="2" />
<text  x="910.52" y="351.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::operator (100 samples, 0.09%)</title><rect x="700.3" y="453" width="1.1" height="15.0" fill="rgb(248,45,30)" rx="2" ry="2" />
<text  x="703.35" y="463.5" ></text>
</g>
<g >
<title>tcmalloc::CentralFreeList::InsertRange (121 samples, 0.11%)</title><rect x="1142.1" y="517" width="1.3" height="15.0" fill="rgb(213,118,34)" rx="2" ry="2" />
<text  x="1145.12" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, std::string&gt;, std::_Select1st&lt;std::pair&lt;std::string const, std::string&gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::_M_lower_bound (169 samples, 0.16%)</title><rect x="682.5" y="437" width="1.9" height="15.0" fill="rgb(245,35,20)" rx="2" ry="2" />
<text  x="685.50" y="447.5" ></text>
</g>
<g >
<title>bannerd::TargetingCollection::Range&lt;bannerd::TargetingStringSetEx&gt;::Range (124 samples, 0.12%)</title><rect x="149.8" y="501" width="1.3" height="15.0" fill="rgb(218,154,28)" rx="2" ry="2" />
<text  x="152.77" y="511.5" ></text>
</g>
<g >
<title>bannerd::store::CampaignBannersPositions::range (19 samples, 0.02%)</title><rect x="426.8" y="469" width="0.2" height="15.0" fill="rgb(254,103,3)" rx="2" ry="2" />
<text  x="429.80" y="479.5" ></text>
</g>
<g >
<title>std::string::_S_construct&lt;char const*&gt; (195 samples, 0.18%)</title><rect x="950.9" y="517" width="2.1" height="15.0" fill="rgb(205,91,45)" rx="2" ry="2" />
<text  x="953.86" y="527.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (49 samples, 0.05%)</title><rect x="128.9" y="341" width="0.5" height="15.0" fill="rgb(240,189,35)" rx="2" ry="2" />
<text  x="131.87" y="351.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, target::dynamic_bitset const*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, target::dynamic_bitset const*&gt; &gt; &gt;::operator[] (15 samples, 0.01%)</title><rect x="439.4" y="501" width="0.1" height="15.0" fill="rgb(231,25,35)" rx="2" ry="2" />
<text  x="442.38" y="511.5" ></text>
</g>
<g >
<title>native_rw_unlock (549 samples, 0.51%)</title><rect x="901.7" y="453" width="6.0" height="15.0" fill="rgb(247,47,38)" rx="2" ry="2" />
<text  x="904.72" y="463.5" ></text>
</g>
<g >
<title>__netif_receive_skb (17 samples, 0.02%)</title><rect x="284.5" y="165" width="0.2" height="15.0" fill="rgb(247,228,15)" rx="2" ry="2" />
<text  x="287.49" y="175.5" ></text>
</g>
<g >
<title>group_sched_in (51 samples, 0.05%)</title><rect x="301.2" y="293" width="0.6" height="15.0" fill="rgb(239,174,15)" rx="2" ry="2" />
<text  x="304.20" y="303.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (10 samples, 0.01%)</title><rect x="322.8" y="373" width="0.1" height="15.0" fill="rgb(213,169,35)" rx="2" ry="2" />
<text  x="325.77" y="383.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::operator-= (267 samples, 0.25%)</title><rect x="1097.5" y="517" width="2.9" height="15.0" fill="rgb(245,30,12)" rx="2" ry="2" />
<text  x="1100.51" y="527.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (12 samples, 0.01%)</title><rect x="489.1" y="437" width="0.2" height="15.0" fill="rgb(222,210,8)" rx="2" ry="2" />
<text  x="492.14" y="447.5" ></text>
</g>
<g >
<title>plist_add (20 samples, 0.02%)</title><rect x="297.4" y="421" width="0.2" height="15.0" fill="rgb(230,85,47)" rx="2" ry="2" />
<text  x="300.41" y="431.5" ></text>
</g>
<g >
<title>operator (469 samples, 0.44%)</title><rect x="662.4" y="405" width="5.2" height="15.0" fill="rgb(214,134,22)" rx="2" ry="2" />
<text  x="665.41" y="415.5" ></text>
</g>
<g >
<title>__libc_malloc (28 samples, 0.03%)</title><rect x="280.2" y="517" width="0.3" height="15.0" fill="rgb(245,190,34)" rx="2" ry="2" />
<text  x="283.17" y="527.5" ></text>
</g>
<g >
<title>std::string::size (47 samples, 0.04%)</title><rect x="406.4" y="453" width="0.6" height="15.0" fill="rgb(210,162,24)" rx="2" ry="2" />
<text  x="409.45" y="463.5" ></text>
</g>
<g >
<title>SHA1_Final (151 samples, 0.14%)</title><rect x="131.9" y="501" width="1.7" height="15.0" fill="rgb(232,100,39)" rx="2" ry="2" />
<text  x="134.95" y="511.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (66 samples, 0.06%)</title><rect x="969.7" y="485" width="0.7" height="15.0" fill="rgb(235,166,13)" rx="2" ry="2" />
<text  x="972.72" y="495.5" ></text>
</g>
<g >
<title>load_balance (21 samples, 0.02%)</title><rect x="147.0" y="357" width="0.2" height="15.0" fill="rgb(234,195,20)" rx="2" ry="2" />
<text  x="150.00" y="367.5" ></text>
</g>
<g >
<title>ret_from_intr (15 samples, 0.01%)</title><rect x="277.1" y="501" width="0.2" height="15.0" fill="rgb(213,115,19)" rx="2" ry="2" />
<text  x="280.14" y="511.5" ></text>
</g>
<g >
<title>BN_POOL_get (134 samples, 0.12%)</title><rect x="23.6" y="501" width="1.5" height="15.0" fill="rgb(251,96,6)" rx="2" ry="2" />
<text  x="26.62" y="511.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (16 samples, 0.01%)</title><rect x="807.0" y="437" width="0.2" height="15.0" fill="rgb(220,13,47)" rx="2" ry="2" />
<text  x="810.00" y="447.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (28 samples, 0.03%)</title><rect x="949.2" y="469" width="0.3" height="15.0" fill="rgb(223,224,6)" rx="2" ry="2" />
<text  x="952.24" y="479.5" ></text>
</g>
<g >
<title>operator (60 samples, 0.06%)</title><rect x="697.0" y="469" width="0.7" height="15.0" fill="rgb(226,210,26)" rx="2" ry="2" />
<text  x="700.04" y="479.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::operator (152 samples, 0.14%)</title><rect x="841.9" y="485" width="1.7" height="15.0" fill="rgb(239,167,6)" rx="2" ry="2" />
<text  x="844.94" y="495.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::_S_cmp&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const&amp;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const&amp;&gt; (12 samples, 0.01%)</title><rect x="701.7" y="453" width="0.2" height="15.0" fill="rgb(242,23,18)" rx="2" ry="2" />
<text  x="704.72" y="463.5" ></text>
</g>
<g >
<title>irq_exit (16 samples, 0.01%)</title><rect x="598.0" y="469" width="0.2" height="15.0" fill="rgb(238,59,48)" rx="2" ry="2" />
<text  x="601.02" y="479.5" ></text>
</g>
<g >
<title>__memcpy_ssse3_back (37 samples, 0.03%)</title><rect x="148.4" y="469" width="0.4" height="15.0" fill="rgb(233,73,48)" rx="2" ry="2" />
<text  x="151.41" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;target::dynamic_bitset, target::dynamic_bitset, std::allocator&lt;target::dynamic_bitset&gt;, std::__detail::_Identity, std::equal_to&lt;target::dynamic_bitset&gt;, std::hash&lt;target::dynamic_bitset&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_insert&lt;target::dynamic_bitset const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;target::dynamic_bitset, true&gt; &gt; &gt; &gt; (205 samples, 0.19%)</title><rect x="439.5" y="469" width="2.3" height="15.0" fill="rgb(209,219,0)" rx="2" ry="2" />
<text  x="442.54" y="479.5" ></text>
</g>
<g >
<title>system_call_after_swapgs (51 samples, 0.05%)</title><rect x="192.8" y="501" width="0.5" height="15.0" fill="rgb(211,202,27)" rx="2" ry="2" />
<text  x="195.76" y="511.5" ></text>
</g>
<g >
<title>std::string::size (17 samples, 0.02%)</title><rect x="382.2" y="325" width="0.2" height="15.0" fill="rgb(226,119,39)" rx="2" ry="2" />
<text  x="385.19" y="335.5" ></text>
</g>
<g >
<title>_M_bucket_index (10 samples, 0.01%)</title><rect x="426.3" y="453" width="0.2" height="15.0" fill="rgb(225,13,27)" rx="2" ry="2" />
<text  x="429.34" y="463.5" ></text>
</g>
<g >
<title>int_new_ex_data (69 samples, 0.06%)</title><rect x="807.4" y="517" width="0.7" height="15.0" fill="rgb(231,7,49)" rx="2" ry="2" />
<text  x="810.35" y="527.5" ></text>
</g>
<g >
<title>perf_pmu_disable (12 samples, 0.01%)</title><rect x="186.6" y="357" width="0.1" height="15.0" fill="rgb(213,198,36)" rx="2" ry="2" />
<text  x="189.58" y="367.5" ></text>
</g>
<g >
<title>memcmp@plt (22 samples, 0.02%)</title><rect x="671.4" y="501" width="0.2" height="15.0" fill="rgb(238,111,43)" rx="2" ry="2" />
<text  x="674.35" y="511.5" ></text>
</g>
<g >
<title>bn_sqr8x_internal (9,573 samples, 8.89%)</title><rect x="508.9" y="517" width="104.9" height="15.0" fill="rgb(241,19,32)" rx="2" ry="2" />
<text  x="511.90" y="527.5" >bn_sqr8x_int..</text>
</g>
<g >
<title>trg::protobuf::bannerd::BannerLimitMsg::BannerLimitMsg (11 samples, 0.01%)</title><rect x="1151.1" y="517" width="0.1" height="15.0" fill="rgb(244,5,31)" rx="2" ry="2" />
<text  x="1154.12" y="527.5" ></text>
</g>
<g >
<title>tcp_push_one (13 samples, 0.01%)</title><rect x="284.9" y="405" width="0.2" height="15.0" fill="rgb(242,226,5)" rx="2" ry="2" />
<text  x="287.93" y="415.5" ></text>
</g>
<g >
<title>bannerd::Engine::selectBanners (68 samples, 0.06%)</title><rect x="323.4" y="501" width="0.7" height="15.0" fill="rgb(226,103,40)" rx="2" ry="2" />
<text  x="326.36" y="511.5" ></text>
</g>
<g >
<title>futex_wake (21 samples, 0.02%)</title><rect x="143.4" y="437" width="0.2" height="15.0" fill="rgb(254,46,16)" rx="2" ry="2" />
<text  x="146.39" y="447.5" ></text>
</g>
<g >
<title>llist_add_batch (11 samples, 0.01%)</title><rect x="181.3" y="405" width="0.1" height="15.0" fill="rgb(219,113,44)" rx="2" ry="2" />
<text  x="184.26" y="415.5" ></text>
</g>
<g >
<title>trg::protobuf::rb2::TargetMsg::SerializeWithCachedSizesToArray (252 samples, 0.23%)</title><rect x="1159.7" y="517" width="2.7" height="15.0" fill="rgb(250,66,51)" rx="2" ry="2" />
<text  x="1162.67" y="527.5" ></text>
</g>
<g >
<title>__lower_bound&lt;const (anonymous namespace)::ProcFunction*, (anonymous namespace)::ProcFunction, __gnu_cxx::__ops::_Iter_comp_val&lt;(anonymous namespace)::findFunction (15 samples, 0.01%)</title><rect x="322.7" y="437" width="0.2" height="15.0" fill="rgb(223,60,20)" rx="2" ry="2" />
<text  x="325.71" y="447.5" ></text>
</g>
<g >
<title>call_function_single_interrupt (18 samples, 0.02%)</title><rect x="802.3" y="501" width="0.2" height="15.0" fill="rgb(230,22,0)" rx="2" ry="2" />
<text  x="805.26" y="511.5" ></text>
</g>
<g >
<title>local_apic_timer_interrupt (20 samples, 0.02%)</title><rect x="802.0" y="469" width="0.3" height="15.0" fill="rgb(206,158,50)" rx="2" ry="2" />
<text  x="805.04" y="479.5" ></text>
</g>
<g >
<title>bannerd::store::ActiveCampaignIndex::setPadFilters (200 samples, 0.19%)</title><rect x="432.1" y="421" width="2.2" height="15.0" fill="rgb(209,206,11)" rx="2" ry="2" />
<text  x="435.06" y="431.5" ></text>
</g>
<g >
<title>target::bitmap::Index&lt;unsigned int, unsigned int, std::unordered_map&lt;unsigned int, unsigned int, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, unsigned int&gt; &gt; &gt; &gt;::Mapping::operator (47 samples, 0.04%)</title><rect x="421.5" y="485" width="0.5" height="15.0" fill="rgb(244,148,16)" rx="2" ry="2" />
<text  x="424.47" y="495.5" ></text>
</g>
<g >
<title>tcp_push (14 samples, 0.01%)</title><rect x="142.5" y="389" width="0.2" height="15.0" fill="rgb(236,79,25)" rx="2" ry="2" />
<text  x="145.54" y="399.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (122 samples, 0.11%)</title><rect x="943.0" y="421" width="1.4" height="15.0" fill="rgb(210,171,47)" rx="2" ry="2" />
<text  x="946.04" y="431.5" ></text>
</g>
<g >
<title>_IO_str_init_static_internal (20 samples, 0.02%)</title><rect x="167.5" y="517" width="0.2" height="15.0" fill="rgb(210,18,27)" rx="2" ry="2" />
<text  x="170.51" y="527.5" ></text>
</g>
<g >
<title>def_get_class (231 samples, 0.21%)</title><rect x="630.8" y="517" width="2.5" height="15.0" fill="rgb(246,133,25)" rx="2" ry="2" />
<text  x="633.78" y="527.5" ></text>
</g>
<g >
<title>tcmalloc::ThreadCache::FreeList::Push (23 samples, 0.02%)</title><rect x="279.9" y="437" width="0.3" height="15.0" fill="rgb(231,131,44)" rx="2" ry="2" />
<text  x="282.92" y="447.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt; &gt; (62 samples, 0.06%)</title><rect x="924.4" y="453" width="0.7" height="15.0" fill="rgb(240,111,13)" rx="2" ry="2" />
<text  x="927.40" y="463.5" ></text>
</g>
<g >
<title>__strlen_sse2_pminub (58 samples, 0.05%)</title><rect x="668.6" y="469" width="0.6" height="15.0" fill="rgb(243,214,33)" rx="2" ry="2" />
<text  x="671.58" y="479.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (172 samples, 0.16%)</title><rect x="291.3" y="517" width="1.9" height="15.0" fill="rgb(245,39,48)" rx="2" ry="2" />
<text  x="294.27" y="527.5" ></text>
</g>
<g >
<title>__irqentry_text_start (12 samples, 0.01%)</title><rect x="381.0" y="453" width="0.1" height="15.0" fill="rgb(253,103,3)" rx="2" ry="2" />
<text  x="384.01" y="463.5" ></text>
</g>
<g >
<title>__GI_epoll_ctl (22 samples, 0.02%)</title><rect x="1169.5" y="501" width="0.3" height="15.0" fill="rgb(238,65,33)" rx="2" ry="2" />
<text  x="1172.55" y="511.5" ></text>
</g>
<g >
<title>asn1_template_noexp_d2i (38 samples, 0.04%)</title><rect x="312.9" y="517" width="0.4" height="15.0" fill="rgb(219,221,48)" rx="2" ry="2" />
<text  x="315.92" y="527.5" ></text>
</g>
<g >
<title>start_thread (16 samples, 0.01%)</title><rect x="278.2" y="501" width="0.1" height="15.0" fill="rgb(223,29,28)" rx="2" ry="2" />
<text  x="281.16" y="511.5" ></text>
</g>
<g >
<title>base::subtle::NoBarrier_AtomicExchange (12 samples, 0.01%)</title><rect x="1143.6" y="453" width="0.1" height="15.0" fill="rgb(234,208,6)" rx="2" ry="2" />
<text  x="1146.62" y="463.5" ></text>
</g>
<g >
<title>rb2::RbMap::encrypt (44 samples, 0.04%)</title><rect x="833.2" y="517" width="0.4" height="15.0" fill="rgb(221,229,25)" rx="2" ry="2" />
<text  x="836.16" y="527.5" ></text>
</g>
<g >
<title>binarySearch&lt;const (anonymous namespace)::ProcFunction*, (anonymous namespace)::ProcFunction, (anonymous namespace)::findFunction (679 samples, 0.63%)</title><rect x="690.3" y="485" width="7.4" height="15.0" fill="rgb(252,43,4)" rx="2" ry="2" />
<text  x="693.26" y="495.5" ></text>
</g>
<g >
<title>nmi (16 samples, 0.01%)</title><rect x="811.9" y="501" width="0.2" height="15.0" fill="rgb(216,212,12)" rx="2" ry="2" />
<text  x="814.90" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, std::string&gt;, std::_Select1st&lt;std::pair&lt;std::string const, std::string&gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::lower_bound (648 samples, 0.60%)</title><rect x="843.6" y="469" width="7.1" height="15.0" fill="rgb(213,69,7)" rx="2" ry="2" />
<text  x="846.60" y="479.5" ></text>
</g>
<g >
<title>irq_exit (11 samples, 0.01%)</title><rect x="381.0" y="437" width="0.1" height="15.0" fill="rgb(244,57,4)" rx="2" ry="2" />
<text  x="384.02" y="447.5" ></text>
</g>
<g >
<title>applyPositiveFilters (283 samples, 0.26%)</title><rect x="431.2" y="485" width="3.1" height="15.0" fill="rgb(224,104,21)" rx="2" ry="2" />
<text  x="434.15" y="495.5" ></text>
</g>
<g >
<title>tcmalloc::SLL_TryPop (12 samples, 0.01%)</title><rect x="1139.4" y="453" width="0.1" height="15.0" fill="rgb(235,143,16)" rx="2" ry="2" />
<text  x="1142.39" y="463.5" ></text>
</g>
<g >
<title>std::unordered_set&lt;target::dynamic_bitset, std::hash&lt;target::dynamic_bitset&gt;, std::equal_to&lt;target::dynamic_bitset&gt;, std::allocator&lt;target::dynamic_bitset&gt; &gt;::insert (205 samples, 0.19%)</title><rect x="439.5" y="501" width="2.3" height="15.0" fill="rgb(223,127,29)" rx="2" ry="2" />
<text  x="442.54" y="511.5" ></text>
</g>
<g >
<title>__memcpy_ssse3_back (50 samples, 0.05%)</title><rect x="310.3" y="485" width="0.6" height="15.0" fill="rgb(242,229,11)" rx="2" ry="2" />
<text  x="313.33" y="495.5" ></text>
</g>
<g >
<title>base::subtle::Release_AtomicExchange (12 samples, 0.01%)</title><rect x="1143.6" y="469" width="0.1" height="15.0" fill="rgb(212,184,54)" rx="2" ry="2" />
<text  x="1146.62" y="479.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (18 samples, 0.02%)</title><rect x="931.1" y="341" width="0.2" height="15.0" fill="rgb(213,30,24)" rx="2" ry="2" />
<text  x="934.05" y="351.5" ></text>
</g>
<g >
<title>google::protobuf::Message::~Message (18 samples, 0.02%)</title><rect x="705.1" y="517" width="0.2" height="15.0" fill="rgb(226,159,24)" rx="2" ry="2" />
<text  x="708.12" y="527.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::operator (555 samples, 0.52%)</title><rect x="844.6" y="437" width="6.1" height="15.0" fill="rgb(248,173,44)" rx="2" ry="2" />
<text  x="847.62" y="447.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (10 samples, 0.01%)</title><rect x="290.4" y="405" width="0.1" height="15.0" fill="rgb(219,22,38)" rx="2" ry="2" />
<text  x="293.44" y="415.5" ></text>
</g>
<g >
<title>BN_rshift (202 samples, 0.19%)</title><rect x="74.6" y="517" width="2.2" height="15.0" fill="rgb(210,196,7)" rx="2" ry="2" />
<text  x="77.63" y="527.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (12 samples, 0.01%)</title><rect x="284.5" y="69" width="0.1" height="15.0" fill="rgb(244,218,51)" rx="2" ry="2" />
<text  x="287.51" y="79.5" ></text>
</g>
<g >
<title>nmi (35 samples, 0.03%)</title><rect x="71.6" y="501" width="0.4" height="15.0" fill="rgb(216,39,21)" rx="2" ry="2" />
<text  x="74.59" y="511.5" ></text>
</g>
<g >
<title>tcmalloc::ThreadCache::FreeList::TryPop (28 samples, 0.03%)</title><rect x="944.0" y="357" width="0.3" height="15.0" fill="rgb(208,181,39)" rx="2" ry="2" />
<text  x="946.98" y="367.5" ></text>
</g>
<g >
<title>ctx_sched_in (35 samples, 0.03%)</title><rect x="145.9" y="325" width="0.4" height="15.0" fill="rgb(223,150,13)" rx="2" ry="2" />
<text  x="148.88" y="335.5" ></text>
</g>
<g >
<title>igb_poll (13 samples, 0.01%)</title><rect x="277.2" y="389" width="0.1" height="15.0" fill="rgb(240,166,31)" rx="2" ry="2" />
<text  x="280.16" y="399.5" ></text>
</g>
<g >
<title>perf_pmu_disable (10 samples, 0.01%)</title><rect x="298.4" y="357" width="0.1" height="15.0" fill="rgb(213,187,29)" rx="2" ry="2" />
<text  x="301.44" y="367.5" ></text>
</g>
<g >
<title>system_call_after_swapgs (51 samples, 0.05%)</title><rect x="315.5" y="485" width="0.6" height="15.0" fill="rgb(231,144,21)" rx="2" ry="2" />
<text  x="318.49" y="495.5" ></text>
</g>
<g >
<title>futex_wait (60 samples, 0.06%)</title><rect x="852.9" y="405" width="0.6" height="15.0" fill="rgb(207,157,42)" rx="2" ry="2" />
<text  x="855.87" y="415.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::_S_cmp&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const&amp;, std::string const&amp;&gt; (10 samples, 0.01%)</title><rect x="688.9" y="453" width="0.1" height="15.0" fill="rgb(219,60,22)" rx="2" ry="2" />
<text  x="691.90" y="463.5" ></text>
</g>
<g >
<title>SYSC_sendto (24 samples, 0.02%)</title><rect x="142.4" y="453" width="0.3" height="15.0" fill="rgb(205,122,22)" rx="2" ry="2" />
<text  x="145.44" y="463.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (23 samples, 0.02%)</title><rect x="113.4" y="501" width="0.3" height="15.0" fill="rgb(252,89,25)" rx="2" ry="2" />
<text  x="116.40" y="511.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::find (36 samples, 0.03%)</title><rect x="672.4" y="453" width="0.4" height="15.0" fill="rgb(209,25,35)" rx="2" ry="2" />
<text  x="675.36" y="463.5" ></text>
</g>
<g >
<title>malloc_fast_path&lt;tcmalloc::cpp_throw_oom&gt; (34 samples, 0.03%)</title><rect x="943.9" y="389" width="0.4" height="15.0" fill="rgb(227,143,41)" rx="2" ry="2" />
<text  x="946.94" y="399.5" ></text>
</g>
<g >
<title>EVP_MD_CTX_clear_flags (17 samples, 0.02%)</title><rect x="102.2" y="517" width="0.2" height="15.0" fill="rgb(223,53,43)" rx="2" ry="2" />
<text  x="105.18" y="527.5" ></text>
</g>
<g >
<title>tcmalloc::ThreadCache::FreeList::TryPop (13 samples, 0.01%)</title><rect x="280.8" y="453" width="0.1" height="15.0" fill="rgb(213,222,45)" rx="2" ry="2" />
<text  x="283.75" y="463.5" ></text>
</g>
<g >
<title>__exchange_and_add (11 samples, 0.01%)</title><rect x="1156.7" y="437" width="0.1" height="15.0" fill="rgb(226,76,17)" rx="2" ry="2" />
<text  x="1159.67" y="447.5" ></text>
</g>
<g >
<title>do_futex (20 samples, 0.02%)</title><rect x="294.1" y="469" width="0.2" height="15.0" fill="rgb(251,174,41)" rx="2" ry="2" />
<text  x="297.10" y="479.5" ></text>
</g>
<g >
<title>__pthread_cond_timedwait (29 samples, 0.03%)</title><rect x="318.8" y="389" width="0.3" height="15.0" fill="rgb(234,204,31)" rx="2" ry="2" />
<text  x="321.78" y="399.5" ></text>
</g>
<g >
<title>bn_mul_words (312 samples, 0.29%)</title><rect x="505.5" y="517" width="3.4" height="15.0" fill="rgb(220,77,23)" rx="2" ry="2" />
<text  x="508.48" y="527.5" ></text>
</g>
<g >
<title>sys_futex (10 samples, 0.01%)</title><rect x="894.5" y="469" width="0.1" height="15.0" fill="rgb(241,193,18)" rx="2" ry="2" />
<text  x="897.50" y="479.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (78 samples, 0.07%)</title><rect x="128.6" y="469" width="0.9" height="15.0" fill="rgb(254,12,41)" rx="2" ry="2" />
<text  x="131.62" y="479.5" ></text>
</g>
<g >
<title>std::__uninitialized_fill_n_a&lt;unsigned long long*, unsigned long, unsigned long long, target::dynamic_bitset::AlignedAllocator&lt;unsigned long long&gt; &gt; (64 samples, 0.06%)</title><rect x="980.0" y="501" width="0.7" height="15.0" fill="rgb(214,151,47)" rx="2" ry="2" />
<text  x="983.00" y="511.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (18 samples, 0.02%)</title><rect x="853.6" y="405" width="0.2" height="15.0" fill="rgb(238,159,18)" rx="2" ry="2" />
<text  x="856.59" y="415.5" ></text>
</g>
<g >
<title>tcmalloc::SLL_SetNext (69 samples, 0.06%)</title><rect x="1121.4" y="405" width="0.7" height="15.0" fill="rgb(212,17,24)" rx="2" ry="2" />
<text  x="1124.39" y="415.5" ></text>
</g>
<g >
<title>__do_softirq (15 samples, 0.01%)</title><rect x="598.0" y="421" width="0.2" height="15.0" fill="rgb(251,206,21)" rx="2" ry="2" />
<text  x="601.03" y="431.5" ></text>
</g>
<g >
<title>inherit_task_group.isra.107.part.108 (221 samples, 0.21%)</title><rect x="139.3" y="405" width="2.4" height="15.0" fill="rgb(254,191,13)" rx="2" ry="2" />
<text  x="142.29" y="415.5" ></text>
</g>
<g >
<title>BN_usub (295 samples, 0.27%)</title><rect x="87.0" y="517" width="3.2" height="15.0" fill="rgb(232,193,19)" rx="2" ry="2" />
<text  x="89.97" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;target::dynamic_bitset, target::dynamic_bitset, std::__detail::_Identity, std::equal_to&lt;target::dynamic_bitset&gt;, unsigned long, true&gt;::_S_equals (107 samples, 0.10%)</title><rect x="439.6" y="405" width="1.1" height="15.0" fill="rgb(239,12,20)" rx="2" ry="2" />
<text  x="442.55" y="415.5" ></text>
</g>
<g >
<title>sysret_check (11 samples, 0.01%)</title><rect x="315.3" y="485" width="0.2" height="15.0" fill="rgb(244,123,34)" rx="2" ry="2" />
<text  x="318.35" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, std::string&gt;, std::_Select1st&lt;std::pair&lt;std::string const, std::string&gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::string const&amp;&gt;, std::tuple&lt;&gt; &gt; (93 samples, 0.09%)</title><rect x="925.9" y="517" width="1.0" height="15.0" fill="rgb(235,39,34)" rx="2" ry="2" />
<text  x="928.86" y="527.5" ></text>
</g>
<g >
<title>inline_mysql_rwlock_wrlock (51 samples, 0.05%)</title><rect x="30.6" y="469" width="0.5" height="15.0" fill="rgb(246,188,50)" rx="2" ry="2" />
<text  x="33.57" y="479.5" ></text>
</g>
<g >
<title>genBannerUrl (726 samples, 0.67%)</title><rect x="676.7" y="517" width="8.0" height="15.0" fill="rgb(226,44,23)" rx="2" ry="2" />
<text  x="679.70" y="527.5" ></text>
</g>
<g >
<title>lower_bound&lt;__gnu_cxx::__normal_iterator&lt;const bannerd::UrlObjectLimitEx* const*, std::vector&lt;const bannerd::UrlObjectLimitEx*&gt; &gt;, unsigned int, (anonymous namespace)::LessByTestId&gt; (12 samples, 0.01%)</title><rect x="329.3" y="501" width="0.1" height="15.0" fill="rgb(212,147,12)" rx="2" ry="2" />
<text  x="332.25" y="511.5" ></text>
</g>
<g >
<title>__memcpy_ssse3_back (15 samples, 0.01%)</title><rect x="293.2" y="517" width="0.2" height="15.0" fill="rgb(221,221,11)" rx="2" ry="2" />
<text  x="296.20" y="527.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::operator (66 samples, 0.06%)</title><rect x="924.4" y="485" width="0.7" height="15.0" fill="rgb(242,39,30)" rx="2" ry="2" />
<text  x="927.36" y="495.5" ></text>
</g>
<g >
<title>bannerd::details::InternalStorage::Record::Record (24 samples, 0.02%)</title><rect x="355.5" y="501" width="0.3" height="15.0" fill="rgb(232,6,40)" rx="2" ry="2" />
<text  x="358.54" y="511.5" ></text>
</g>
<g >
<title>perf_pmu_enable (42 samples, 0.04%)</title><rect x="293.5" y="373" width="0.5" height="15.0" fill="rgb(216,110,24)" rx="2" ry="2" />
<text  x="296.51" y="383.5" ></text>
</g>
<g >
<title>trg::protobuf::bannerd::ShowClickMsg::~ShowClickMsg (14 samples, 0.01%)</title><rect x="1156.9" y="517" width="0.1" height="15.0" fill="rgb(216,184,17)" rx="2" ry="2" />
<text  x="1159.85" y="527.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (69 samples, 0.06%)</title><rect x="852.8" y="485" width="0.7" height="15.0" fill="rgb(235,30,27)" rx="2" ry="2" />
<text  x="855.77" y="495.5" ></text>
</g>
<g >
<title>std::condition_variable::wait_for&lt;long, std::ratio&lt;1l, 1000l&gt;, bool rb::SafeQueueBase&lt;rb::queue_wrapper&lt;bannerd::Engine::MinerTask&gt; &gt;::timedPop&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt; (75 samples, 0.07%)</title><rect x="834.2" y="501" width="0.8" height="15.0" fill="rgb(247,217,32)" rx="2" ry="2" />
<text  x="837.17" y="511.5" ></text>
</g>
<g >
<title>futex_wait (495 samples, 0.46%)</title><rect x="185.3" y="453" width="5.4" height="15.0" fill="rgb(226,220,39)" rx="2" ry="2" />
<text  x="188.27" y="463.5" ></text>
</g>
<g >
<title>inline_mysql_rwlock_rdlock (225 samples, 0.21%)</title><rect x="27.4" y="469" width="2.5" height="15.0" fill="rgb(229,10,37)" rx="2" ry="2" />
<text  x="30.40" y="479.5" ></text>
</g>
<g >
<title>setBanner (13 samples, 0.01%)</title><rect x="427.0" y="469" width="0.2" height="15.0" fill="rgb(253,181,32)" rx="2" ry="2" />
<text  x="430.01" y="479.5" ></text>
</g>
<g >
<title>rb_insert_color (14 samples, 0.01%)</title><rect x="297.2" y="373" width="0.1" height="15.0" fill="rgb(235,14,41)" rx="2" ry="2" />
<text  x="300.19" y="383.5" ></text>
</g>
<g >
<title>tc_newarray (34 samples, 0.03%)</title><rect x="166.0" y="485" width="0.3" height="15.0" fill="rgb(244,32,47)" rx="2" ry="2" />
<text  x="168.96" y="495.5" ></text>
</g>
<g >
<title>wake_up_q (58 samples, 0.05%)</title><rect x="135.6" y="421" width="0.6" height="15.0" fill="rgb(230,31,16)" rx="2" ry="2" />
<text  x="138.55" y="431.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (29 samples, 0.03%)</title><rect x="922.5" y="453" width="0.3" height="15.0" fill="rgb(215,27,47)" rx="2" ry="2" />
<text  x="925.52" y="463.5" ></text>
</g>
<g >
<title>sys_futex (24 samples, 0.02%)</title><rect x="907.4" y="405" width="0.3" height="15.0" fill="rgb(247,194,13)" rx="2" ry="2" />
<text  x="910.39" y="415.5" ></text>
</g>
<g >
<title>futex_wake (22 samples, 0.02%)</title><rect x="907.4" y="373" width="0.3" height="15.0" fill="rgb(248,223,34)" rx="2" ry="2" />
<text  x="910.41" y="383.5" ></text>
</g>
<g >
<title>malloc_fast_path&lt;tcmalloc::cpp_throw_oom&gt; (517 samples, 0.48%)</title><rect x="1132.9" y="501" width="5.6" height="15.0" fill="rgb(220,224,17)" rx="2" ry="2" />
<text  x="1135.87" y="511.5" ></text>
</g>
<g >
<title>std::string::_M_check_length (13 samples, 0.01%)</title><rect x="965.6" y="501" width="0.1" height="15.0" fill="rgb(244,200,40)" rx="2" ry="2" />
<text  x="968.61" y="511.5" ></text>
</g>
<g >
<title>rapidjson::GenericValue&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::CrtAllocator&gt;::ShortString::GetLength (16 samples, 0.01%)</title><rect x="1150.4" y="437" width="0.2" height="15.0" fill="rgb(210,172,39)" rx="2" ry="2" />
<text  x="1153.43" y="447.5" ></text>
</g>
<g >
<title>system_call_fastpath (10 samples, 0.01%)</title><rect x="144.6" y="485" width="0.1" height="15.0" fill="rgb(253,186,51)" rx="2" ry="2" />
<text  x="147.59" y="495.5" ></text>
</g>
<g >
<title>bannerd::engine::TargetMessagePacker::writeCosts (47 samples, 0.04%)</title><rect x="411.8" y="517" width="0.5" height="15.0" fill="rgb(243,92,21)" rx="2" ry="2" />
<text  x="414.82" y="527.5" ></text>
</g>
<g >
<title>ctx_sched_in (45 samples, 0.04%)</title><rect x="187.8" y="341" width="0.5" height="15.0" fill="rgb(226,194,49)" rx="2" ry="2" />
<text  x="190.82" y="351.5" ></text>
</g>
<g >
<title>schedule (15 samples, 0.01%)</title><rect x="853.6" y="389" width="0.2" height="15.0" fill="rgb(223,137,39)" rx="2" ry="2" />
<text  x="856.63" y="399.5" ></text>
</g>
<g >
<title>nmi (15 samples, 0.01%)</title><rect x="98.7" y="501" width="0.2" height="15.0" fill="rgb(248,214,12)" rx="2" ry="2" />
<text  x="101.74" y="511.5" ></text>
</g>
<g >
<title>std::string::append (1,080 samples, 1.00%)</title><rect x="953.0" y="517" width="11.8" height="15.0" fill="rgb(244,89,28)" rx="2" ry="2" />
<text  x="956.00" y="527.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::find_first (22 samples, 0.02%)</title><rect x="436.0" y="485" width="0.3" height="15.0" fill="rgb(212,154,41)" rx="2" ry="2" />
<text  x="439.05" y="495.5" ></text>
</g>
<g >
<title>_paravirt_nop (13 samples, 0.01%)</title><rect x="301.9" y="293" width="0.2" height="15.0" fill="rgb(242,95,27)" rx="2" ry="2" />
<text  x="304.94" y="303.5" ></text>
</g>
<g >
<title>x86_pmu_event_init (81 samples, 0.08%)</title><rect x="140.8" y="325" width="0.8" height="15.0" fill="rgb(246,150,34)" rx="2" ry="2" />
<text  x="143.75" y="335.5" ></text>
</g>
<g >
<title>google::protobuf::io::CodedOutputStream::WriteStringToArray (35 samples, 0.03%)</title><rect x="707.0" y="501" width="0.4" height="15.0" fill="rgb(239,6,27)" rx="2" ry="2" />
<text  x="710.04" y="511.5" ></text>
</g>
<g >
<title>trg::protobuf::bannerd::ShowClickMsg::SharedDtor (93 samples, 0.09%)</title><rect x="1155.8" y="517" width="1.0" height="15.0" fill="rgb(245,83,17)" rx="2" ry="2" />
<text  x="1158.77" y="527.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;unsigned char const&amp;, unsigned int const&amp;, unsigned char const&amp;, unsigned int const&amp;&gt;, std::tuple&lt;unsigned char const&amp;, unsigned int const&amp;, unsigned char const&amp;, unsigned int const&amp;&gt;, 0ul, 4ul&gt;::__less (10 samples, 0.01%)</title><rect x="151.3" y="469" width="0.1" height="15.0" fill="rgb(225,24,5)" rx="2" ry="2" />
<text  x="154.27" y="479.5" ></text>
</g>
<g >
<title>SYSC_recvfrom (23 samples, 0.02%)</title><rect x="281.7" y="469" width="0.2" height="15.0" fill="rgb(241,208,48)" rx="2" ry="2" />
<text  x="284.69" y="479.5" ></text>
</g>
<g >
<title>nmi (1,362 samples, 1.26%)</title><rect x="598.6" y="501" width="14.9" height="15.0" fill="rgb(227,194,22)" rx="2" ry="2" />
<text  x="601.56" y="511.5" ></text>
</g>
<g >
<title>schedule (74 samples, 0.07%)</title><rect x="128.7" y="437" width="0.8" height="15.0" fill="rgb(220,187,22)" rx="2" ry="2" />
<text  x="131.66" y="447.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (30 samples, 0.03%)</title><rect x="959.1" y="485" width="0.3" height="15.0" fill="rgb(228,210,16)" rx="2" ry="2" />
<text  x="962.07" y="495.5" ></text>
</g>
<g >
<title>BN_from_montgomery_word (446 samples, 0.41%)</title><rect x="51.9" y="517" width="4.9" height="15.0" fill="rgb(219,160,10)" rx="2" ry="2" />
<text  x="54.92" y="527.5" ></text>
</g>
<g >
<title>tcmalloc::ThreadCache::FreeList::PopRange (57 samples, 0.05%)</title><rect x="1147.4" y="501" width="0.6" height="15.0" fill="rgb(248,185,35)" rx="2" ry="2" />
<text  x="1150.39" y="511.5" ></text>
</g>
<g >
<title>std::map&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (20 samples, 0.02%)</title><rect x="815.6" y="469" width="0.2" height="15.0" fill="rgb(232,87,51)" rx="2" ry="2" />
<text  x="818.60" y="479.5" ></text>
</g>
<g >
<title>futex_wake (92 samples, 0.09%)</title><rect x="290.0" y="453" width="1.0" height="15.0" fill="rgb(215,137,35)" rx="2" ry="2" />
<text  x="293.00" y="463.5" ></text>
</g>
<g >
<title>visit_groups_merge (14 samples, 0.01%)</title><rect x="899.5" y="293" width="0.2" height="15.0" fill="rgb(207,212,18)" rx="2" ry="2" />
<text  x="902.53" y="303.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (631 samples, 0.59%)</title><rect x="937.5" y="517" width="6.9" height="15.0" fill="rgb(248,90,26)" rx="2" ry="2" />
<text  x="940.46" y="527.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::lock (13 samples, 0.01%)</title><rect x="322.0" y="469" width="0.1" height="15.0" fill="rgb(210,229,51)" rx="2" ry="2" />
<text  x="324.96" y="479.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned long long const*, std::vector&lt;unsigned long long, target::dynamic_bitset::AlignedAllocator&lt;unsigned long long&gt; &gt; &gt;, unsigned long long*, target::dynamic_bitset::AlignedAllocator&lt;unsigned long long&gt; &gt; (113 samples, 0.10%)</title><rect x="980.8" y="501" width="1.2" height="15.0" fill="rgb(251,155,6)" rx="2" ry="2" />
<text  x="983.81" y="511.5" ></text>
</g>
<g >
<title>__includes&lt;__gnu_cxx::__normal_iterator&lt;const bannerd::details::InternalStorage::Record*, std::vector&lt;bannerd::details::InternalStorage::Record&gt; &gt;, boost::container::vec_iterator&lt;std::basic_string&lt;char&gt;*, true&gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;(anonymous namespace)::CompareByRole&gt; &gt; (1,072 samples, 1.00%)</title><rect x="393.5" y="485" width="11.7" height="15.0" fill="rgb(220,192,54)" rx="2" ry="2" />
<text  x="396.48" y="495.5" ></text>
</g>
<g >
<title>writeUrlObjectsLimits (15 samples, 0.01%)</title><rect x="1170.6" y="517" width="0.2" height="15.0" fill="rgb(243,92,28)" rx="2" ry="2" />
<text  x="1173.60" y="527.5" ></text>
</g>
<g >
<title>schedule (25 samples, 0.02%)</title><rect x="194.9" y="389" width="0.3" height="15.0" fill="rgb(235,196,14)" rx="2" ry="2" />
<text  x="197.90" y="399.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (11 samples, 0.01%)</title><rect x="968.3" y="453" width="0.1" height="15.0" fill="rgb(213,27,44)" rx="2" ry="2" />
<text  x="971.31" y="463.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::_S_cmp&lt;std::string const&amp;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const&amp;&gt; (78 samples, 0.07%)</title><rect x="685.0" y="405" width="0.9" height="15.0" fill="rgb(206,41,8)" rx="2" ry="2" />
<text  x="688.00" y="415.5" ></text>
</g>
<g >
<title>update_time (31 samples, 0.03%)</title><rect x="277.7" y="357" width="0.4" height="15.0" fill="rgb(213,102,40)" rx="2" ry="2" />
<text  x="280.72" y="367.5" ></text>
</g>
<g >
<title>native_rw_unlock (35 samples, 0.03%)</title><rect x="631.6" y="453" width="0.4" height="15.0" fill="rgb(218,153,6)" rx="2" ry="2" />
<text  x="634.60" y="463.5" ></text>
</g>
<g >
<title>system_call_fastpath (10 samples, 0.01%)</title><rect x="134.0" y="469" width="0.1" height="15.0" fill="rgb(209,142,42)" rx="2" ry="2" />
<text  x="136.96" y="479.5" ></text>
</g>
<g >
<title>bn_expand_internal (39 samples, 0.04%)</title><rect x="80.4" y="485" width="0.4" height="15.0" fill="rgb(250,226,35)" rx="2" ry="2" />
<text  x="83.38" y="495.5" ></text>
</g>
<g >
<title>system_call_fastpath (286 samples, 0.27%)</title><rect x="282.1" y="501" width="3.1" height="15.0" fill="rgb(249,219,53)" rx="2" ry="2" />
<text  x="285.09" y="511.5" ></text>
</g>
<g >
<title>__memcpy_ssse3_back (68 samples, 0.06%)</title><rect x="973.6" y="453" width="0.8" height="15.0" fill="rgb(227,199,20)" rx="2" ry="2" />
<text  x="976.62" y="463.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::getWide (77 samples, 0.07%)</title><rect x="1104.9" y="501" width="0.9" height="15.0" fill="rgb(254,3,22)" rx="2" ry="2" />
<text  x="1107.95" y="511.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::operator (130 samples, 0.12%)</title><rect x="945.6" y="453" width="1.4" height="15.0" fill="rgb(213,24,36)" rx="2" ry="2" />
<text  x="948.62" y="463.5" ></text>
</g>
<g >
<title>rapidjson::GenericValue&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::CrtAllocator&gt;::FindMember&lt;rapidjson::CrtAllocator&gt; (82 samples, 0.08%)</title><rect x="1149.7" y="485" width="0.9" height="15.0" fill="rgb(207,125,33)" rx="2" ry="2" />
<text  x="1152.71" y="495.5" ></text>
</g>
<g >
<title>ep_poll (43 samples, 0.04%)</title><rect x="128.0" y="469" width="0.5" height="15.0" fill="rgb(222,139,21)" rx="2" ry="2" />
<text  x="131.05" y="479.5" ></text>
</g>
<g >
<title>sys_futex (10 samples, 0.01%)</title><rect x="916.7" y="405" width="0.1" height="15.0" fill="rgb(237,196,9)" rx="2" ry="2" />
<text  x="919.68" y="415.5" ></text>
</g>
<g >
<title>target::dynamic_bitset::operator&amp;= (17 samples, 0.02%)</title><rect x="422.0" y="501" width="0.2" height="15.0" fill="rgb(233,218,51)" rx="2" ry="2" />
<text  x="424.98" y="511.5" ></text>
</g>
<g >
<title>tcmalloc::ThreadCache::Deallocate (494 samples, 0.46%)</title><rect x="1116.7" y="453" width="5.4" height="15.0" fill="rgb(221,26,26)" rx="2" ry="2" />
<text  x="1119.74" y="463.5" ></text>
</g>
<g >
<title>dequeue_entity (12 samples, 0.01%)</title><rect x="899.3" y="325" width="0.1" height="15.0" fill="rgb(230,222,52)" rx="2" ry="2" />
<text  x="902.31" y="335.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt; &gt; (83 samples, 0.08%)</title><rect x="686.7" y="389" width="0.9" height="15.0" fill="rgb(243,115,8)" rx="2" ry="2" />
<text  x="689.72" y="399.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (11 samples, 0.01%)</title><rect x="702.6" y="485" width="0.1" height="15.0" fill="rgb(244,220,36)" rx="2" ry="2" />
<text  x="705.61" y="495.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (12 samples, 0.01%)</title><rect x="381.7" y="357" width="0.1" height="15.0" fill="rgb(233,191,7)" rx="2" ry="2" />
<text  x="384.66" y="367.5" ></text>
</g>
<g >
<title>std::string::size (34 samples, 0.03%)</title><rect x="843.2" y="421" width="0.4" height="15.0" fill="rgb(240,214,47)" rx="2" ry="2" />
<text  x="846.23" y="431.5" ></text>
</g>
<g >
<title>_M_find_before_node (13 samples, 0.01%)</title><rect x="134.1" y="501" width="0.2" height="15.0" fill="rgb(249,8,20)" rx="2" ry="2" />
<text  x="137.14" y="511.5" ></text>
</g>
<g >
<title>system_call_fastpath (69 samples, 0.06%)</title><rect x="277.4" y="485" width="0.7" height="15.0" fill="rgb(223,61,16)" rx="2" ry="2" />
<text  x="280.37" y="495.5" ></text>
</g>
<g >
<title>wake_up_q (12 samples, 0.01%)</title><rect x="907.5" y="357" width="0.2" height="15.0" fill="rgb(248,186,3)" rx="2" ry="2" />
<text  x="910.52" y="367.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (170 samples, 0.16%)</title><rect x="134.4" y="501" width="1.8" height="15.0" fill="rgb(226,74,53)" rx="2" ry="2" />
<text  x="137.36" y="511.5" ></text>
</g>
<g >
<title>inline_mysql_rwlock_unlock (16 samples, 0.01%)</title><rect x="91.1" y="453" width="0.2" height="15.0" fill="rgb(207,59,24)" rx="2" ry="2" />
<text  x="94.11" y="463.5" ></text>
</g>
<g >
<title>[bannerd] (27 samples, 0.03%)</title><rect x="892.9" y="501" width="0.3" height="15.0" fill="rgb(249,16,49)" rx="2" ry="2" />
<text  x="895.93" y="511.5" ></text>
</g>
<g >
<title>asn1_d2i_ex_primitive (50 samples, 0.05%)</title><rect x="311.7" y="517" width="0.6" height="15.0" fill="rgb(224,115,22)" rx="2" ry="2" />
<text  x="314.75" y="527.5" ></text>
</g>
<g >
<title>perf_pmu_disable (10 samples, 0.01%)</title><rect x="305.2" y="341" width="0.1" height="15.0" fill="rgb(249,27,49)" rx="2" ry="2" />
<text  x="308.18" y="351.5" ></text>
</g>
<g >
<title>__strlen_sse2_pminub (46 samples, 0.04%)</title><rect x="308.8" y="517" width="0.5" height="15.0" fill="rgb(223,24,47)" rx="2" ry="2" />
<text  x="311.82" y="527.5" ></text>
</g>
<g >
<title>MapObjectToSpan (44 samples, 0.04%)</title><rect x="1142.8" y="469" width="0.5" height="15.0" fill="rgb(218,157,46)" rx="2" ry="2" />
<text  x="1145.82" y="479.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (17 samples, 0.02%)</title><rect x="807.7" y="437" width="0.2" height="15.0" fill="rgb(210,128,21)" rx="2" ry="2" />
<text  x="810.73" y="447.5" ></text>
</g>
<g >
<title>optional_field_pack (13 samples, 0.01%)</title><rect x="832.2" y="501" width="0.2" height="15.0" fill="rgb(246,171,26)" rx="2" ry="2" />
<text  x="835.22" y="511.5" ></text>
</g>
<g >
<title>sysret_check (92 samples, 0.09%)</title><rect x="171.3" y="501" width="1.0" height="15.0" fill="rgb(239,205,34)" rx="2" ry="2" />
<text  x="174.27" y="511.5" ></text>
</g>
<g >
<title>__libc_malloc (20 samples, 0.02%)</title><rect x="280.3" y="501" width="0.2" height="15.0" fill="rgb(242,4,6)" rx="2" ry="2" />
<text  x="283.26" y="511.5" ></text>
</g>
<g >
<title>vlan_dev_hard_start_xmit (12 samples, 0.01%)</title><rect x="284.7" y="213" width="0.2" height="15.0" fill="rgb(235,171,49)" rx="2" ry="2" />
<text  x="287.72" y="223.5" ></text>
</g>
<g >
<title>malloc_fast_path&lt;tcmalloc::cpp_throw_oom&gt; (134 samples, 0.12%)</title><rect x="164.5" y="485" width="1.5" height="15.0" fill="rgb(215,224,13)" rx="2" ry="2" />
<text  x="167.49" y="495.5" ></text>
</g>
<g >
<title>inet_recvmsg (19 samples, 0.02%)</title><rect x="281.7" y="437" width="0.2" height="15.0" fill="rgb(219,126,49)" rx="2" ry="2" />
<text  x="284.70" y="447.5" ></text>
</g>
<g >
<title>do_futex (19 samples, 0.02%)</title><rect x="113.4" y="453" width="0.2" height="15.0" fill="rgb(216,199,13)" rx="2" ry="2" />
<text  x="116.43" y="463.5" ></text>
</g>
<g >
<title>base::internal::HookList&lt;void  (45 samples, 0.04%)</title><rect x="1113.0" y="485" width="0.4" height="15.0" fill="rgb(241,207,10)" rx="2" ry="2" />
<text  x="1115.96" y="495.5" ></text>
</g>
<g >
<title>std::string::_M_copy (74 samples, 0.07%)</title><rect x="952.2" y="485" width="0.8" height="15.0" fill="rgb(217,73,1)" rx="2" ry="2" />
<text  x="955.19" y="495.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (42 samples, 0.04%)</title><rect x="308.2" y="453" width="0.5" height="15.0" fill="rgb(230,100,28)" rx="2" ry="2" />
<text  x="311.21" y="463.5" ></text>
</g>
<g >
<title>bannerd::UrlLimitsIndex::lookup (85 samples, 0.08%)</title><rect x="328.5" y="517" width="1.0" height="15.0" fill="rgb(235,104,36)" rx="2" ry="2" />
<text  x="331.54" y="527.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (13 samples, 0.01%)</title><rect x="142.6" y="373" width="0.1" height="15.0" fill="rgb(226,27,24)" rx="2" ry="2" />
<text  x="145.55" y="383.5" ></text>
</g>
<g >
<title>__schedule (816 samples, 0.76%)</title><rect x="297.6" y="405" width="9.0" height="15.0" fill="rgb(238,37,11)" rx="2" ry="2" />
<text  x="300.65" y="415.5" ></text>
</g>
<g >
<title>__exchange_and_add (78 samples, 0.07%)</title><rect x="840.7" y="421" width="0.9" height="15.0" fill="rgb(254,123,47)" rx="2" ry="2" />
<text  x="843.70" y="431.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt; &gt; (29 samples, 0.03%)</title><rect x="922.5" y="469" width="0.3" height="15.0" fill="rgb(231,142,23)" rx="2" ry="2" />
<text  x="925.52" y="479.5" ></text>
</g>
<g >
<title>__memcpy_ssse3_back (61 samples, 0.06%)</title><rect x="115.4" y="501" width="0.6" height="15.0" fill="rgb(228,68,21)" rx="2" ry="2" />
<text  x="118.35" y="511.5" ></text>
</g>
<g >
<title>std::less&lt;void&gt;::operator (12 samples, 0.01%)</title><rect x="701.7" y="469" width="0.2" height="15.0" fill="rgb(249,211,31)" rx="2" ry="2" />
<text  x="704.72" y="479.5" ></text>
</g>
<g >
<title>boost::container::dtl::flat_tree&lt;unsigned int, boost::move_detail::identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, boost::container::new_allocator&lt;unsigned int&gt; &gt;::lower_bound (20 samples, 0.02%)</title><rect x="412.1" y="469" width="0.2" height="15.0" fill="rgb(224,80,9)" rx="2" ry="2" />
<text  x="415.07" y="479.5" ></text>
</g>
<g >
<title>std::string::compare (47 samples, 0.04%)</title><rect x="681.5" y="421" width="0.5" height="15.0" fill="rgb(219,173,37)" rx="2" ry="2" />
<text  x="684.46" y="431.5" ></text>
</g>
<g >
<title>tcmalloc::PageHeap::GetDescriptor (13 samples, 0.01%)</title><rect x="642.2" y="421" width="0.1" height="15.0" fill="rgb(233,76,10)" rx="2" ry="2" />
<text  x="645.19" y="431.5" ></text>
</g>
<g >
<title>sys_nanosleep (10 samples, 0.01%)</title><rect x="144.6" y="469" width="0.1" height="15.0" fill="rgb(216,20,3)" rx="2" ry="2" />
<text  x="147.59" y="479.5" ></text>
</g>
<g >
<title>net_rx_action (13 samples, 0.01%)</title><rect x="277.2" y="405" width="0.1" height="15.0" fill="rgb(211,47,37)" rx="2" ry="2" />
<text  x="280.16" y="415.5" ></text>
</g>
<g >
<title>sys_nanosleep (10 samples, 0.01%)</title><rect x="1146.7" y="469" width="0.1" height="15.0" fill="rgb(218,203,28)" rx="2" ry="2" />
<text  x="1149.71" y="479.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (47 samples, 0.04%)</title><rect x="598.0" y="485" width="0.5" height="15.0" fill="rgb(208,47,16)" rx="2" ry="2" />
<text  x="601.02" y="495.5" ></text>
</g>
<g >
<title>system_call_fastpath (24 samples, 0.02%)</title><rect x="142.4" y="485" width="0.3" height="15.0" fill="rgb(215,38,34)" rx="2" ry="2" />
<text  x="145.44" y="495.5" ></text>
</g>
<g >
<title>__memset_sse2 (12 samples, 0.01%)</title><rect x="154.9" y="389" width="0.2" height="15.0" fill="rgb(205,51,17)" rx="2" ry="2" />
<text  x="157.93" y="399.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (221 samples, 0.21%)</title><rect x="27.4" y="437" width="2.5" height="15.0" fill="rgb(250,100,19)" rx="2" ry="2" />
<text  x="30.44" y="447.5" ></text>
</g>
<g >
<title>do_realloc (67 samples, 0.06%)</title><rect x="280.9" y="501" width="0.8" height="15.0" fill="rgb(226,217,52)" rx="2" ry="2" />
<text  x="283.93" y="511.5" ></text>
</g>
<g >
<title>getprocEnv (24 samples, 0.02%)</title><rect x="698.9" y="517" width="0.3" height="15.0" fill="rgb(218,9,48)" rx="2" ry="2" />
<text  x="701.91" y="527.5" ></text>
</g>
<g >
<title>net_rx_action (18 samples, 0.02%)</title><rect x="284.5" y="197" width="0.2" height="15.0" fill="rgb(241,222,13)" rx="2" ry="2" />
<text  x="287.48" y="207.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;unsigned char const&amp;, unsigned int const&amp;, unsigned char const&amp;, unsigned int const&amp;, unsigned char const&amp;, unsigned int const&amp;, unsigned char const&amp;, unsigned int const&amp;&gt; (10 samples, 0.01%)</title><rect x="151.3" y="485" width="0.1" height="15.0" fill="rgb(215,176,32)" rx="2" ry="2" />
<text  x="154.27" y="495.5" ></text>
</g>
<g >
<title>schedule (19 samples, 0.02%)</title><rect x="318.9" y="293" width="0.2" height="15.0" fill="rgb(235,206,9)" rx="2" ry="2" />
<text  x="321.89" y="303.5" ></text>
</g>
<g >
<title>operator (36 samples, 0.03%)</title><rect x="418.0" y="485" width="0.4" height="15.0" fill="rgb(220,145,20)" rx="2" ry="2" />
<text  x="420.99" y="495.5" ></text>
</g>
<g >
<title>_itoa_word (11 samples, 0.01%)</title><rect x="986.9" y="453" width="0.2" height="15.0" fill="rgb(244,57,53)" rx="2" ry="2" />
<text  x="989.94" y="463.5" ></text>
</g>
<g >
<title>parseVars (97 samples, 0.09%)</title><rect x="671.7" y="501" width="1.1" height="15.0" fill="rgb(228,143,41)" rx="2" ry="2" />
<text  x="674.71" y="511.5" ></text>
</g>
</g>
</svg>
